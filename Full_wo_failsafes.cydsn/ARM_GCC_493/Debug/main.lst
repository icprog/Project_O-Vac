ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	devAddr,1,1
  19              		.comm	buffer,22,4
  20              		.global	Addr
  21              		.data
  22              		.align	2
  23              		.type	Addr, %object
  24              		.size	Addr, 4
  25              	Addr:
  26 0000 3F000000 		.word	63
  27              		.global	id
  28              		.align	2
  29              		.type	id, %object
  30              		.size	id, 4
  31              	id:
  32 0004 01000000 		.word	1
  33              		.global	press_id
  34              		.align	2
  35              		.type	press_id, %object
  36              		.size	press_id, 4
  37              	press_id:
  38 0008 01000000 		.word	1
  39              		.global	data_time
  40              		.bss
  41              		.align	2
  42              		.type	data_time, %object
  43              		.size	data_time, 4
  44              	data_time:
  45 0000 00000000 		.space	4
  46              		.global	descent_time
  47              		.align	2
  48              		.type	descent_time, %object
  49              		.size	descent_time, 4
  50              	descent_time:
  51 0004 00000000 		.space	4
  52              		.global	sum
  53              		.align	2
  54              		.type	sum, %object
  55              		.size	sum, 4
  56              	sum:
  57 0008 00000000 		.space	4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 2


  58              		.global	pressure_sum
  59              		.align	2
  60              		.type	pressure_sum, %object
  61              		.size	pressure_sum, 4
  62              	pressure_sum:
  63 000c 00000000 		.space	4
  64              		.global	average
  65              		.align	1
  66              		.type	average, %object
  67              		.size	average, 2
  68              	average:
  69 0010 0000     		.space	2
  70              		.global	collect_flag
  71              		.type	collect_flag, %object
  72              		.size	collect_flag, 1
  73              	collect_flag:
  74 0012 00       		.space	1
  75              		.global	wait_flag
  76              		.type	wait_flag, %object
  77              		.size	wait_flag, 1
  78              	wait_flag:
  79 0013 00       		.space	1
  80              		.global	PANIC_flag
  81              		.type	PANIC_flag, %object
  82              		.size	PANIC_flag, 1
  83              	PANIC_flag:
  84 0014 00       		.space	1
  85              		.global	STATE
  86              		.data
  87              		.type	STATE, %object
  88              		.size	STATE, 1
  89              	STATE:
  90 000c 01       		.byte	1
  91              		.global	countdown
  92              		.bss
  93              		.type	countdown, %object
  94              		.size	countdown, 1
  95              	countdown:
  96 0015 00       		.space	1
  97              		.global	update_Data
  98              		.type	update_Data, %object
  99              		.size	update_Data, 1
 100              	update_Data:
 101 0016 00       		.space	1
 102              		.global	RxBuffer
 103 0017 00       		.align	2
 104              		.type	RxBuffer, %object
 105              		.size	RxBuffer, 64
 106              	RxBuffer:
 107 0018 00000000 		.space	64
 107      00000000 
 107      00000000 
 107      00000000 
 107      00000000 
 108              		.global	msg_count
 109              		.align	2
 110              		.type	msg_count, %object
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 3


 111              		.size	msg_count, 4
 112              	msg_count:
 113 0058 00000000 		.space	4
 114              		.global	rxflag
 115              		.align	2
 116              		.type	rxflag, %object
 117              		.size	rxflag, 4
 118              	rxflag:
 119 005c 00000000 		.space	4
 120              		.global	bytes
 121              		.align	2
 122              		.type	bytes, %object
 123              		.size	bytes, 4
 124              	bytes:
 125 0060 00000000 		.space	4
 126              		.global	dataflag
 127              		.align	2
 128              		.type	dataflag, %object
 129              		.size	dataflag, 4
 130              	dataflag:
 131 0064 00000000 		.space	4
 132              		.global	transmit_flag
 133              		.align	2
 134              		.type	transmit_flag, %object
 135              		.size	transmit_flag, 4
 136              	transmit_flag:
 137 0068 00000000 		.space	4
 138              		.global	depth
 139              		.align	2
 140              		.type	depth, %object
 141              		.size	depth, 4
 142              	depth:
 143 006c 00000000 		.space	4
 144              		.global	reset
 145              		.align	2
 146              		.type	reset, %object
 147              		.size	reset, 4
 148              	reset:
 149 0070 00000000 		.space	4
 150              		.global	testnum
 151              		.data
 152 000d 000000   		.align	2
 153              		.type	testnum, %object
 154              		.size	testnum, 4
 155              	testnum:
 156 0010 01000000 		.word	1
 157              		.global	xavg
 158              		.bss
 159              		.align	2
 160              		.type	xavg, %object
 161              		.size	xavg, 4
 162              	xavg:
 163 0074 00000000 		.space	4
 164              		.global	yavg
 165              		.align	2
 166              		.type	yavg, %object
 167              		.size	yavg, 4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 4


 168              	yavg:
 169 0078 00000000 		.space	4
 170              		.global	xsum
 171              		.align	2
 172              		.type	xsum, %object
 173              		.size	xsum, 4
 174              	xsum:
 175 007c 00000000 		.space	4
 176              		.global	ysum
 177              		.align	2
 178              		.type	ysum, %object
 179              		.size	ysum, 4
 180              	ysum:
 181 0080 00000000 		.space	4
 182              		.global	file
 183              		.data
 184              		.align	2
 185              		.type	file, %object
 186              		.size	file, 11
 187              	file:
 188 0014 74657374 		.ascii	"test1.txt\000"
 188      312E7478 
 188      7400
 189 001e 00       		.space	1
 190              		.global	volume
 191 001f 00       		.bss
 192              		.align	2
 193              		.type	volume, %object
 194              		.size	volume, 10
 195              	volume:
 196 0084 00000000 		.space	10
 196      00000000 
 196      0000
 197              		.comm	fsfile,4,4
 198 008e 0000     		.section	.text.Moisture_ISR_Handler,"ax",%progbits
 199              		.align	2
 200              		.global	Moisture_ISR_Handler
 201              		.thumb
 202              		.thumb_func
 203              		.type	Moisture_ISR_Handler, %function
 204              	Moisture_ISR_Handler:
 205              	.LFB63:
 206              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 2.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   This is a source code for example project of ADC single ended mode.
   8:main.c        **** *
   9:main.c        **** *   Variable resistor(pot) is connected to +ve input of ADC using the I/O pin.
  10:main.c        **** *   P0.0. When voltage to positive terminal of ADC is 0, the output displayed
  11:main.c        **** *   on the LCD pannel is 0x0000. As voltage on positive terminal goes on
  12:main.c        **** *   increasing, the  converted value goes on increasing from 0x0000 and reaches
  13:main.c        **** *   0xFFFF when voltage becomes 1.024V. Futher increase in voltage value,
  14:main.c        **** *   doesn't cause any changes to values displayed in the LCD.
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 5


  15:main.c        **** *
  16:main.c        **** * Hardware Connections: 
  17:main.c        **** *  Connect analog input from Variable resistor to port P0[0] of DVK1 board.
  18:main.c        **** *
  19:main.c        **** ********************************************************************************
  20:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  21:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  22:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  23:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  24:main.c        **** * accompanying the software package from which you obtained this software.
  25:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  27:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  28:main.c        **** *******************************************************************************/
  29:main.c        **** 
  30:main.c        **** #include <project.h>
  31:main.c        **** #include <mpu6050.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include <stdlib.h>
  34:main.c        **** #include <string.h>
  35:main.c        **** #include <FS.h>
  36:main.c        **** #include "LiquidCrystal_I2C.h"
  37:main.c        **** #include "functions.h"
  38:main.c        **** 
  39:main.c        **** #define MPU6050 
  40:main.c        **** #define LCD
  41:main.c        **** #define SD
  42:main.c        **** #define BT
  43:main.c        **** 
  44:main.c        **** #define MA_WINDOW 15                    // Number of samples in the moving average window.
  45:main.c        **** #define BOT_THRESHOLD 20000             // Z-Aacceleration threshold for transition into LANDED sta
  46:main.c        **** #define WAIT_TIME 1000                  // Number of ISR calls until transition into DESCENDING sta
  47:main.c        **** #define BUFFER_LEN  64u                 // Buffer length for UART rx
  48:main.c        **** #define DEGREES_20 (131 * 20)           // Gyro value corresponding to 30 degrees. Default setting 
  49:main.c        **** #define DEGREES_50 (131 * 50)           // So every 131 in gyro value equals 1 degree of rotational
  50:main.c        **** 
  51:main.c        **** 
  52:main.c        **** uint32_t Addr = 0x3F;                   // I2C address of LCD.
  53:main.c        **** long id = 1, press_id = 1;              // Interrupt count.
  54:main.c        **** long data_time = 0;                     // data point num
  55:main.c        **** long descent_time = 0;                  // Max number of seconds allowed for descent, x 500 because
  56:main.c        **** 
  57:main.c        **** long sum = 0;                           // Sum of accelerometer values
  58:main.c        **** float pressure_sum = 0;                 // Sum of pressure values. 
  59:main.c        **** int16_t average = 0;                    // Moving average variable, accelerometer.
  60:main.c        **** bool collect_flag = 0;                  // flag indicating when to record acceleration sample.
  61:main.c        **** bool wait_flag = 0;                     // flag indicating when to increment interrupt counter.
  62:main.c        **** bool PANIC_flag = 0;                    // flag indicating water is present in housing.
  63:main.c        **** //bool first_test = 1;                  // flag indicating first test(longer countdown)
  64:main.c        **** STATES STATE = WAIT_TO_LAUNCH;                      // Set initial state. 
  65:main.c        **** uint8_t countdown = 0, update_Data = 0;             // Counting variables, one for countdowns, one 
  66:main.c        **** uint8_t RxBuffer[BUFFER_LEN] = {};                  // Rx Buffer
  67:main.c        **** int msg_count = 0, rxflag = 0, bytes = 0, dataflag = 0, transmit_flag = 0;    // UART variables
  68:main.c        **** int depth = 0, reset = 0, testnum = 1;                                                     // Varia
  69:main.c        **** float xavg = 0, yavg = 0, xsum = 0, ysum = 0;                                 // gyro avg/sum value
  70:main.c        **** char file[11] = "test1.txt";
  71:main.c        **** char volume[10] = {};
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 6


  72:main.c        **** FS_FILE *fsfile;
  73:main.c        **** 
  74:main.c        **** /*******************************************************************************
  75:main.c        **** * Function Name: main
  76:main.c        **** ********************************************************************************
  77:main.c        **** *
  78:main.c        **** * Summary:
  79:main.c        **** *  main() performs following functions:
  80:main.c        **** *  1: Initializes all necessary components on board (accelerometer/gyro, SD card, LCD, timers, inte
  81:main.c        **** *       Bluetooth).
  82:main.c        **** *  2: Begins at state: WAIT_FOR_LAUNCH. Waits for a bluetooth command to start, then prompts for a 
  83:main.c        **** *       completion, starts a countdown for which the device should be thrown in the water before it
  84:main.c        **** *       DESCENDING state.
  85:main.c        **** *  3: Samples Z-axis acceleration data from module @ 500hz. Computes moving average of Z-axis accel
  86:main.c        **** *       for gyro data in the case that the system flips somehow. If the moving average has breached
  87:main.c        **** *       20000), we know it has landed on the bottom. If the time of descent has gone over the max d
  88:main.c        **** *       from the depth earlier, then we go to resurfacing. 
  89:main.c        **** *  4: At the LANDED state, we delay to let the system settle, then turn on solenoid 1. This solenoi
  90:main.c        **** *       in the legs. The suction occurs for 5 seconds, then turns off. Switch to RESURFACING.
  91:main.c        **** *  5: To resurface, we pulse the solenoids at a rate of 3 seconds on to 1 second off. The number of
  92:main.c        **** *       by the depth. Once the number of pulses has finished, we move to TRANSMIT.
  93:main.c        **** *  6: At TRANSMIT, we simply wait for the data command to begin sending out the collected data or f
  94:main.c        **** *       do another run.
  95:main.c        **** *
  96:main.c        **** * Parameters:
  97:main.c        **** *  None.
  98:main.c        **** *
  99:main.c        **** * Return:
 100:main.c        **** *  None.
 101:main.c        **** *
 102:main.c        **** *******************************************************************************/
 103:main.c        **** 
 104:main.c        **** int SD_SETUP(char* filename); //SD card setup function
 105:main.c        **** 
 106:main.c        **** /* Moisture sensor ISR */
 107:main.c        **** CY_ISR (Moisture_ISR_Handler){
 207              		.loc 1 107 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 80B5     		push	{r7, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 108:main.c        ****     PANIC_flag = 1;                             // Set flag to indicate water
 217              		.loc 1 108 0
 218 0004 044B     		ldr	r3, .L2
 219 0006 0122     		movs	r2, #1
 220 0008 1A70     		strb	r2, [r3]
 109:main.c        ****     STATE = RESURFACE;                          // Go to surface
 221              		.loc 1 109 0
 222 000a 044B     		ldr	r3, .L2+4
 223 000c 0422     		movs	r2, #4
 224 000e 1A70     		strb	r2, [r3]
 110:main.c        ****     Comp_Stop();                                // Stop comparator for interrupt
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 7


 225              		.loc 1 110 0
 226 0010 FFF7FEFF 		bl	Comp_Stop
 111:main.c        **** }
 227              		.loc 1 111 0
 228 0014 80BD     		pop	{r7, pc}
 229              	.L3:
 230 0016 00BF     		.align	2
 231              	.L2:
 232 0018 00000000 		.word	PANIC_flag
 233 001c 00000000 		.word	STATE
 234              		.cfi_endproc
 235              	.LFE63:
 236              		.size	Moisture_ISR_Handler, .-Moisture_ISR_Handler
 237              		.section	.text.Sample_ISR_Handler,"ax",%progbits
 238              		.align	2
 239              		.global	Sample_ISR_Handler
 240              		.thumb
 241              		.thumb_func
 242              		.type	Sample_ISR_Handler, %function
 243              	Sample_ISR_Handler:
 244              	.LFB64:
 112:main.c        **** 
 113:main.c        **** /* Sampling ISR */
 114:main.c        **** CY_ISR (Sample_ISR_Handler){
 245              		.loc 1 114 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 80B4     		push	{r7}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 115:main.c        ****     Sample_Timer_STATUS;                        // Clears interrupt by accessing timer status regis
 255              		.loc 1 115 0
 256 0004 0A4B     		ldr	r3, .L7
 257 0006 1B78     		ldrb	r3, [r3]
 116:main.c        ****     if (STATE == DESCENDING || STATE == LANDED){
 258              		.loc 1 116 0
 259 0008 0A4B     		ldr	r3, .L7+4
 260 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261 000c 022B     		cmp	r3, #2
 262 000e 03D0     		beq	.L5
 263              		.loc 1 116 0 is_stmt 0 discriminator 1
 264 0010 084B     		ldr	r3, .L7+4
 265 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 266 0014 032B     		cmp	r3, #3
 267 0016 04D1     		bne	.L6
 268              	.L5:
 117:main.c        ****         data_time++;
 269              		.loc 1 117 0 is_stmt 1
 270 0018 074B     		ldr	r3, .L7+8
 271 001a 1B68     		ldr	r3, [r3]
 272 001c 0133     		adds	r3, r3, #1
 273 001e 064A     		ldr	r2, .L7+8
 274 0020 1360     		str	r3, [r2]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 8


 275              	.L6:
 118:main.c        ****     }
 119:main.c        ****     collect_flag = 1;
 276              		.loc 1 119 0
 277 0022 064B     		ldr	r3, .L7+12
 278 0024 0122     		movs	r2, #1
 279 0026 1A70     		strb	r2, [r3]
 120:main.c        **** }
 280              		.loc 1 120 0
 281 0028 BD46     		mov	sp, r7
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 002a 5DF8047B 		ldr	r7, [sp], #4
 285              		.cfi_restore 7
 286              		.cfi_def_cfa_offset 0
 287 002e 7047     		bx	lr
 288              	.L8:
 289              		.align	2
 290              	.L7:
 291 0030 034F0040 		.word	1073762051
 292 0034 00000000 		.word	STATE
 293 0038 00000000 		.word	data_time
 294 003c 00000000 		.word	collect_flag
 295              		.cfi_endproc
 296              	.LFE64:
 297              		.size	Sample_ISR_Handler, .-Sample_ISR_Handler
 298              		.section	.text.Countdown_ISR_Handler,"ax",%progbits
 299              		.align	2
 300              		.global	Countdown_ISR_Handler
 301              		.thumb
 302              		.thumb_func
 303              		.type	Countdown_ISR_Handler, %function
 304              	Countdown_ISR_Handler:
 305              	.LFB65:
 121:main.c        **** 
 122:main.c        **** /* Countdown ISR*/
 123:main.c        **** CY_ISR (Countdown_ISR_Handler){
 306              		.loc 1 123 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311 0000 80B4     		push	{r7}
 312              		.cfi_def_cfa_offset 4
 313              		.cfi_offset 7, -4
 314 0002 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 124:main.c        ****     Countdown_timer_STATUS;                        // Clears interrupt by accessing timer status re
 316              		.loc 1 124 0
 317 0004 1D4B     		ldr	r3, .L15
 318 0006 1B78     		ldrb	r3, [r3]
 125:main.c        ****     if ((STATE == WAIT_TO_LAUNCH && depth != 0) || STATE == LANDED || STATE == RESURFACE){ 
 319              		.loc 1 125 0
 320 0008 1D4B     		ldr	r3, .L15+4
 321 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 322 000c 012B     		cmp	r3, #1
 323 000e 03D1     		bne	.L10
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 9


 324              		.loc 1 125 0 is_stmt 0 discriminator 1
 325 0010 1C4B     		ldr	r3, .L15+8
 326 0012 1B68     		ldr	r3, [r3]
 327 0014 002B     		cmp	r3, #0
 328 0016 07D1     		bne	.L11
 329              	.L10:
 330              		.loc 1 125 0 discriminator 3
 331 0018 194B     		ldr	r3, .L15+4
 332 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 333 001c 032B     		cmp	r3, #3
 334 001e 03D0     		beq	.L11
 335              		.loc 1 125 0 discriminator 4
 336 0020 174B     		ldr	r3, .L15+4
 337 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 0024 042B     		cmp	r3, #4
 339 0026 08D1     		bne	.L12
 340              	.L11:
 126:main.c        ****         wait_flag = 1;
 341              		.loc 1 126 0 is_stmt 1
 342 0028 174B     		ldr	r3, .L15+12
 343 002a 0122     		movs	r2, #1
 344 002c 1A70     		strb	r2, [r3]
 127:main.c        ****         countdown++;
 345              		.loc 1 127 0
 346 002e 174B     		ldr	r3, .L15+16
 347 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 348 0032 0133     		adds	r3, r3, #1
 349 0034 DAB2     		uxtb	r2, r3
 350 0036 154B     		ldr	r3, .L15+16
 351 0038 1A70     		strb	r2, [r3]
 352              	.L12:
 128:main.c        ****     }
 129:main.c        ****     #ifdef BT
 130:main.c        ****         if (STATE == TRANSMIT || (STATE == WAIT_TO_LAUNCH && !dataflag)){
 353              		.loc 1 130 0
 354 003a 114B     		ldr	r3, .L15+4
 355 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 003e 052B     		cmp	r3, #5
 357 0040 07D0     		beq	.L13
 358              		.loc 1 130 0 is_stmt 0 discriminator 1
 359 0042 0F4B     		ldr	r3, .L15+4
 360 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 0046 012B     		cmp	r3, #1
 362 0048 13D1     		bne	.L9
 363              		.loc 1 130 0 discriminator 2
 364 004a 114B     		ldr	r3, .L15+20
 365 004c 1B68     		ldr	r3, [r3]
 366 004e 002B     		cmp	r3, #0
 367 0050 0FD1     		bne	.L9
 368              	.L13:
 131:main.c        ****             update_Data++;
 369              		.loc 1 131 0 is_stmt 1
 370 0052 104B     		ldr	r3, .L15+24
 371 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 372 0056 0133     		adds	r3, r3, #1
 373 0058 DAB2     		uxtb	r2, r3
 374 005a 0E4B     		ldr	r3, .L15+24
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 10


 375 005c 1A70     		strb	r2, [r3]
 132:main.c        ****             if (update_Data == 10){
 376              		.loc 1 132 0
 377 005e 0D4B     		ldr	r3, .L15+24
 378 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 379 0062 0A2B     		cmp	r3, #10
 380 0064 05D1     		bne	.L9
 133:main.c        ****                 transmit_flag = 1;
 381              		.loc 1 133 0
 382 0066 0C4B     		ldr	r3, .L15+28
 383 0068 0122     		movs	r2, #1
 384 006a 1A60     		str	r2, [r3]
 134:main.c        ****                 update_Data = 0;
 385              		.loc 1 134 0
 386 006c 094B     		ldr	r3, .L15+24
 387 006e 0022     		movs	r2, #0
 388 0070 1A70     		strb	r2, [r3]
 389              	.L9:
 135:main.c        ****             }
 136:main.c        ****         }          
 137:main.c        ****     #endif
 138:main.c        **** }
 390              		.loc 1 138 0
 391 0072 BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 0074 5DF8047B 		ldr	r7, [sp], #4
 395              		.cfi_restore 7
 396              		.cfi_def_cfa_offset 0
 397 0078 7047     		bx	lr
 398              	.L16:
 399 007a 00BF     		.align	2
 400              	.L15:
 401 007c 67640040 		.word	1073767527
 402 0080 00000000 		.word	STATE
 403 0084 00000000 		.word	depth
 404 0088 00000000 		.word	wait_flag
 405 008c 00000000 		.word	countdown
 406 0090 00000000 		.word	dataflag
 407 0094 00000000 		.word	update_Data
 408 0098 00000000 		.word	transmit_flag
 409              		.cfi_endproc
 410              	.LFE65:
 411              		.size	Countdown_ISR_Handler, .-Countdown_ISR_Handler
 412              		.section	.text.rx_interrupt,"ax",%progbits
 413              		.align	2
 414              		.global	rx_interrupt
 415              		.thumb
 416              		.thumb_func
 417              		.type	rx_interrupt, %function
 418              	rx_interrupt:
 419              	.LFB66:
 139:main.c        **** /* Bluetooth UART Rx ISR*/
 140:main.c        **** CY_ISR(rx_interrupt){
 420              		.loc 1 140 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 11


 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 98B5     		push	{r3, r4, r7, lr}
 425              		.cfi_def_cfa_offset 16
 426              		.cfi_offset 3, -16
 427              		.cfi_offset 4, -12
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 141:main.c        ****     #ifdef BT
 142:main.c        ****     while (UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 432              		.loc 1 142 0
 433 0004 14E0     		b	.L18
 434              	.L19:
 143:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 435              		.loc 1 143 0
 436 0006 0E4B     		ldr	r3, .L20
 437 0008 1C68     		ldr	r4, [r3]
 438 000a 631C     		adds	r3, r4, #1
 439 000c 0C4A     		ldr	r2, .L20
 440 000e 1360     		str	r3, [r2]
 441 0010 FFF7FEFF 		bl	UART_GetChar
 442 0014 0346     		mov	r3, r0
 443 0016 1A46     		mov	r2, r3
 444 0018 0A4B     		ldr	r3, .L20+4
 445 001a 1A55     		strb	r2, [r3, r4]
 144:main.c        ****         if ((msg_count - 3) > bytes)
 446              		.loc 1 144 0
 447 001c 084B     		ldr	r3, .L20
 448 001e 1B68     		ldr	r3, [r3]
 449 0020 DA1E     		subs	r2, r3, #3
 450 0022 094B     		ldr	r3, .L20+8
 451 0024 1B68     		ldr	r3, [r3]
 452 0026 9A42     		cmp	r2, r3
 453 0028 02DD     		ble	.L18
 145:main.c        ****             rxflag = 1;
 454              		.loc 1 145 0
 455 002a 084B     		ldr	r3, .L20+12
 456 002c 0122     		movs	r2, #1
 457 002e 1A60     		str	r2, [r3]
 458              	.L18:
 142:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 459              		.loc 1 142 0
 460 0030 FFF7FEFF 		bl	UART_ReadRxStatus
 461 0034 0346     		mov	r3, r0
 462 0036 03F02003 		and	r3, r3, #32
 463 003a 002B     		cmp	r3, #0
 464 003c E3D1     		bne	.L19
 146:main.c        ****     }
 147:main.c        ****     #endif
 148:main.c        **** }
 465              		.loc 1 148 0
 466 003e 98BD     		pop	{r3, r4, r7, pc}
 467              	.L21:
 468              		.align	2
 469              	.L20:
 470 0040 00000000 		.word	msg_count
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 12


 471 0044 00000000 		.word	RxBuffer
 472 0048 00000000 		.word	bytes
 473 004c 00000000 		.word	rxflag
 474              		.cfi_endproc
 475              	.LFE66:
 476              		.size	rx_interrupt, .-rx_interrupt
 477              		.section	.rodata
 478              		.align	2
 479              	.LC6:
 480 0000 50536F43 		.ascii	"PSoC 5LP: O-Vac\000"
 480      20354C50 
 480      3A204F2D 
 480      56616300 
 481              		.align	2
 482              	.LC7:
 483 0010 49324320 		.ascii	"I2C Working\000"
 483      576F726B 
 483      696E6700 
 484              		.align	2
 485              	.LC8:
 486 001c 53544154 		.ascii	"STATE: WAIT\000"
 486      453A2057 
 486      41495400 
 487              		.global	__aeabi_i2f
 488              		.global	__aeabi_f2d
 489              		.global	__aeabi_dmul
 490              		.global	__aeabi_d2f
 491              		.global	__aeabi_fadd
 492              		.global	__aeabi_fdiv
 493              		.global	__aeabi_f2iz
 494              		.global	__aeabi_fsub
 495              		.global	__aeabi_fmul
 496              		.align	2
 497              	.LC9:
 498 0028 70726573 		.ascii	"pressure: %d.%04d, %d\012\000"
 498      73757265 
 498      3A202564 
 498      2E253034 
 498      642C2025 
 499 003f 00       		.align	2
 500              	.LC10:
 501 0040 0A256420 		.ascii	"\012%d seconds remaining\000"
 501      7365636F 
 501      6E647320 
 501      72656D61 
 501      696E696E 
 502 0056 0000     		.align	2
 503              	.LC11:
 504 0058 53544154 		.ascii	"STATE: DESCENT\000"
 504      453A2044 
 504      45534345 
 504      4E5400
 505 0067 00       		.align	2
 506              	.LC12:
 507 0068 53544154 		.ascii	"STATE: LANDED\000"
 507      453A204C 
 507      414E4445 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 13


 507      4400
 508 0076 0000     		.align	2
 509              	.LC13:
 510 0078 53544154 		.ascii	"STATE: RESURFACE\000"
 510      453A2052 
 510      45535552 
 510      46414345 
 510      00
 511 0089 000000   		.align	2
 512              	.LC14:
 513 008c 53544154 		.ascii	"STATE: RESURFACING\000"
 513      453A2052 
 513      45535552 
 513      46414349 
 513      4E4700
 514 009f 00       		.align	2
 515              	.LC15:
 516 00a0 57415445 		.ascii	"WATER DETECTED\000"
 516      52204445 
 516      54454354 
 516      454400
 517 00af 00       		.align	2
 518              	.LC16:
 519 00b0 74657374 		.ascii	"test%d.txt\000"
 519      25642E74 
 519      787400
 520 00bb 00       		.align	2
 521              	.LC17:
 522 00bc 7700     		.ascii	"w\000"
 523 00be 0000     		.align	2
 524              	.LC18:
 525 00c0 5452414E 		.ascii	"TRANSMIT\000"
 525      534D4954 
 525      00
 526 00c9 000000   		.align	2
 527              	.LC0:
 528 00cc 53595354 		.ascii	"SYSTEM_CHECK\000"
 528      454D5F43 
 528      4845434B 
 528      00
 529 00d9 00       		.space	1
 530 00da 0000     		.align	2
 531              	.LC1:
 532 00dc 0A535441 		.ascii	"\012STATE: DESCENDING\012\000"
 532      54453A20 
 532      44455343 
 532      454E4449 
 532      4E470A00 
 533              		.align	2
 534              	.LC2:
 535 00f0 53544154 		.ascii	"STATE: LANDED\012\000"
 535      453A204C 
 535      414E4445 
 535      440A00
 536 00ff 00       		.align	2
 537              	.LC3:
 538 0100 53544154 		.ascii	"STATE: VACUUMING\012\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 14


 538      453A2056 
 538      41435555 
 538      4D494E47 
 538      0A00
 539 0112 0000     		.align	2
 540              	.LC4:
 541 0114 53544154 		.ascii	"STATE: RESURFACE\012\000"
 541      453A2052 
 541      45535552 
 541      46414345 
 541      0A00
 542 0126 0000     		.align	2
 543              	.LC5:
 544 0128 53544154 		.ascii	"STATE: TRANSMIT\012\000"
 544      453A2054 
 544      52414E53 
 544      4D49540A 
 544      00
 545              		.section	.text.main,"ax",%progbits
 546              		.align	2
 547              		.global	main
 548              		.thumb
 549              		.thumb_func
 550              		.type	main, %function
 551              	main:
 552              	.LFB67:
 149:main.c        **** 
 150:main.c        **** int main()
 151:main.c        **** {
 553              		.loc 1 151 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 296
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 B0B5     		push	{r4, r5, r7, lr}
 558              		.cfi_def_cfa_offset 16
 559              		.cfi_offset 4, -16
 560              		.cfi_offset 5, -12
 561              		.cfi_offset 7, -8
 562              		.cfi_offset 14, -4
 563 0002 CCB0     		sub	sp, sp, #304
 564              		.cfi_def_cfa_offset 320
 565 0004 02AF     		add	r7, sp, #8
 566              		.cfi_def_cfa 7, 312
 152:main.c        ****     int num = 0, decimals = 0;                                       // ADC Voltage conversion plac
 567              		.loc 1 152 0
 568 0006 0023     		movs	r3, #0
 569 0008 C7F81831 		str	r3, [r7, #280]
 570 000c 0023     		movs	r3, #0
 571 000e C7F81431 		str	r3, [r7, #276]
 153:main.c        ****     float voltage = 0, temp = 0, output = 0, pressure_avg = 0;       // ADC Voltage conversion vari
 572              		.loc 1 153 0
 573 0012 4FF00003 		mov	r3, #0
 574 0016 C7F81031 		str	r3, [r7, #272]	@ float
 575 001a 4FF00003 		mov	r3, #0
 576 001e C7F80C31 		str	r3, [r7, #268]	@ float
 577 0022 4FF00003 		mov	r3, #0
 578 0026 C7F80831 		str	r3, [r7, #264]	@ float
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 15


 579 002a 4FF00003 		mov	r3, #0
 580 002e C7F82431 		str	r3, [r7, #292]	@ float
 154:main.c        ****     char buf[50], tempbuf[20] = {}, curState[14] = "SYSTEM_CHECK";  // buffers, UART and initial st
 581              		.loc 1 154 0
 582 0032 07F1B003 		add	r3, r7, #176
 583 0036 0022     		movs	r2, #0
 584 0038 1A60     		str	r2, [r3]
 585 003a 0433     		adds	r3, r3, #4
 586 003c 0022     		movs	r2, #0
 587 003e 1A60     		str	r2, [r3]
 588 0040 0433     		adds	r3, r3, #4
 589 0042 0022     		movs	r2, #0
 590 0044 1A60     		str	r2, [r3]
 591 0046 0433     		adds	r3, r3, #4
 592 0048 0022     		movs	r2, #0
 593 004a 1A60     		str	r2, [r3]
 594 004c 0433     		adds	r3, r3, #4
 595 004e 0022     		movs	r2, #0
 596 0050 1A60     		str	r2, [r3]
 597 0052 0433     		adds	r3, r3, #4
 598 0054 744B     		ldr	r3, .L65+8
 599 0056 07F1A004 		add	r4, r7, #160
 600 005a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 601 005c 07C4     		stmia	r4!, {r0, r1, r2}
 602 005e 2370     		strb	r3, [r4]
 603 0060 0023     		movs	r3, #0
 604 0062 87F8AD30 		strb	r3, [r7, #173]
 155:main.c        ****     char descendbuf[DESCENDING_LEN] = STATE_DESCENDING;             // buffers for transmitting sta
 605              		.loc 1 155 0
 606 0066 714B     		ldr	r3, .L65+12
 607 0068 07F18C04 		add	r4, r7, #140
 608 006c 1D46     		mov	r5, r3
 609 006e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 610 0070 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 611 0072 2B68     		ldr	r3, [r5]
 612 0074 1A46     		mov	r2, r3	@ movhi
 613 0076 2280     		strh	r2, [r4]	@ movhi
 614 0078 0234     		adds	r4, r4, #2
 615 007a 1B0C     		lsrs	r3, r3, #16
 616 007c 2370     		strb	r3, [r4]
 156:main.c        ****     char landedbuf[LANDED_LEN] = STATE_LANDED;              
 617              		.loc 1 156 0
 618 007e 6C4B     		ldr	r3, .L65+16
 619 0080 07F17C04 		add	r4, r7, #124
 620 0084 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 621 0086 07C4     		stmia	r4!, {r0, r1, r2}
 622 0088 2380     		strh	r3, [r4]	@ movhi
 157:main.c        ****     char vacuumbuf[VACUUM_LEN] = STATE_VACUUM;
 623              		.loc 1 157 0
 624 008a 6A4B     		ldr	r3, .L65+20
 625 008c 07F16804 		add	r4, r7, #104
 626 0090 1D46     		mov	r5, r3
 627 0092 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 628 0094 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 629 0096 2B68     		ldr	r3, [r5]
 630 0098 2370     		strb	r3, [r4]
 158:main.c        ****     char resurfbuf[RESURFACE_LEN] = STATE_RESURFACE;
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 16


 631              		.loc 1 158 0
 632 009a 674B     		ldr	r3, .L65+24
 633 009c 07F15404 		add	r4, r7, #84
 634 00a0 1D46     		mov	r5, r3
 635 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 636 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 637 00a6 2B68     		ldr	r3, [r5]
 638 00a8 2370     		strb	r3, [r4]
 159:main.c        ****     char transbuf[TRANSMIT_LEN] = STATE_TRANSMIT;
 639              		.loc 1 159 0
 640 00aa 644B     		ldr	r3, .L65+28
 641 00ac 07F14404 		add	r4, r7, #68
 642 00b0 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 643 00b2 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 160:main.c        ****     int stateMsgCount = 0, pulse = 0, secs_for_tilt = 0;
 644              		.loc 1 160 0
 645 00b6 0023     		movs	r3, #0
 646 00b8 C7F82031 		str	r3, [r7, #288]
 647 00bc 0023     		movs	r3, #0
 648 00be C7F81C31 		str	r3, [r7, #284]
 649 00c2 0023     		movs	r3, #0
 650 00c4 C7F80431 		str	r3, [r7, #260]
 161:main.c        ****     
 162:main.c        ****     int16_t ax, ay, az, i;
 163:main.c        ****     int16_t gx, gy, gz;
 164:main.c        ****     int16_t z_offset = 0;
 651              		.loc 1 164 0
 652 00c8 0023     		movs	r3, #0
 653 00ca A7F80231 		strh	r3, [r7, #258]	@ movhi
 165:main.c        ****     int tens = 0, ones = 0;                     // digit place variables for message len of bluetoo
 654              		.loc 1 165 0
 655 00ce 0023     		movs	r3, #0
 656 00d0 3B64     		str	r3, [r7, #64]
 657 00d2 0023     		movs	r3, #0
 658 00d4 C7F8FC30 		str	r3, [r7, #252]
 166:main.c        ****     
 167:main.c        ****     /* Start the components */
 168:main.c        ****     CYGlobalIntEnable;                          // enable global interrupts
 659              		.loc 1 168 0
 660              	@ 168 "main.c" 1
 661 00d8 62B6     		CPSIE   i
 662              	@ 0 "" 2
 169:main.c        ****     I2C_Master_Start(); 
 663              		.loc 1 169 0
 664              		.thumb
 665 00da FFF7FEFF 		bl	I2C_Master_Start
 170:main.c        ****     ADC_Start();
 666              		.loc 1 170 0
 667 00de FFF7FEFF 		bl	ADC_Start
 171:main.c        ****     Sample_Timer_Start();                       // start timer module
 668              		.loc 1 171 0
 669 00e2 FFF7FEFF 		bl	Sample_Timer_Start
 172:main.c        ****     Sample_ISR_StartEx(Sample_ISR_Handler);     // reference ISR function
 670              		.loc 1 172 0
 671 00e6 5648     		ldr	r0, .L65+32
 672 00e8 FFF7FEFF 		bl	Sample_ISR_StartEx
 173:main.c        ****     rx_interrupt_StartEx(rx_interrupt);
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 17


 673              		.loc 1 173 0
 674 00ec 5548     		ldr	r0, .L65+36
 675 00ee FFF7FEFF 		bl	rx_interrupt_StartEx
 174:main.c        ****     //moisture_isr_StartEx(Moisture_ISR_Handler); // moisture isr start
 175:main.c        ****     //Comp_Start();                               // comparator for moisture start
 176:main.c        ****     UART_Start();
 676              		.loc 1 176 0
 677 00f2 FFF7FEFF 		bl	UART_Start
 177:main.c        ****     
 178:main.c        ****     
 179:main.c        ****     #ifdef LCD
 180:main.c        ****         LiquidCrystal_I2C_init(Addr,16,2,0);        // initialize I2C communication with LCD
 678              		.loc 1 180 0
 679 00f6 544B     		ldr	r3, .L65+40
 680 00f8 1B68     		ldr	r3, [r3]
 681 00fa DBB2     		uxtb	r3, r3
 682 00fc 1846     		mov	r0, r3
 683 00fe 1021     		movs	r1, #16
 684 0100 0222     		movs	r2, #2
 685 0102 0023     		movs	r3, #0
 686 0104 FFF7FEFF 		bl	LiquidCrystal_I2C_init
 181:main.c        ****         begin(); 
 687              		.loc 1 181 0
 688 0108 FFF7FEFF 		bl	begin
 182:main.c        ****     
 183:main.c        ****     #endif
 184:main.c        ****    
 185:main.c        ****     /* initialize MPU6050 */
 186:main.c        ****     #ifdef MPU6050
 187:main.c        ****         MPU6050_init();    
 689              		.loc 1 187 0
 690 010c FFF7FEFF 		bl	MPU6050_init
 188:main.c        **** 	    MPU6050_initialize(); 
 691              		.loc 1 188 0
 692 0110 FFF7FEFF 		bl	MPU6050_initialize
 189:main.c        ****     #endif
 190:main.c        ****         
 191:main.c        ****     #ifdef LCD
 192:main.c        ****         /* Startup Display */
 193:main.c        ****         LCD_print("PSoC 5LP: O-Vac");
 693              		.loc 1 193 0
 694 0114 4D48     		ldr	r0, .L65+44
 695 0116 FFF7FEFF 		bl	LCD_print
 194:main.c        ****         setCursor(0,1);
 696              		.loc 1 194 0
 697 011a 0020     		movs	r0, #0
 698 011c 0121     		movs	r1, #1
 699 011e FFF7FEFF 		bl	setCursor
 195:main.c        ****         LCD_print("I2C Working");
 700              		.loc 1 195 0
 701 0122 4B48     		ldr	r0, .L65+48
 702 0124 FFF7FEFF 		bl	LCD_print
 196:main.c        ****         
 197:main.c        ****         CyDelay(1000u);   
 703              		.loc 1 197 0
 704 0128 4FF47A70 		mov	r0, #1000
 705 012c FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 18


 198:main.c        ****         clear();
 706              		.loc 1 198 0
 707 0130 FFF7FEFF 		bl	clear
 199:main.c        ****     #endif
 200:main.c        ****     
 201:main.c        ****     /* Start the ADC conversion */
 202:main.c        ****     ADC_StartConvert();
 708              		.loc 1 202 0
 709 0134 FFF7FEFF 		bl	ADC_StartConvert
 203:main.c        **** 
 204:main.c        ****     /* Start SD card*/
 205:main.c        ****     #ifdef SD
 206:main.c        ****         int SD_Result = SD_SETUP(file); 
 710              		.loc 1 206 0
 711 0138 4648     		ldr	r0, .L65+52
 712 013a FFF7FEFF 		bl	SD_SETUP
 713 013e C7F8F800 		str	r0, [r7, #248]
 207:main.c        ****         
 208:main.c        ****     #endif
 209:main.c        ****     
 210:main.c        ****     #ifdef LCD
 211:main.c        ****         /* Display the current State */
 212:main.c        ****         setCursor(0,0);    
 714              		.loc 1 212 0
 715 0142 0020     		movs	r0, #0
 716 0144 0021     		movs	r1, #0
 717 0146 FFF7FEFF 		bl	setCursor
 213:main.c        ****         LCD_print(curState);
 718              		.loc 1 213 0
 719 014a 07F1A003 		add	r3, r7, #160
 720 014e 1846     		mov	r0, r3
 721 0150 FFF7FEFF 		bl	LCD_print
 214:main.c        ****     #endif
 215:main.c        ****     STATE = WAIT_TO_LAUNCH;
 722              		.loc 1 215 0
 723 0154 404B     		ldr	r3, .L65+56
 724 0156 0122     		movs	r2, #1
 725 0158 1A70     		strb	r2, [r3]
 216:main.c        ****     #ifdef LCD
 217:main.c        ****         setCursor(0,0);
 726              		.loc 1 217 0
 727 015a 0020     		movs	r0, #0
 728 015c 0021     		movs	r1, #0
 729 015e FFF7FEFF 		bl	setCursor
 218:main.c        ****         clear();
 730              		.loc 1 218 0
 731 0162 FFF7FEFF 		bl	clear
 219:main.c        ****         LCD_print("STATE: WAIT");  
 732              		.loc 1 219 0
 733 0166 3D48     		ldr	r0, .L65+60
 734 0168 FFF7FEFF 		bl	LCD_print
 220:main.c        ****     #endif
 221:main.c        ****     
 222:main.c        ****     Countdown_timer_Start();
 735              		.loc 1 222 0
 736 016c FFF7FEFF 		bl	Countdown_timer_Start
 223:main.c        ****     countdown_StartEx(Countdown_ISR_Handler);
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 19


 737              		.loc 1 223 0
 738 0170 3B48     		ldr	r0, .L65+64
 739 0172 FFF7FEFF 		bl	countdown_StartEx
 740              	.L63:
 741              	.LBB2:
 224:main.c        ****    
 225:main.c        ****     
 226:main.c        ****     for(;;)
 227:main.c        ****     {
 228:main.c        ****         
 229:main.c        ****         if(ADC_IsEndConversion(ADC_RETURN_STATUS))              // voltage conversion for pressure
 742              		.loc 1 229 0
 743 0176 0120     		movs	r0, #1
 744 0178 FFF7FEFF 		bl	ADC_IsEndConversion
 745 017c 0346     		mov	r3, r0
 746 017e 002B     		cmp	r3, #0
 747 0180 00F0D280 		beq	.L23
 230:main.c        ****         {
 231:main.c        ****             output = ADC_GetResult32();
 748              		.loc 1 231 0
 749 0184 FFF7FEFF 		bl	ADC_GetResult32
 750 0188 0346     		mov	r3, r0
 751 018a 1846     		mov	r0, r3
 752 018c FFF7FEFF 		bl	__aeabi_i2f
 753 0190 0346     		mov	r3, r0
 754 0192 C7F80831 		str	r3, [r7, #264]	@ float
 232:main.c        ****             voltage = output * (3.32 / 4096);
 755              		.loc 1 232 0
 756 0196 D7F80801 		ldr	r0, [r7, #264]	@ float
 757 019a FFF7FEFF 		bl	__aeabi_f2d
 758 019e 0246     		mov	r2, r0
 759 01a0 0B46     		mov	r3, r1
 760 01a2 1046     		mov	r0, r2
 761 01a4 1946     		mov	r1, r3
 762 01a6 1EA3     		adr	r3, .L65
 763 01a8 D3E90023 		ldrd	r2, [r3]
 764 01ac FFF7FEFF 		bl	__aeabi_dmul
 765 01b0 0246     		mov	r2, r0
 766 01b2 0B46     		mov	r3, r1
 767 01b4 1046     		mov	r0, r2
 768 01b6 1946     		mov	r1, r3
 769 01b8 FFF7FEFF 		bl	__aeabi_d2f
 770 01bc 0346     		mov	r3, r0
 771 01be C7F81031 		str	r3, [r7, #272]	@ float
 233:main.c        ****             if(collect_flag == 1){
 772              		.loc 1 233 0
 773 01c2 284B     		ldr	r3, .L65+68
 774 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 775 01c6 002B     		cmp	r3, #0
 776 01c8 00F0AE80 		beq	.L23
 234:main.c        ****                 if (press_id < MA_WINDOW){
 777              		.loc 1 234 0
 778 01cc 264B     		ldr	r3, .L65+72
 779 01ce 1B68     		ldr	r3, [r3]
 780 01d0 0E2B     		cmp	r3, #14
 781 01d2 0BDC     		bgt	.L24
 235:main.c        ****                     pressure_sum += voltage;     
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 20


 782              		.loc 1 235 0
 783 01d4 254B     		ldr	r3, .L65+76
 784 01d6 1B68     		ldr	r3, [r3]	@ float
 785 01d8 1846     		mov	r0, r3
 786 01da D7F81011 		ldr	r1, [r7, #272]	@ float
 787 01de FFF7FEFF 		bl	__aeabi_fadd
 788 01e2 0346     		mov	r3, r0
 789 01e4 1A46     		mov	r2, r3
 790 01e6 214B     		ldr	r3, .L65+76
 791 01e8 1A60     		str	r2, [r3]	@ float
 792 01ea 91E0     		b	.L25
 793              	.L24:
 236:main.c        ****                 }
 237:main.c        ****                 else if(press_id == MA_WINDOW){
 794              		.loc 1 237 0
 795 01ec 1E4B     		ldr	r3, .L65+72
 796 01ee 1B68     		ldr	r3, [r3]
 797 01f0 0F2B     		cmp	r3, #15
 798 01f2 3FD1     		bne	.L26
 238:main.c        ****                     pressure_sum += voltage;
 799              		.loc 1 238 0
 800 01f4 1D4B     		ldr	r3, .L65+76
 801 01f6 1B68     		ldr	r3, [r3]	@ float
 802 01f8 1846     		mov	r0, r3
 803 01fa D7F81011 		ldr	r1, [r7, #272]	@ float
 804 01fe FFF7FEFF 		bl	__aeabi_fadd
 805 0202 0346     		mov	r3, r0
 806 0204 1A46     		mov	r2, r3
 807 0206 194B     		ldr	r3, .L65+76
 808 0208 1A60     		str	r2, [r3]	@ float
 239:main.c        ****                     pressure_avg = pressure_sum/MA_WINDOW;                            // compute ba
 809              		.loc 1 239 0
 810 020a 184B     		ldr	r3, .L65+76
 811 020c 1B68     		ldr	r3, [r3]	@ float
 812 020e 1846     		mov	r0, r3
 813 0210 1749     		ldr	r1, .L65+80
 814 0212 FFF7FEFF 		bl	__aeabi_fdiv
 815 0216 0346     		mov	r3, r0
 816 0218 C7F82431 		str	r3, [r7, #292]	@ float
 817 021c 78E0     		b	.L25
 818              	.L66:
 819 021e 00BF     		.align	3
 820              	.L65:
 821 0220 8FC2F528 		.word	687194767
 822 0224 5C8F4A3F 		.word	1061850972
 823 0228 CC000000 		.word	.LC0
 824 022c DC000000 		.word	.LC1
 825 0230 F0000000 		.word	.LC2
 826 0234 00010000 		.word	.LC3
 827 0238 14010000 		.word	.LC4
 828 023c 28010000 		.word	.LC5
 829 0240 00000000 		.word	Sample_ISR_Handler
 830 0244 00000000 		.word	rx_interrupt
 831 0248 00000000 		.word	Addr
 832 024c 00000000 		.word	.LC6
 833 0250 10000000 		.word	.LC7
 834 0254 00000000 		.word	file
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 21


 835 0258 00000000 		.word	STATE
 836 025c 1C000000 		.word	.LC8
 837 0260 00000000 		.word	Countdown_ISR_Handler
 838 0264 00000000 		.word	collect_flag
 839 0268 00000000 		.word	press_id
 840 026c 00000000 		.word	pressure_sum
 841 0270 00007041 		.word	1097859072
 842              	.L26:
 843              	.LBB3:
 240:main.c        ****                 }
 241:main.c        ****                 else{
 242:main.c        ****                     pressure_avg = ComputeMA(pressure_avg, MA_WINDOW, voltage);
 844              		.loc 1 242 0
 845 0274 D7F82401 		ldr	r0, [r7, #292]	@ float
 846 0278 0F21     		movs	r1, #15
 847 027a D7F81021 		ldr	r2, [r7, #272]	@ float
 848 027e FFF7FEFF 		bl	ComputeMA
 849 0282 C7F82401 		str	r0, [r7, #292]	@ float
 243:main.c        ****                     num = pressure_avg;
 850              		.loc 1 243 0
 851 0286 D7F82401 		ldr	r0, [r7, #292]	@ float
 852 028a FFF7FEFF 		bl	__aeabi_f2iz
 853 028e 0346     		mov	r3, r0
 854 0290 C7F81831 		str	r3, [r7, #280]
 244:main.c        ****                     temp = pressure_avg - num;
 855              		.loc 1 244 0
 856 0294 D7F81801 		ldr	r0, [r7, #280]
 857 0298 FFF7FEFF 		bl	__aeabi_i2f
 858 029c 0346     		mov	r3, r0
 859 029e D7F82401 		ldr	r0, [r7, #292]	@ float
 860 02a2 1946     		mov	r1, r3
 861 02a4 FFF7FEFF 		bl	__aeabi_fsub
 862 02a8 0346     		mov	r3, r0
 863 02aa C7F80C31 		str	r3, [r7, #268]	@ float
 245:main.c        ****                     decimals = temp * 10000;
 864              		.loc 1 245 0
 865 02ae D7F80C01 		ldr	r0, [r7, #268]	@ float
 866 02b2 BB49     		ldr	r1, .L67
 867 02b4 FFF7FEFF 		bl	__aeabi_fmul
 868 02b8 0346     		mov	r3, r0
 869 02ba 1846     		mov	r0, r3
 870 02bc FFF7FEFF 		bl	__aeabi_f2iz
 871 02c0 0346     		mov	r3, r0
 872 02c2 C7F81431 		str	r3, [r7, #276]
 246:main.c        ****                     char sdbuf[60] = {};
 873              		.loc 1 246 0
 874 02c6 3B46     		mov	r3, r7
 875 02c8 1A46     		mov	r2, r3
 876 02ca 3C23     		movs	r3, #60
 877 02cc 1046     		mov	r0, r2
 878 02ce 0021     		movs	r1, #0
 879 02d0 1A46     		mov	r2, r3
 880 02d2 FFF7FEFF 		bl	memset
 247:main.c        ****                     #ifdef SD
 248:main.c        ****                         sprintf(sdbuf, "pressure: %d.%04d, %d\n", num, decimals, (int16)output); //
 881              		.loc 1 248 0
 882 02d6 D7F80801 		ldr	r0, [r7, #264]	@ float
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 22


 883 02da FFF7FEFF 		bl	__aeabi_f2iz
 884 02de 0346     		mov	r3, r0
 885 02e0 9BB2     		uxth	r3, r3
 886 02e2 1BB2     		sxth	r3, r3
 887 02e4 3A46     		mov	r2, r7
 888 02e6 0093     		str	r3, [sp]
 889 02e8 1046     		mov	r0, r2
 890 02ea AE49     		ldr	r1, .L67+4
 891 02ec D7F81821 		ldr	r2, [r7, #280]
 892 02f0 D7F81431 		ldr	r3, [r7, #276]
 893 02f4 FFF7FEFF 		bl	sprintf
 249:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));                           
 894              		.loc 1 249 0
 895 02f8 AB4B     		ldr	r3, .L67+8
 896 02fa 1C68     		ldr	r4, [r3]
 897 02fc 3B46     		mov	r3, r7
 898 02fe 1846     		mov	r0, r3
 899 0300 FFF7FEFF 		bl	strlen
 900 0304 0246     		mov	r2, r0
 901 0306 3B46     		mov	r3, r7
 902 0308 2046     		mov	r0, r4
 903 030a 1946     		mov	r1, r3
 904 030c FFF7FEFF 		bl	FS_Write
 905              	.L25:
 906              	.LBE3:
 250:main.c        ****                     #endif 
 251:main.c        ****                 }
 252:main.c        ****                 if (STATE != DESCENDING) collect_flag = 0;
 907              		.loc 1 252 0
 908 0310 A64B     		ldr	r3, .L67+12
 909 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910 0314 022B     		cmp	r3, #2
 911 0316 02D0     		beq	.L27
 912              		.loc 1 252 0 is_stmt 0 discriminator 1
 913 0318 A54B     		ldr	r3, .L67+16
 914 031a 0022     		movs	r2, #0
 915 031c 1A70     		strb	r2, [r3]
 916              	.L27:
 253:main.c        ****                 press_id++;
 917              		.loc 1 253 0 is_stmt 1
 918 031e A54B     		ldr	r3, .L67+20
 919 0320 1B68     		ldr	r3, [r3]
 920 0322 0133     		adds	r3, r3, #1
 921 0324 A34A     		ldr	r2, .L67+20
 922 0326 1360     		str	r3, [r2]
 923              	.L23:
 254:main.c        ****             }
 255:main.c        ****         }
 256:main.c        ****         
 257:main.c        ****     /* Bluetooth message response, after 2 bytes received, retrieve message from those 2 bytes. Onc
 258:main.c        ****      * has arrived, process it. */
 259:main.c        ****     #ifdef BT
 260:main.c        ****         if (msg_count >= 2){
 924              		.loc 1 260 0
 925 0328 A34B     		ldr	r3, .L67+24
 926 032a 1B68     		ldr	r3, [r3]
 927 032c 012B     		cmp	r3, #1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 23


 928 032e 13DD     		ble	.L28
 261:main.c        ****             tens = RxBuffer[0] - 48;
 929              		.loc 1 261 0
 930 0330 A24B     		ldr	r3, .L67+28
 931 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 932 0334 303B     		subs	r3, r3, #48
 933 0336 3B64     		str	r3, [r7, #64]
 262:main.c        ****             ones = RxBuffer[1] - 48;
 934              		.loc 1 262 0
 935 0338 A04B     		ldr	r3, .L67+28
 936 033a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 937 033c 303B     		subs	r3, r3, #48
 938 033e C7F8FC30 		str	r3, [r7, #252]
 263:main.c        ****             bytes = (tens * 10) + ones;
 939              		.loc 1 263 0
 940 0342 3A6C     		ldr	r2, [r7, #64]
 941 0344 1346     		mov	r3, r2
 942 0346 9B00     		lsls	r3, r3, #2
 943 0348 1344     		add	r3, r3, r2
 944 034a 5B00     		lsls	r3, r3, #1
 945 034c 1A46     		mov	r2, r3
 946 034e D7F8FC30 		ldr	r3, [r7, #252]
 947 0352 1344     		add	r3, r3, r2
 948 0354 9A4A     		ldr	r2, .L67+32
 949 0356 1360     		str	r3, [r2]
 950              	.L28:
 264:main.c        ****         } 
 265:main.c        ****         
 266:main.c        ****         if(rxflag) {
 951              		.loc 1 266 0
 952 0358 9A4B     		ldr	r3, .L67+36
 953 035a 1B68     		ldr	r3, [r3]
 954 035c 002B     		cmp	r3, #0
 955 035e 2DD0     		beq	.L29
 267:main.c        ****             uint8_to_char(RxBuffer, &tempbuf[0], 20);
 956              		.loc 1 267 0
 957 0360 07F1B003 		add	r3, r7, #176
 958 0364 9548     		ldr	r0, .L67+28
 959 0366 1946     		mov	r1, r3
 960 0368 1422     		movs	r2, #20
 961 036a FFF7FEFF 		bl	uint8_to_char
 268:main.c        ****             depth = BT_Process(&tempbuf[3], &STATE, bytes, &dataflag, &reset);
 962              		.loc 1 268 0
 963 036e 944B     		ldr	r3, .L67+32
 964 0370 1A68     		ldr	r2, [r3]
 965 0372 07F1B003 		add	r3, r7, #176
 966 0376 D91C     		adds	r1, r3, #3
 967 0378 934B     		ldr	r3, .L67+40
 968 037a 0093     		str	r3, [sp]
 969 037c 0846     		mov	r0, r1
 970 037e 8B49     		ldr	r1, .L67+12
 971 0380 924B     		ldr	r3, .L67+44
 972 0382 FFF7FEFF 		bl	BT_Process
 973 0386 0246     		mov	r2, r0
 974 0388 914B     		ldr	r3, .L67+48
 975 038a 1A60     		str	r2, [r3]
 269:main.c        ****             
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 24


 270:main.c        ****             msg_count = 0; bytes = 0;
 976              		.loc 1 270 0
 977 038c 8A4B     		ldr	r3, .L67+24
 978 038e 0022     		movs	r2, #0
 979 0390 1A60     		str	r2, [r3]
 980 0392 8B4B     		ldr	r3, .L67+32
 981 0394 0022     		movs	r2, #0
 982 0396 1A60     		str	r2, [r3]
 271:main.c        ****             memset(RxBuffer, 0, BUFFER_LEN);
 983              		.loc 1 271 0
 984 0398 8848     		ldr	r0, .L67+28
 985 039a 0021     		movs	r1, #0
 986 039c 4022     		movs	r2, #64
 987 039e FFF7FEFF 		bl	memset
 272:main.c        ****             memset(tempbuf, 0, 20);
 988              		.loc 1 272 0
 989 03a2 07F1B003 		add	r3, r7, #176
 990 03a6 1846     		mov	r0, r3
 991 03a8 0021     		movs	r1, #0
 992 03aa 1422     		movs	r2, #20
 993 03ac FFF7FEFF 		bl	memset
 273:main.c        ****             countdown = 0;
 994              		.loc 1 273 0
 995 03b0 884B     		ldr	r3, .L67+52
 996 03b2 0022     		movs	r2, #0
 997 03b4 1A70     		strb	r2, [r3]
 274:main.c        ****             rxflag = 0;
 998              		.loc 1 274 0
 999 03b6 834B     		ldr	r3, .L67+36
 1000 03b8 0022     		movs	r2, #0
 1001 03ba 1A60     		str	r2, [r3]
 1002              	.L29:
 275:main.c        ****         }
 276:main.c        ****     #endif
 277:main.c        ****     
 278:main.c        ****         /* Get Z-Acceleration */
 279:main.c        **** 
 280:main.c        ****         az = MPU6050_getAccelerationZ();
 1003              		.loc 1 280 0
 1004 03bc FFF7FEFF 		bl	MPU6050_getAccelerationZ
 1005 03c0 0346     		mov	r3, r0
 1006 03c2 A7F8F630 		strh	r3, [r7, #246]	@ movhi
 281:main.c        **** 
 282:main.c        ****         int t = 1;
 1007              		.loc 1 282 0
 1008 03c6 0123     		movs	r3, #1
 1009 03c8 FB63     		str	r3, [r7, #60]
 283:main.c        ****         /* State Machine */
 284:main.c        ****         switch (STATE){
 1010              		.loc 1 284 0
 1011 03ca 784B     		ldr	r3, .L67+12
 1012 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1013 03ce 013B     		subs	r3, r3, #1
 1014 03d0 042B     		cmp	r3, #4
 1015 03d2 00F25482 		bhi	.L64
 1016 03d6 01A2     		adr	r2, .L32
 1017 03d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 25


 1018              		.p2align 2
 1019              	.L32:
 1020 03dc F1030000 		.word	.L31+1
 1021 03e0 7D050000 		.word	.L33+1
 1022 03e4 2B070000 		.word	.L34+1
 1023 03e8 B5070000 		.word	.L35+1
 1024 03ec 5B080000 		.word	.L36+1
 1025              		.p2align 1
 1026              	.L31:
 285:main.c        ****     
 286:main.c        ****             /* Waiting for start command and depth*/
 287:main.c        ****             case WAIT_TO_LAUNCH:  
 288:main.c        ****                 if (reset){                         // If reset command was received, reset:
 1027              		.loc 1 288 0
 1028 03f0 754B     		ldr	r3, .L67+40
 1029 03f2 1B68     		ldr	r3, [r3]
 1030 03f4 002B     		cmp	r3, #0
 1031 03f6 37D0     		beq	.L37
 289:main.c        ****                     id = 1;                                // Interrupt count.
 1032              		.loc 1 289 0
 1033 03f8 774B     		ldr	r3, .L67+56
 1034 03fa 0122     		movs	r2, #1
 1035 03fc 1A60     		str	r2, [r3]
 290:main.c        ****                     data_time = 0;                         // data point num
 1036              		.loc 1 290 0
 1037 03fe 774B     		ldr	r3, .L67+60
 1038 0400 0022     		movs	r2, #0
 1039 0402 1A60     		str	r2, [r3]
 291:main.c        ****                     sum = 0;                               // Sum of accelerometer values. 
 1040              		.loc 1 291 0
 1041 0404 764B     		ldr	r3, .L67+64
 1042 0406 0022     		movs	r2, #0
 1043 0408 1A60     		str	r2, [r3]
 292:main.c        ****                     average = 0;                           // Moving average variable.
 1044              		.loc 1 292 0
 1045 040a 764B     		ldr	r3, .L67+68
 1046 040c 0022     		movs	r2, #0
 1047 040e 1A80     		strh	r2, [r3]	@ movhi
 293:main.c        ****                     xavg = 0; yavg = 0;                    // Gyro average variables
 1048              		.loc 1 293 0
 1049 0410 754B     		ldr	r3, .L67+72
 1050 0412 4FF00002 		mov	r2, #0
 1051 0416 1A60     		str	r2, [r3]	@ float
 1052 0418 744B     		ldr	r3, .L67+76
 1053 041a 4FF00002 		mov	r2, #0
 1054 041e 1A60     		str	r2, [r3]	@ float
 294:main.c        ****                     collect_flag = 0;                      // flag indicating when to record accele
 1055              		.loc 1 294 0
 1056 0420 634B     		ldr	r3, .L67+16
 1057 0422 0022     		movs	r2, #0
 1058 0424 1A70     		strb	r2, [r3]
 295:main.c        ****                     wait_flag = 0;                         // flag indicating when to increment int
 1059              		.loc 1 295 0
 1060 0426 724B     		ldr	r3, .L67+80
 1061 0428 0022     		movs	r2, #0
 1062 042a 1A70     		strb	r2, [r3]
 296:main.c        ****                     PANIC_flag = 0;                        // flag indicating water is present in h
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 26


 1063              		.loc 1 296 0
 1064 042c 714B     		ldr	r3, .L67+84
 1065 042e 0022     		movs	r2, #0
 1066 0430 1A70     		strb	r2, [r3]
 297:main.c        ****                     //bool first_test = 1;                 // flag indicating first test(longer cou
 298:main.c        ****                     depth = 0; countdown = 0;              // Current desired depth, variable for c
 1067              		.loc 1 298 0
 1068 0432 674B     		ldr	r3, .L67+48
 1069 0434 0022     		movs	r2, #0
 1070 0436 1A60     		str	r2, [r3]
 1071 0438 664B     		ldr	r3, .L67+52
 1072 043a 0022     		movs	r2, #0
 1073 043c 1A70     		strb	r2, [r3]
 299:main.c        ****                     msg_count = 0; dataflag = 0;           // BT message len variable, data flag 
 1074              		.loc 1 299 0
 1075 043e 5E4B     		ldr	r3, .L67+24
 1076 0440 0022     		movs	r2, #0
 1077 0442 1A60     		str	r2, [r3]
 1078 0444 614B     		ldr	r3, .L67+44
 1079 0446 0022     		movs	r2, #0
 1080 0448 1A60     		str	r2, [r3]
 300:main.c        ****                     reset = 0;                             // indicates whether to reset variables 
 1081              		.loc 1 300 0
 1082 044a 5F4B     		ldr	r3, .L67+40
 1083 044c 0022     		movs	r2, #0
 1084 044e 1A60     		str	r2, [r3]
 301:main.c        ****                     pulse = 0;
 1085              		.loc 1 301 0
 1086 0450 0023     		movs	r3, #0
 1087 0452 C7F81C31 		str	r3, [r7, #284]
 302:main.c        ****                     #ifdef LCD
 303:main.c        ****                         setCursor(0,0);
 1088              		.loc 1 303 0
 1089 0456 0020     		movs	r0, #0
 1090 0458 0021     		movs	r1, #0
 1091 045a FFF7FEFF 		bl	setCursor
 304:main.c        ****                         clear();
 1092              		.loc 1 304 0
 1093 045e FFF7FEFF 		bl	clear
 305:main.c        ****                         LCD_print("STATE: WAIT");  
 1094              		.loc 1 305 0
 1095 0462 6548     		ldr	r0, .L67+88
 1096 0464 FFF7FEFF 		bl	LCD_print
 1097              	.L37:
 306:main.c        ****                     #endif 
 307:main.c        ****                 }
 308:main.c        ****             
 309:main.c        ****                 if (transmit_flag){
 1098              		.loc 1 309 0
 1099 0468 644B     		ldr	r3, .L67+92
 1100 046a 1B68     		ldr	r3, [r3]
 1101 046c 002B     		cmp	r3, #0
 1102 046e 0BD0     		beq	.L38
 310:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &tens); // Here, the STATE variable only matte
 1103              		.loc 1 310 0
 1104 0470 07F1B002 		add	r2, r7, #176
 1105 0474 07F14003 		add	r3, r7, #64
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 27


 1106 0478 1046     		mov	r0, r2
 1107 047a 4C49     		ldr	r1, .L67+12
 1108 047c 0A22     		movs	r2, #10
 1109 047e FFF7FEFF 		bl	BT_Send
 311:main.c        ****                     transmit_flag = 0;
 1110              		.loc 1 311 0
 1111 0482 5E4B     		ldr	r3, .L67+92
 1112 0484 0022     		movs	r2, #0
 1113 0486 1A60     		str	r2, [r3]
 1114              	.L38:
 312:main.c        ****                 }
 313:main.c        ****                 // Once depth has been entered, can begin countdown into descending
 314:main.c        ****                 if(wait_flag == 1){
 1115              		.loc 1 314 0
 1116 0488 594B     		ldr	r3, .L67+80
 1117 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1118 048c 002B     		cmp	r3, #0
 1119 048e 74D0     		beq	.L39
 315:main.c        ****                     #ifdef BT
 316:main.c        ****                         stateMsgCount = 0;
 1120              		.loc 1 316 0
 1121 0490 0023     		movs	r3, #0
 1122 0492 C7F82031 		str	r3, [r7, #288]
 317:main.c        ****                         sprintf(buf, "\n%d seconds remaining", (10 - countdown));
 1123              		.loc 1 317 0
 1124 0496 4F4B     		ldr	r3, .L67+52
 1125 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 049a C3F10A03 		rsb	r3, r3, #10
 1127 049e 07F1C402 		add	r2, r7, #196
 1128 04a2 1046     		mov	r0, r2
 1129 04a4 5649     		ldr	r1, .L67+96
 1130 04a6 1A46     		mov	r2, r3
 1131 04a8 FFF7FEFF 		bl	sprintf
 318:main.c        ****                         while (stateMsgCount < 21){
 1132              		.loc 1 318 0
 1133 04ac 19E0     		b	.L40
 1134              	.L43:
 319:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1135              		.loc 1 319 0
 1136 04ae 11E0     		b	.L41
 1137              	.L42:
 320:main.c        ****                                 UART_PutChar(buf[stateMsgCount++]);
 1138              		.loc 1 320 0
 1139 04b0 D7F82031 		ldr	r3, [r7, #288]
 1140 04b4 5A1C     		adds	r2, r3, #1
 1141 04b6 C7F82021 		str	r2, [r7, #288]
 1142 04ba 07F59472 		add	r2, r7, #296
 1143 04be 1344     		add	r3, r3, r2
 1144 04c0 13F8643C 		ldrb	r3, [r3, #-100]	@ zero_extendqisi2
 1145 04c4 1846     		mov	r0, r3
 1146 04c6 FFF7FEFF 		bl	UART_PutChar
 321:main.c        ****                                 if (stateMsgCount >= 21) break;
 1147              		.loc 1 321 0
 1148 04ca D7F82031 		ldr	r3, [r7, #288]
 1149 04ce 142B     		cmp	r3, #20
 1150 04d0 00DD     		ble	.L41
 1151 04d2 06E0     		b	.L40
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 28


 1152              	.L41:
 319:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1153              		.loc 1 319 0
 1154 04d4 FFF7FEFF 		bl	UART_ReadTxStatus
 1155 04d8 0346     		mov	r3, r0
 1156 04da 03F00803 		and	r3, r3, #8
 1157 04de 002B     		cmp	r3, #0
 1158 04e0 E6D1     		bne	.L42
 1159              	.L40:
 318:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1160              		.loc 1 318 0
 1161 04e2 D7F82031 		ldr	r3, [r7, #288]
 1162 04e6 142B     		cmp	r3, #20
 1163 04e8 E1DD     		ble	.L43
 322:main.c        ****                             }
 323:main.c        ****                         }
 324:main.c        ****                     #endif
 325:main.c        ****                     /* at 10 seconds, change into descending */
 326:main.c        ****                     if(countdown == 10){
 1164              		.loc 1 326 0
 1165 04ea 3A4B     		ldr	r3, .L67+52
 1166 04ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1167 04ee 0A2B     		cmp	r3, #10
 1168 04f0 3FD1     		bne	.L44
 327:main.c        ****                         descent_time = (((depth / 13) + 3) * 2 * 500);
 1169              		.loc 1 327 0
 1170 04f2 374B     		ldr	r3, .L67+48
 1171 04f4 1B68     		ldr	r3, [r3]
 1172 04f6 434A     		ldr	r2, .L67+100
 1173 04f8 82FB0312 		smull	r1, r2, r2, r3
 1174 04fc 9210     		asrs	r2, r2, #2
 1175 04fe DB17     		asrs	r3, r3, #31
 1176 0500 D31A     		subs	r3, r2, r3
 1177 0502 0333     		adds	r3, r3, #3
 1178 0504 4FF47A72 		mov	r2, #1000
 1179 0508 02FB03F3 		mul	r3, r2, r3
 1180 050c 3E4A     		ldr	r2, .L67+104
 1181 050e 1360     		str	r3, [r2]
 328:main.c        ****                         /* descent time takes about 2~3 seconds to go 13 feet, add 3 for extra 10m 
 329:main.c        ****                          * number of ISR calls to get 1 second */ 
 330:main.c        ****                         STATE = DESCENDING;
 1182              		.loc 1 330 0
 1183 0510 264B     		ldr	r3, .L67+12
 1184 0512 0222     		movs	r2, #2
 1185 0514 1A70     		strb	r2, [r3]
 331:main.c        ****                         #ifdef LCD
 332:main.c        ****                             setCursor(0,0);
 1186              		.loc 1 332 0
 1187 0516 0020     		movs	r0, #0
 1188 0518 0021     		movs	r1, #0
 1189 051a FFF7FEFF 		bl	setCursor
 333:main.c        ****                             clear();
 1190              		.loc 1 333 0
 1191 051e FFF7FEFF 		bl	clear
 334:main.c        ****                             LCD_print("STATE: DESCENT");
 1192              		.loc 1 334 0
 1193 0522 3A48     		ldr	r0, .L67+108
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 29


 1194 0524 FFF7FEFF 		bl	LCD_print
 335:main.c        ****                         #endif
 336:main.c        ****                         #ifdef BT
 337:main.c        ****                             stateMsgCount = 0;
 1195              		.loc 1 337 0
 1196 0528 0023     		movs	r3, #0
 1197 052a C7F82031 		str	r3, [r7, #288]
 338:main.c        ****                             while (stateMsgCount < DESCENDING_LEN){
 1198              		.loc 1 338 0
 1199 052e 19E0     		b	.L45
 1200              	.L48:
 339:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1201              		.loc 1 339 0
 1202 0530 11E0     		b	.L46
 1203              	.L47:
 340:main.c        ****                                     UART_PutChar(descendbuf[stateMsgCount++]);
 1204              		.loc 1 340 0
 1205 0532 D7F82031 		ldr	r3, [r7, #288]
 1206 0536 5A1C     		adds	r2, r3, #1
 1207 0538 C7F82021 		str	r2, [r7, #288]
 1208 053c 07F59472 		add	r2, r7, #296
 1209 0540 1344     		add	r3, r3, r2
 1210 0542 13F89C3C 		ldrb	r3, [r3, #-156]	@ zero_extendqisi2
 1211 0546 1846     		mov	r0, r3
 1212 0548 FFF7FEFF 		bl	UART_PutChar
 341:main.c        ****                                     if (stateMsgCount >= DESCENDING_LEN) break;
 1213              		.loc 1 341 0
 1214 054c D7F82031 		ldr	r3, [r7, #288]
 1215 0550 122B     		cmp	r3, #18
 1216 0552 00DD     		ble	.L46
 1217 0554 06E0     		b	.L45
 1218              	.L46:
 339:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1219              		.loc 1 339 0
 1220 0556 FFF7FEFF 		bl	UART_ReadTxStatus
 1221 055a 0346     		mov	r3, r0
 1222 055c 03F00803 		and	r3, r3, #8
 1223 0560 002B     		cmp	r3, #0
 1224 0562 E6D1     		bne	.L47
 1225              	.L45:
 338:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1226              		.loc 1 338 0
 1227 0564 D7F82031 		ldr	r3, [r7, #288]
 1228 0568 122B     		cmp	r3, #18
 1229 056a E1DD     		ble	.L48
 342:main.c        ****                                 }
 343:main.c        ****                             }
 344:main.c        ****                         #endif
 345:main.c        ****                         countdown = 0; 
 1230              		.loc 1 345 0
 1231 056c 194B     		ldr	r3, .L67+52
 1232 056e 0022     		movs	r2, #0
 1233 0570 1A70     		strb	r2, [r3]
 1234              	.L44:
 346:main.c        ****                     }
 347:main.c        ****                     wait_flag = 0; 
 1235              		.loc 1 347 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 30


 1236 0572 1F4B     		ldr	r3, .L67+80
 1237 0574 0022     		movs	r2, #0
 1238 0576 1A70     		strb	r2, [r3]
 348:main.c        ****                 }
 349:main.c        ****                 break;
 1239              		.loc 1 349 0
 1240 0578 82E1     		b	.L49
 1241              	.L39:
 1242 057a 81E1     		b	.L49
 1243              	.L33:
 350:main.c        ****                 
 351:main.c        ****             case DESCENDING:
 352:main.c        ****                 if(collect_flag == 1){              // Check accelerometer and gyro data
 1244              		.loc 1 352 0
 1245 057c 0C4B     		ldr	r3, .L67+16
 1246 057e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1247 0580 002B     		cmp	r3, #0
 1248 0582 00F0D180 		beq	.L50
 353:main.c        ****                     if (id < MA_WINDOW){    
 1249              		.loc 1 353 0
 1250 0586 144B     		ldr	r3, .L67+56
 1251 0588 1B68     		ldr	r3, [r3]
 1252 058a 0E2B     		cmp	r3, #14
 1253 058c 40DC     		bgt	.L51
 354:main.c        ****                         sum += az;  
 1254              		.loc 1 354 0
 1255 058e B7F9F620 		ldrsh	r2, [r7, #246]
 1256 0592 134B     		ldr	r3, .L67+64
 1257 0594 1B68     		ldr	r3, [r3]
 1258 0596 1344     		add	r3, r3, r2
 1259 0598 114A     		ldr	r2, .L67+64
 1260 059a 1360     		str	r3, [r2]
 1261 059c 69E0     		b	.L52
 1262              	.L68:
 1263 059e 00BF     		.align	2
 1264              	.L67:
 1265 05a0 00401C46 		.word	1176256512
 1266 05a4 28000000 		.word	.LC9
 1267 05a8 00000000 		.word	fsfile
 1268 05ac 00000000 		.word	STATE
 1269 05b0 00000000 		.word	collect_flag
 1270 05b4 00000000 		.word	press_id
 1271 05b8 00000000 		.word	msg_count
 1272 05bc 00000000 		.word	RxBuffer
 1273 05c0 00000000 		.word	bytes
 1274 05c4 00000000 		.word	rxflag
 1275 05c8 00000000 		.word	reset
 1276 05cc 00000000 		.word	dataflag
 1277 05d0 00000000 		.word	depth
 1278 05d4 00000000 		.word	countdown
 1279 05d8 00000000 		.word	id
 1280 05dc 00000000 		.word	data_time
 1281 05e0 00000000 		.word	sum
 1282 05e4 00000000 		.word	average
 1283 05e8 00000000 		.word	xavg
 1284 05ec 00000000 		.word	yavg
 1285 05f0 00000000 		.word	wait_flag
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 31


 1286 05f4 00000000 		.word	PANIC_flag
 1287 05f8 1C000000 		.word	.LC8
 1288 05fc 00000000 		.word	transmit_flag
 1289 0600 40000000 		.word	.LC10
 1290 0604 4FECC44E 		.word	1321528399
 1291 0608 00000000 		.word	descent_time
 1292 060c 58000000 		.word	.LC11
 1293              	.L51:
 355:main.c        ****                     }
 356:main.c        ****                     else if(id == MA_WINDOW){
 1294              		.loc 1 356 0
 1295 0610 9C4B     		ldr	r3, .L69
 1296 0612 1B68     		ldr	r3, [r3]
 1297 0614 0F2B     		cmp	r3, #15
 1298 0616 12D1     		bne	.L53
 357:main.c        ****                         sum += az;
 1299              		.loc 1 357 0
 1300 0618 B7F9F620 		ldrsh	r2, [r7, #246]
 1301 061c 9A4B     		ldr	r3, .L69+4
 1302 061e 1B68     		ldr	r3, [r3]
 1303 0620 1344     		add	r3, r3, r2
 1304 0622 994A     		ldr	r2, .L69+4
 1305 0624 1360     		str	r3, [r2]
 358:main.c        ****                         sum = sum/MA_WINDOW;                          
 1306              		.loc 1 358 0
 1307 0626 984B     		ldr	r3, .L69+4
 1308 0628 1B68     		ldr	r3, [r3]
 1309 062a 984A     		ldr	r2, .L69+8
 1310 062c 82FB0312 		smull	r1, r2, r2, r3
 1311 0630 1A44     		add	r2, r2, r3
 1312 0632 D210     		asrs	r2, r2, #3
 1313 0634 DB17     		asrs	r3, r3, #31
 1314 0636 D31A     		subs	r3, r2, r3
 1315 0638 934A     		ldr	r2, .L69+4
 1316 063a 1360     		str	r3, [r2]
 1317 063c 19E0     		b	.L52
 1318              	.L53:
 359:main.c        ****                     }
 360:main.c        ****                     else{
 361:main.c        ****                         average = ComputeMA(average, MA_WINDOW, az);                // Compute aver
 1319              		.loc 1 361 0
 1320 063e 944B     		ldr	r3, .L69+12
 1321 0640 1B88     		ldrh	r3, [r3]
 1322 0642 1BB2     		sxth	r3, r3
 1323 0644 1846     		mov	r0, r3
 1324 0646 FFF7FEFF 		bl	__aeabi_i2f
 1325 064a 0446     		mov	r4, r0
 1326 064c B7F9F630 		ldrsh	r3, [r7, #246]
 1327 0650 1846     		mov	r0, r3
 1328 0652 FFF7FEFF 		bl	__aeabi_i2f
 1329 0656 0346     		mov	r3, r0
 1330 0658 2046     		mov	r0, r4
 1331 065a 0F21     		movs	r1, #15
 1332 065c 1A46     		mov	r2, r3
 1333 065e FFF7FEFF 		bl	ComputeMA
 1334 0662 0346     		mov	r3, r0
 1335 0664 1846     		mov	r0, r3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 32


 1336 0666 FFF7FEFF 		bl	__aeabi_f2iz
 1337 066a 0346     		mov	r3, r0
 1338 066c 9AB2     		uxth	r2, r3
 1339 066e 884B     		ldr	r3, .L69+12
 1340 0670 1A80     		strh	r2, [r3]	@ movhi
 1341              	.L52:
 362:main.c        ****                     }
 363:main.c        ****                     
 364:main.c        ****                     if(average > BOT_THRESHOLD){                        
 1342              		.loc 1 364 0
 1343 0672 874B     		ldr	r3, .L69+12
 1344 0674 1B88     		ldrh	r3, [r3]
 1345 0676 1BB2     		sxth	r3, r3
 1346 0678 44F62062 		movw	r2, #20000
 1347 067c 9342     		cmp	r3, r2
 1348 067e 2CDD     		ble	.L54
 365:main.c        ****                         STATE = LANDED;                                     //Switch to LANDED stat
 1349              		.loc 1 365 0
 1350 0680 844B     		ldr	r3, .L69+16
 1351 0682 0322     		movs	r2, #3
 1352 0684 1A70     		strb	r2, [r3]
 366:main.c        ****                         #ifdef LCD
 367:main.c        ****                             setCursor(0,0);
 1353              		.loc 1 367 0
 1354 0686 0020     		movs	r0, #0
 1355 0688 0021     		movs	r1, #0
 1356 068a FFF7FEFF 		bl	setCursor
 368:main.c        ****                             clear();
 1357              		.loc 1 368 0
 1358 068e FFF7FEFF 		bl	clear
 369:main.c        ****                             LCD_print("STATE: LANDED");  
 1359              		.loc 1 369 0
 1360 0692 8148     		ldr	r0, .L69+20
 1361 0694 FFF7FEFF 		bl	LCD_print
 370:main.c        ****                         #endif
 371:main.c        ****                         #ifdef SD
 372:main.c        ****                             FS_Write(fsfile, landedbuf, LANDED_LEN);
 1362              		.loc 1 372 0
 1363 0698 804B     		ldr	r3, .L69+24
 1364 069a 1A68     		ldr	r2, [r3]
 1365 069c 07F17C03 		add	r3, r7, #124
 1366 06a0 1046     		mov	r0, r2
 1367 06a2 1946     		mov	r1, r3
 1368 06a4 0E22     		movs	r2, #14
 1369 06a6 FFF7FEFF 		bl	FS_Write
 373:main.c        ****                         #endif
 374:main.c        ****                         #ifdef SD
 375:main.c        ****                             FS_Write(fsfile, vacuumbuf, VACUUM_LEN);
 1370              		.loc 1 375 0
 1371 06aa 7C4B     		ldr	r3, .L69+24
 1372 06ac 1A68     		ldr	r2, [r3]
 1373 06ae 07F16803 		add	r3, r7, #104
 1374 06b2 1046     		mov	r0, r2
 1375 06b4 1946     		mov	r1, r3
 1376 06b6 1122     		movs	r2, #17
 1377 06b8 FFF7FEFF 		bl	FS_Write
 376:main.c        ****                         #endif
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 33


 377:main.c        ****                         
 378:main.c        ****                         id=0;                                                   //reset sample coun
 1378              		.loc 1 378 0
 1379 06bc 714B     		ldr	r3, .L69
 1380 06be 0022     		movs	r2, #0
 1381 06c0 1A60     		str	r2, [r3]
 379:main.c        ****                         data_time = 0;
 1382              		.loc 1 379 0
 1383 06c2 774B     		ldr	r3, .L69+28
 1384 06c4 0022     		movs	r2, #0
 1385 06c6 1A60     		str	r2, [r3]
 380:main.c        ****                         sum = 0;
 1386              		.loc 1 380 0
 1387 06c8 6F4B     		ldr	r3, .L69+4
 1388 06ca 0022     		movs	r2, #0
 1389 06cc 1A60     		str	r2, [r3]
 381:main.c        ****                         average = 0; 
 1390              		.loc 1 381 0
 1391 06ce 704B     		ldr	r3, .L69+12
 1392 06d0 0022     		movs	r2, #0
 1393 06d2 1A80     		strh	r2, [r3]	@ movhi
 382:main.c        ****                         countdown = 0;
 1394              		.loc 1 382 0
 1395 06d4 734B     		ldr	r3, .L69+32
 1396 06d6 0022     		movs	r2, #0
 1397 06d8 1A70     		strb	r2, [r3]
 1398              	.L54:
 383:main.c        ****                     }
 384:main.c        ****                     id++;
 1399              		.loc 1 384 0
 1400 06da 6A4B     		ldr	r3, .L69
 1401 06dc 1B68     		ldr	r3, [r3]
 1402 06de 0133     		adds	r3, r3, #1
 1403 06e0 684A     		ldr	r2, .L69
 1404 06e2 1360     		str	r3, [r2]
 385:main.c        ****                     
 386:main.c        ****                     /* if max time allowed for descent has been reached, resurface */
 387:main.c        ****                     if(data_time >= descent_time ){                         // variable descent tim
 1405              		.loc 1 387 0
 1406 06e4 6E4B     		ldr	r3, .L69+28
 1407 06e6 1A68     		ldr	r2, [r3]
 1408 06e8 6F4B     		ldr	r3, .L69+36
 1409 06ea 1B68     		ldr	r3, [r3]
 1410 06ec 9A42     		cmp	r2, r3
 1411 06ee 17DB     		blt	.L55
 388:main.c        ****                         STATE = RESURFACE;                                      
 1412              		.loc 1 388 0
 1413 06f0 684B     		ldr	r3, .L69+16
 1414 06f2 0422     		movs	r2, #4
 1415 06f4 1A70     		strb	r2, [r3]
 389:main.c        ****                         #ifdef LCD
 390:main.c        ****                             setCursor(0,0);
 1416              		.loc 1 390 0
 1417 06f6 0020     		movs	r0, #0
 1418 06f8 0021     		movs	r1, #0
 1419 06fa FFF7FEFF 		bl	setCursor
 391:main.c        ****                             clear();
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 34


 1420              		.loc 1 391 0
 1421 06fe FFF7FEFF 		bl	clear
 392:main.c        ****                             LCD_print("STATE: RESURFACE");  
 1422              		.loc 1 392 0
 1423 0702 6A48     		ldr	r0, .L69+40
 1424 0704 FFF7FEFF 		bl	LCD_print
 393:main.c        ****                         #endif
 394:main.c        ****                         id=0;                                               //reset sample counter
 1425              		.loc 1 394 0
 1426 0708 5E4B     		ldr	r3, .L69
 1427 070a 0022     		movs	r2, #0
 1428 070c 1A60     		str	r2, [r3]
 395:main.c        ****                         data_time = 0;
 1429              		.loc 1 395 0
 1430 070e 644B     		ldr	r3, .L69+28
 1431 0710 0022     		movs	r2, #0
 1432 0712 1A60     		str	r2, [r3]
 396:main.c        ****                         sum = 0;                                            //reset sum 
 1433              		.loc 1 396 0
 1434 0714 5C4B     		ldr	r3, .L69+4
 1435 0716 0022     		movs	r2, #0
 1436 0718 1A60     		str	r2, [r3]
 397:main.c        ****                         average = 0;
 1437              		.loc 1 397 0
 1438 071a 5D4B     		ldr	r3, .L69+12
 1439 071c 0022     		movs	r2, #0
 1440 071e 1A80     		strh	r2, [r3]	@ movhi
 1441              	.L55:
 398:main.c        ****                     }
 399:main.c        ****                     
 400:main.c        ****                     collect_flag = 0;
 1442              		.loc 1 400 0
 1443 0720 634B     		ldr	r3, .L69+44
 1444 0722 0022     		movs	r2, #0
 1445 0724 1A70     		strb	r2, [r3]
 401:main.c        ****                 }
 402:main.c        ****                 break;
 1446              		.loc 1 402 0
 1447 0726 ABE0     		b	.L49
 1448              	.L50:
 1449              		.loc 1 402 0 is_stmt 0 discriminator 2
 1450 0728 AAE0     		b	.L49
 1451              	.L34:
 403:main.c        ****                 
 404:main.c        ****                 case LANDED:
 405:main.c        ****                     if (countdown == 7) {                   // Delay for 7 seconds at bottom
 1452              		.loc 1 405 0 is_stmt 1
 1453 072a 5E4B     		ldr	r3, .L69+32
 1454 072c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1455 072e 072B     		cmp	r3, #7
 1456 0730 08D1     		bne	.L56
 406:main.c        ****                         countdown = 0; 
 1457              		.loc 1 406 0
 1458 0732 5C4B     		ldr	r3, .L69+32
 1459 0734 0022     		movs	r2, #0
 1460 0736 1A70     		strb	r2, [r3]
 407:main.c        ****                         pulse = 1;                          // next stage of the state
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 35


 1461              		.loc 1 407 0
 1462 0738 0123     		movs	r3, #1
 1463 073a C7F81C31 		str	r3, [r7, #284]
 408:main.c        ****                         Solenoid_1_Write(1);                // turn on solenoid 1 for 5 seconds
 1464              		.loc 1 408 0
 1465 073e 0120     		movs	r0, #1
 1466 0740 FFF7FEFF 		bl	Solenoid_1_Write
 1467              	.L56:
 409:main.c        ****                     } 
 410:main.c        ****                     
 411:main.c        ****                     if (countdown == 5 && pulse){           // Second stage, turn off solenoid
 1468              		.loc 1 411 0
 1469 0744 574B     		ldr	r3, .L69+32
 1470 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1471 0748 052B     		cmp	r3, #5
 1472 074a 0ED1     		bne	.L57
 1473              		.loc 1 411 0 is_stmt 0 discriminator 1
 1474 074c D7F81C31 		ldr	r3, [r7, #284]
 1475 0750 002B     		cmp	r3, #0
 1476 0752 0AD0     		beq	.L57
 412:main.c        ****                         pulse++;
 1477              		.loc 1 412 0 is_stmt 1
 1478 0754 D7F81C31 		ldr	r3, [r7, #284]
 1479 0758 0133     		adds	r3, r3, #1
 1480 075a C7F81C31 		str	r3, [r7, #284]
 413:main.c        ****                         Solenoid_1_Write(0);                // turn off soleniod 1
 1481              		.loc 1 413 0
 1482 075e 0020     		movs	r0, #0
 1483 0760 FFF7FEFF 		bl	Solenoid_1_Write
 414:main.c        ****                         countdown = 0;
 1484              		.loc 1 414 0
 1485 0764 4F4B     		ldr	r3, .L69+32
 1486 0766 0022     		movs	r2, #0
 1487 0768 1A70     		strb	r2, [r3]
 1488              	.L57:
 415:main.c        ****                     }
 416:main.c        ****                     if (countdown == 3 && pulse == 2){      // Delay for 3 seconds then resurface
 1489              		.loc 1 416 0
 1490 076a 4E4B     		ldr	r3, .L69+32
 1491 076c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1492 076e 032B     		cmp	r3, #3
 1493 0770 1FD1     		bne	.L58
 1494              		.loc 1 416 0 is_stmt 0 discriminator 1
 1495 0772 D7F81C31 		ldr	r3, [r7, #284]
 1496 0776 022B     		cmp	r3, #2
 1497 0778 1BD1     		bne	.L58
 417:main.c        ****                         STATE = RESURFACE;
 1498              		.loc 1 417 0 is_stmt 1
 1499 077a 464B     		ldr	r3, .L69+16
 1500 077c 0422     		movs	r2, #4
 1501 077e 1A70     		strb	r2, [r3]
 418:main.c        ****                         
 419:main.c        ****                         #ifdef LCD
 420:main.c        ****                             setCursor(0,0);
 1502              		.loc 1 420 0
 1503 0780 0020     		movs	r0, #0
 1504 0782 0021     		movs	r1, #0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 36


 1505 0784 FFF7FEFF 		bl	setCursor
 421:main.c        ****                             clear();
 1506              		.loc 1 421 0
 1507 0788 FFF7FEFF 		bl	clear
 422:main.c        ****                             LCD_print("STATE: RESURFACING");  
 1508              		.loc 1 422 0
 1509 078c 4948     		ldr	r0, .L69+48
 1510 078e FFF7FEFF 		bl	LCD_print
 423:main.c        ****                         #endif
 424:main.c        ****                         #ifdef SD
 425:main.c        ****                             FS_Write(fsfile, resurfbuf, RESURFACE_LEN);
 1511              		.loc 1 425 0
 1512 0792 424B     		ldr	r3, .L69+24
 1513 0794 1A68     		ldr	r2, [r3]
 1514 0796 07F15403 		add	r3, r7, #84
 1515 079a 1046     		mov	r0, r2
 1516 079c 1946     		mov	r1, r3
 1517 079e 1122     		movs	r2, #17
 1518 07a0 FFF7FEFF 		bl	FS_Write
 426:main.c        ****                         #endif
 427:main.c        ****                         pulse = 0;
 1519              		.loc 1 427 0
 1520 07a4 0023     		movs	r3, #0
 1521 07a6 C7F81C31 		str	r3, [r7, #284]
 428:main.c        ****                         countdown = 0;
 1522              		.loc 1 428 0
 1523 07aa 3E4B     		ldr	r3, .L69+32
 1524 07ac 0022     		movs	r2, #0
 1525 07ae 1A70     		strb	r2, [r3]
 429:main.c        ****                     }
 430:main.c        ****                 break;
 1526              		.loc 1 430 0
 1527 07b0 66E0     		b	.L49
 1528              	.L58:
 1529              		.loc 1 430 0 is_stmt 0 discriminator 3
 1530 07b2 65E0     		b	.L49
 1531              	.L35:
 431:main.c        ****                 
 432:main.c        ****             case RESURFACE:
 433:main.c        ****                 if (PANIC_flag)                 // Display that moisture sensor triggered
 1532              		.loc 1 433 0 is_stmt 1
 1533 07b4 404B     		ldr	r3, .L69+52
 1534 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1535 07b8 002B     		cmp	r3, #0
 1536 07ba 02D0     		beq	.L59
 434:main.c        ****                     LCD_print("WATER DETECTED");
 1537              		.loc 1 434 0
 1538 07bc 3F48     		ldr	r0, .L69+56
 1539 07be FFF7FEFF 		bl	LCD_print
 1540              	.L59:
 435:main.c        ****                     
 436:main.c        ****                 Solenoid_2_Write(1);            // turn on lift bag solenoid                
 1541              		.loc 1 436 0
 1542 07c2 0120     		movs	r0, #1
 1543 07c4 FFF7FEFF 		bl	Solenoid_2_Write
 437:main.c        ****                 
 438:main.c        ****                 //check pressure sensor to confirm we are at the surface
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 37


 439:main.c        ****                 if (countdown == 3){
 1544              		.loc 1 439 0
 1545 07c8 364B     		ldr	r3, .L69+32
 1546 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1547 07cc 032B     		cmp	r3, #3
 1548 07ce 0ED1     		bne	.L60
 440:main.c        ****                     Solenoid_2_Write(0);        // Turn off solenoid 2 for 1 second
 1549              		.loc 1 440 0
 1550 07d0 0020     		movs	r0, #0
 1551 07d2 FFF7FEFF 		bl	Solenoid_2_Write
 441:main.c        ****                     CyDelay(1000u);
 1552              		.loc 1 441 0
 1553 07d6 4FF47A70 		mov	r0, #1000
 1554 07da FFF7FEFF 		bl	CyDelay
 442:main.c        ****                     pulse++;
 1555              		.loc 1 442 0
 1556 07de D7F81C31 		ldr	r3, [r7, #284]
 1557 07e2 0133     		adds	r3, r3, #1
 1558 07e4 C7F81C31 		str	r3, [r7, #284]
 443:main.c        ****                     countdown = 0;
 1559              		.loc 1 443 0
 1560 07e8 2E4B     		ldr	r3, .L69+32
 1561 07ea 0022     		movs	r2, #0
 1562 07ec 1A70     		strb	r2, [r3]
 1563              	.L60:
 444:main.c        ****                 }
 445:main.c        ****                 if (pulse == 4){
 1564              		.loc 1 445 0
 1565 07ee D7F81C31 		ldr	r3, [r7, #284]
 1566 07f2 042B     		cmp	r3, #4
 1567 07f4 30D1     		bne	.L61
 446:main.c        ****                     STATE = TRANSMIT;
 1568              		.loc 1 446 0
 1569 07f6 274B     		ldr	r3, .L69+16
 1570 07f8 0522     		movs	r2, #5
 1571 07fa 1A70     		strb	r2, [r3]
 447:main.c        ****                     #ifdef SD                                   //close old file, open new one
 448:main.c        ****                         FS_FClose(fsfile);
 1572              		.loc 1 448 0
 1573 07fc 274B     		ldr	r3, .L69+24
 1574 07fe 1B68     		ldr	r3, [r3]
 1575 0800 1846     		mov	r0, r3
 1576 0802 FFF7FEFF 		bl	FS_FClose
 449:main.c        ****                         sprintf(file, "test%d.txt", ++testnum);
 1577              		.loc 1 449 0
 1578 0806 2E4B     		ldr	r3, .L69+60
 1579 0808 1B68     		ldr	r3, [r3]
 1580 080a 0133     		adds	r3, r3, #1
 1581 080c 2C4A     		ldr	r2, .L69+60
 1582 080e 1360     		str	r3, [r2]
 1583 0810 2B4B     		ldr	r3, .L69+60
 1584 0812 1B68     		ldr	r3, [r3]
 1585 0814 2B48     		ldr	r0, .L69+64
 1586 0816 2C49     		ldr	r1, .L69+68
 1587 0818 1A46     		mov	r2, r3
 1588 081a FFF7FEFF 		bl	sprintf
 450:main.c        ****                         fsfile = FS_FOpen(file, "w");
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 38


 1589              		.loc 1 450 0
 1590 081e 2948     		ldr	r0, .L69+64
 1591 0820 2A49     		ldr	r1, .L69+72
 1592 0822 FFF7FEFF 		bl	FS_FOpen
 1593 0826 0246     		mov	r2, r0
 1594 0828 1C4B     		ldr	r3, .L69+24
 1595 082a 1A60     		str	r2, [r3]
 451:main.c        ****                     #endif 
 452:main.c        ****                     
 453:main.c        ****                     #ifdef LCD
 454:main.c        ****                         setCursor(0,0);
 1596              		.loc 1 454 0
 1597 082c 0020     		movs	r0, #0
 1598 082e 0021     		movs	r1, #0
 1599 0830 FFF7FEFF 		bl	setCursor
 455:main.c        ****                         clear();
 1600              		.loc 1 455 0
 1601 0834 FFF7FEFF 		bl	clear
 456:main.c        ****                         LCD_print("TRANSMIT");  
 1602              		.loc 1 456 0
 1603 0838 2548     		ldr	r0, .L69+76
 1604 083a FFF7FEFF 		bl	LCD_print
 457:main.c        ****                     #endif
 458:main.c        ****                     #ifdef SD
 459:main.c        ****                         FS_Write(fsfile, transbuf, TRANSMIT_LEN);
 1605              		.loc 1 459 0
 1606 083e 174B     		ldr	r3, .L69+24
 1607 0840 1A68     		ldr	r2, [r3]
 1608 0842 07F14403 		add	r3, r7, #68
 1609 0846 1046     		mov	r0, r2
 1610 0848 1946     		mov	r1, r3
 1611 084a 1022     		movs	r2, #16
 1612 084c FFF7FEFF 		bl	FS_Write
 460:main.c        ****                     #endif
 461:main.c        ****                     countdown = 0;
 1613              		.loc 1 461 0
 1614 0850 144B     		ldr	r3, .L69+32
 1615 0852 0022     		movs	r2, #0
 1616 0854 1A70     		strb	r2, [r3]
 462:main.c        ****                 }
 463:main.c        ****                 break;
 1617              		.loc 1 463 0
 1618 0856 13E0     		b	.L49
 1619              	.L61:
 1620              		.loc 1 463 0 is_stmt 0 discriminator 4
 1621 0858 12E0     		b	.L49
 1622              	.L36:
 464:main.c        ****                 
 465:main.c        ****             case TRANSMIT:
 466:main.c        ****                 if (transmit_flag){
 1623              		.loc 1 466 0 is_stmt 1
 1624 085a 1E4B     		ldr	r3, .L69+80
 1625 085c 1B68     		ldr	r3, [r3]
 1626 085e 002B     		cmp	r3, #0
 1627 0860 0CD0     		beq	.L62
 467:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &t); // Here, the STATE variable only matters,
 1628              		.loc 1 467 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 39


 1629 0862 07F1B002 		add	r2, r7, #176
 1630 0866 07F13C03 		add	r3, r7, #60
 1631 086a 1046     		mov	r0, r2
 1632 086c 0949     		ldr	r1, .L69+16
 1633 086e 0A22     		movs	r2, #10
 1634 0870 FFF7FEFF 		bl	BT_Send
 468:main.c        ****                     transmit_flag = 0;
 1635              		.loc 1 468 0
 1636 0874 174B     		ldr	r3, .L69+80
 1637 0876 0022     		movs	r2, #0
 1638 0878 1A60     		str	r2, [r3]
 469:main.c        ****                 }            
 470:main.c        ****                 break;
 1639              		.loc 1 470 0
 1640 087a 01E0     		b	.L49
 1641              	.L62:
 1642              		.loc 1 470 0 is_stmt 0 discriminator 5
 1643 087c 00E0     		b	.L49
 1644              	.L64:
 471:main.c        ****                 
 472:main.c        ****             default:
 473:main.c        ****                 break;
 1645              		.loc 1 473 0 is_stmt 1
 1646 087e 00BF     		nop
 1647              	.L49:
 1648              	.LBE2:
 474:main.c        ****         
 475:main.c        ****         }
 476:main.c        ****     }
 1649              		.loc 1 476 0 discriminator 1
 1650 0880 79E4     		b	.L63
 1651              	.L70:
 1652 0882 00BF     		.align	2
 1653              	.L69:
 1654 0884 00000000 		.word	id
 1655 0888 00000000 		.word	sum
 1656 088c 89888888 		.word	-2004318071
 1657 0890 00000000 		.word	average
 1658 0894 00000000 		.word	STATE
 1659 0898 68000000 		.word	.LC12
 1660 089c 00000000 		.word	fsfile
 1661 08a0 00000000 		.word	data_time
 1662 08a4 00000000 		.word	countdown
 1663 08a8 00000000 		.word	descent_time
 1664 08ac 78000000 		.word	.LC13
 1665 08b0 00000000 		.word	collect_flag
 1666 08b4 8C000000 		.word	.LC14
 1667 08b8 00000000 		.word	PANIC_flag
 1668 08bc A0000000 		.word	.LC15
 1669 08c0 00000000 		.word	testnum
 1670 08c4 00000000 		.word	file
 1671 08c8 B0000000 		.word	.LC16
 1672 08cc BC000000 		.word	.LC17
 1673 08d0 C0000000 		.word	.LC18
 1674 08d4 00000000 		.word	transmit_flag
 1675              		.cfi_endproc
 1676              	.LFE67:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 40


 1677              		.size	main, .-main
 1678              		.section	.rodata
 1679 0139 000000   		.align	2
 1680              	.LC19:
 1681 013c 53642076 		.ascii	"Sd vol succeed\000"
 1681      6F6C2073 
 1681      75636365 
 1681      656400
 1682 014b 00       		.align	2
 1683              	.LC20:
 1684 014c 53642076 		.ascii	"Sd vol failed\000"
 1684      6F6C2066 
 1684      61696C65 
 1684      6400
 1685 015a 0000     		.align	2
 1686              	.LC21:
 1687 015c 666F726D 		.ascii	"format Succeeded\000"
 1687      61742053 
 1687      75636365 
 1687      65646564 
 1687      00
 1688 016d 000000   		.align	2
 1689              	.LC22:
 1690 0170 666F726D 		.ascii	"format Failed\000"
 1690      61742046 
 1690      61696C65 
 1690      6400
 1691 017e 0000     		.align	2
 1692              	.LC23:
 1693 0180 46696C65 		.ascii	"File \000"
 1693      2000
 1694 0186 0000     		.align	2
 1695              	.LC24:
 1696 0188 77617320 		.ascii	"was opened\000"
 1696      6F70656E 
 1696      656400
 1697 0193 00       		.align	2
 1698              	.LC25:
 1699 0194 77726974 		.ascii	"written to file\000"
 1699      74656E20 
 1699      746F2066 
 1699      696C6500 
 1700              		.align	2
 1701              	.LC26:
 1702 01a4 4661696C 		.ascii	"Failed to write\000"
 1702      65642074 
 1702      6F207772 
 1702      69746500 
 1703              		.align	2
 1704              	.LC27:
 1705 01b4 66696C65 		.ascii	"file not created\000"
 1705      206E6F74 
 1705      20637265 
 1705      61746564 
 1705      00
 1706 01c5 000000   		.align	2
 1707              	.LC28:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 41


 1708 01c8 0A2D2D2D 		.ascii	"\012------------\012\000"
 1708      2D2D2D2D 
 1708      2D2D2D2D 
 1708      2D0A00
 1709 01d7 00       		.section	.text.SD_SETUP,"ax",%progbits
 1710              		.align	2
 1711              		.global	SD_SETUP
 1712              		.thumb
 1713              		.thumb_func
 1714              		.type	SD_SETUP, %function
 1715              	SD_SETUP:
 1716              	.LFB68:
 477:main.c        **** }
 478:main.c        **** 
 479:main.c        **** int SD_SETUP(char* filename){
 1717              		.loc 1 479 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 16
 1720              		@ frame_needed = 1, uses_anonymous_args = 0
 1721 0000 90B5     		push	{r4, r7, lr}
 1722              		.cfi_def_cfa_offset 12
 1723              		.cfi_offset 4, -12
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 85B0     		sub	sp, sp, #20
 1727              		.cfi_def_cfa_offset 32
 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 1730 0006 7860     		str	r0, [r7, #4]
 480:main.c        **** int success = 1;
 1731              		.loc 1 480 0
 1732 0008 0123     		movs	r3, #1
 1733 000a FB60     		str	r3, [r7, #12]
 481:main.c        ****       FS_Init();
 1734              		.loc 1 481 0
 1735 000c FFF7FEFF 		bl	FS_Init
 482:main.c        ****             FS_Mount(volume);
 1736              		.loc 1 482 0
 1737 0010 3A48     		ldr	r0, .L81
 1738 0012 FFF7FEFF 		bl	FS_Mount
 483:main.c        ****             if(0 != FS_GetVolumeName(0u, volume, 9u))
 1739              		.loc 1 483 0
 1740 0016 0020     		movs	r0, #0
 1741 0018 3849     		ldr	r1, .L81
 1742 001a 0922     		movs	r2, #9
 1743 001c FFF7FEFF 		bl	FS_GetVolumeName
 1744 0020 0346     		mov	r3, r0
 1745 0022 002B     		cmp	r3, #0
 1746 0024 03D0     		beq	.L72
 484:main.c        ****                 /* Getting volume name succeeded so prompt it on the LCD */
 485:main.c        ****                 LCD_print("Sd vol succeed");
 1747              		.loc 1 485 0
 1748 0026 3648     		ldr	r0, .L81+4
 1749 0028 FFF7FEFF 		bl	LCD_print
 1750 002c 04E0     		b	.L73
 1751              	.L72:
 486:main.c        ****             else{
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 42


 487:main.c        ****                 LCD_print("Sd vol failed");
 1752              		.loc 1 487 0
 1753 002e 3548     		ldr	r0, .L81+8
 1754 0030 FFF7FEFF 		bl	LCD_print
 488:main.c        ****                 success = 0;
 1755              		.loc 1 488 0
 1756 0034 0023     		movs	r3, #0
 1757 0036 FB60     		str	r3, [r7, #12]
 1758              	.L73:
 489:main.c        ****             }
 490:main.c        ****             CyDelay(500u);
 1759              		.loc 1 490 0
 1760 0038 4FF4FA70 		mov	r0, #500
 1761 003c FFF7FEFF 		bl	CyDelay
 491:main.c        ****             clear();
 1762              		.loc 1 491 0
 1763 0040 FFF7FEFF 		bl	clear
 492:main.c        ****             if(0 == FS_FormatSD(volume))
 1764              		.loc 1 492 0
 1765 0044 2D48     		ldr	r0, .L81
 1766 0046 FFF7FEFF 		bl	FS_FormatSD
 1767 004a 0346     		mov	r3, r0
 1768 004c 002B     		cmp	r3, #0
 1769 004e 03D1     		bne	.L74
 493:main.c        ****                 LCD_print("format Succeeded");
 1770              		.loc 1 493 0
 1771 0050 2D48     		ldr	r0, .L81+12
 1772 0052 FFF7FEFF 		bl	LCD_print
 1773 0056 04E0     		b	.L75
 1774              	.L74:
 494:main.c        ****             else{
 495:main.c        ****                 LCD_print("format Failed");
 1775              		.loc 1 495 0
 1776 0058 2C48     		ldr	r0, .L81+16
 1777 005a FFF7FEFF 		bl	LCD_print
 496:main.c        ****                 success = 0;
 1778              		.loc 1 496 0
 1779 005e 0023     		movs	r3, #0
 1780 0060 FB60     		str	r3, [r7, #12]
 1781              	.L75:
 497:main.c        ****             }
 498:main.c        ****             
 499:main.c        ****             CyDelay(500u);
 1782              		.loc 1 499 0
 1783 0062 4FF4FA70 		mov	r0, #500
 1784 0066 FFF7FEFF 		bl	CyDelay
 500:main.c        ****             clear();
 1785              		.loc 1 500 0
 1786 006a FFF7FEFF 		bl	clear
 501:main.c        ****             
 502:main.c        ****             fsfile = FS_FOpen(filename, "w");
 1787              		.loc 1 502 0
 1788 006e 7868     		ldr	r0, [r7, #4]
 1789 0070 2749     		ldr	r1, .L81+20
 1790 0072 FFF7FEFF 		bl	FS_FOpen
 1791 0076 0246     		mov	r2, r0
 1792 0078 264B     		ldr	r3, .L81+24
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 43


 1793 007a 1A60     		str	r2, [r3]
 503:main.c        ****             if(fsfile)
 1794              		.loc 1 503 0
 1795 007c 254B     		ldr	r3, .L81+24
 1796 007e 1B68     		ldr	r3, [r3]
 1797 0080 002B     		cmp	r3, #0
 1798 0082 29D0     		beq	.L76
 504:main.c        ****             {
 505:main.c        ****                 /* Indicate successful file creation message */
 506:main.c        ****                 LCD_print("File ");
 1799              		.loc 1 506 0
 1800 0084 2448     		ldr	r0, .L81+28
 1801 0086 FFF7FEFF 		bl	LCD_print
 507:main.c        ****                 LCD_print("was opened");
 1802              		.loc 1 507 0
 1803 008a 2448     		ldr	r0, .L81+32
 1804 008c FFF7FEFF 		bl	LCD_print
 508:main.c        ****                 /* Need some delay to indicate output on the LCD */
 509:main.c        ****                 CyDelay(500u);
 1805              		.loc 1 509 0
 1806 0090 4FF4FA70 		mov	r0, #500
 1807 0094 FFF7FEFF 		bl	CyDelay
 510:main.c        ****                 clear();
 1808              		.loc 1 510 0
 1809 0098 FFF7FEFF 		bl	clear
 511:main.c        ****                 
 512:main.c        ****                 if(0 != FS_Write(fsfile, filename, strlen(filename))) 
 1810              		.loc 1 512 0
 1811 009c 1D4B     		ldr	r3, .L81+24
 1812 009e 1C68     		ldr	r4, [r3]
 1813 00a0 7868     		ldr	r0, [r7, #4]
 1814 00a2 FFF7FEFF 		bl	strlen
 1815 00a6 0346     		mov	r3, r0
 1816 00a8 2046     		mov	r0, r4
 1817 00aa 7968     		ldr	r1, [r7, #4]
 1818 00ac 1A46     		mov	r2, r3
 1819 00ae FFF7FEFF 		bl	FS_Write
 1820 00b2 0346     		mov	r3, r0
 1821 00b4 002B     		cmp	r3, #0
 1822 00b6 03D0     		beq	.L77
 513:main.c        ****                     /* Inditate that data was written to a file */
 514:main.c        ****                     LCD_print("written to file");
 1823              		.loc 1 514 0
 1824 00b8 1948     		ldr	r0, .L81+36
 1825 00ba FFF7FEFF 		bl	LCD_print
 1826 00be 06E0     		b	.L78
 1827              	.L77:
 515:main.c        ****                 else {
 516:main.c        ****                     LCD_print("Failed to write");
 1828              		.loc 1 516 0
 1829 00c0 1848     		ldr	r0, .L81+40
 1830 00c2 FFF7FEFF 		bl	LCD_print
 517:main.c        ****                     success = 0;
 1831              		.loc 1 517 0
 1832 00c6 0023     		movs	r3, #0
 1833 00c8 FB60     		str	r3, [r7, #12]
 518:main.c        ****                     clear();
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 44


 1834              		.loc 1 518 0
 1835 00ca FFF7FEFF 		bl	clear
 1836              	.L78:
 519:main.c        ****                 }
 520:main.c        ****                 CyDelay(500u);
 1837              		.loc 1 520 0
 1838 00ce 4FF4FA70 		mov	r0, #500
 1839 00d2 FFF7FEFF 		bl	CyDelay
 1840 00d6 04E0     		b	.L79
 1841              	.L76:
 521:main.c        ****             }
 522:main.c        ****             else{
 523:main.c        ****                 LCD_print("file not created");
 1842              		.loc 1 523 0
 1843 00d8 1348     		ldr	r0, .L81+44
 1844 00da FFF7FEFF 		bl	LCD_print
 524:main.c        ****                 success = 0;
 1845              		.loc 1 524 0
 1846 00de 0023     		movs	r3, #0
 1847 00e0 FB60     		str	r3, [r7, #12]
 1848              	.L79:
 525:main.c        ****             }
 526:main.c        ****         FS_Write(fsfile, "\n------------\n", 14);
 1849              		.loc 1 526 0
 1850 00e2 0C4B     		ldr	r3, .L81+24
 1851 00e4 1B68     		ldr	r3, [r3]
 1852 00e6 1846     		mov	r0, r3
 1853 00e8 1049     		ldr	r1, .L81+48
 1854 00ea 0E22     		movs	r2, #14
 1855 00ec FFF7FEFF 		bl	FS_Write
 527:main.c        **** return success;
 1856              		.loc 1 527 0
 1857 00f0 FB68     		ldr	r3, [r7, #12]
 528:main.c        **** }
 1858              		.loc 1 528 0
 1859 00f2 1846     		mov	r0, r3
 1860 00f4 1437     		adds	r7, r7, #20
 1861              		.cfi_def_cfa_offset 12
 1862 00f6 BD46     		mov	sp, r7
 1863              		.cfi_def_cfa_register 13
 1864              		@ sp needed
 1865 00f8 90BD     		pop	{r4, r7, pc}
 1866              	.L82:
 1867 00fa 00BF     		.align	2
 1868              	.L81:
 1869 00fc 00000000 		.word	volume
 1870 0100 3C010000 		.word	.LC19
 1871 0104 4C010000 		.word	.LC20
 1872 0108 5C010000 		.word	.LC21
 1873 010c 70010000 		.word	.LC22
 1874 0110 BC000000 		.word	.LC17
 1875 0114 00000000 		.word	fsfile
 1876 0118 80010000 		.word	.LC23
 1877 011c 88010000 		.word	.LC24
 1878 0120 94010000 		.word	.LC25
 1879 0124 A4010000 		.word	.LC26
 1880 0128 B4010000 		.word	.LC27
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 45


 1881 012c C8010000 		.word	.LC28
 1882              		.cfi_endproc
 1883              	.LFE68:
 1884              		.size	SD_SETUP, .-SD_SETUP
 1885              		.text
 1886              	.Letext0:
 1887              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1888              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1889              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1890              		.file 5 "..\\OVac.cydsn\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 1891              		.file 6 "functions.h"
 1892              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1893              		.file 8 "./mpu6050.h"
 1894              		.section	.debug_info,"",%progbits
 1895              	.Ldebug_info0:
 1896 0000 93060000 		.4byte	0x693
 1897 0004 0400     		.2byte	0x4
 1898 0006 00000000 		.4byte	.Ldebug_abbrev0
 1899 000a 04       		.byte	0x4
 1900 000b 01       		.uleb128 0x1
 1901 000c 63010000 		.4byte	.LASF91
 1902 0010 01       		.byte	0x1
 1903 0011 56030000 		.4byte	.LASF92
 1904 0015 55000000 		.4byte	.LASF93
 1905 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1906 001d 00000000 		.4byte	0
 1907 0021 00000000 		.4byte	.Ldebug_line0
 1908 0025 02       		.uleb128 0x2
 1909 0026 01       		.byte	0x1
 1910 0027 06       		.byte	0x6
 1911 0028 73020000 		.4byte	.LASF0
 1912 002c 03       		.uleb128 0x3
 1913 002d 4E040000 		.4byte	.LASF2
 1914 0031 02       		.byte	0x2
 1915 0032 1D       		.byte	0x1d
 1916 0033 37000000 		.4byte	0x37
 1917 0037 02       		.uleb128 0x2
 1918 0038 01       		.byte	0x1
 1919 0039 08       		.byte	0x8
 1920 003a 53020000 		.4byte	.LASF1
 1921 003e 03       		.uleb128 0x3
 1922 003f A9030000 		.4byte	.LASF3
 1923 0043 02       		.byte	0x2
 1924 0044 29       		.byte	0x29
 1925 0045 49000000 		.4byte	0x49
 1926 0049 02       		.uleb128 0x2
 1927 004a 02       		.byte	0x2
 1928 004b 05       		.byte	0x5
 1929 004c F9000000 		.4byte	.LASF4
 1930 0050 02       		.uleb128 0x2
 1931 0051 02       		.byte	0x2
 1932 0052 07       		.byte	0x7
 1933 0053 C3020000 		.4byte	.LASF5
 1934 0057 03       		.uleb128 0x3
 1935 0058 9F030000 		.4byte	.LASF6
 1936 005c 02       		.byte	0x2
 1937 005d 3F       		.byte	0x3f
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 46


 1938 005e 62000000 		.4byte	0x62
 1939 0062 02       		.uleb128 0x2
 1940 0063 04       		.byte	0x4
 1941 0064 05       		.byte	0x5
 1942 0065 E0020000 		.4byte	.LASF7
 1943 0069 03       		.uleb128 0x3
 1944 006a 8C030000 		.4byte	.LASF8
 1945 006e 02       		.byte	0x2
 1946 006f 41       		.byte	0x41
 1947 0070 74000000 		.4byte	0x74
 1948 0074 02       		.uleb128 0x2
 1949 0075 04       		.byte	0x4
 1950 0076 07       		.byte	0x7
 1951 0077 62030000 		.4byte	.LASF9
 1952 007b 02       		.uleb128 0x2
 1953 007c 08       		.byte	0x8
 1954 007d 05       		.byte	0x5
 1955 007e 44010000 		.4byte	.LASF10
 1956 0082 02       		.uleb128 0x2
 1957 0083 08       		.byte	0x8
 1958 0084 07       		.byte	0x7
 1959 0085 7F020000 		.4byte	.LASF11
 1960 0089 04       		.uleb128 0x4
 1961 008a 04       		.byte	0x4
 1962 008b 05       		.byte	0x5
 1963 008c 696E7400 		.ascii	"int\000"
 1964 0090 02       		.uleb128 0x2
 1965 0091 04       		.byte	0x4
 1966 0092 07       		.byte	0x7
 1967 0093 A9020000 		.4byte	.LASF12
 1968 0097 03       		.uleb128 0x3
 1969 0098 13010000 		.4byte	.LASF13
 1970 009c 03       		.byte	0x3
 1971 009d 15       		.byte	0x15
 1972 009e 2C000000 		.4byte	0x2c
 1973 00a2 03       		.uleb128 0x3
 1974 00a3 F6020000 		.4byte	.LASF14
 1975 00a7 03       		.byte	0x3
 1976 00a8 20       		.byte	0x20
 1977 00a9 3E000000 		.4byte	0x3e
 1978 00ad 03       		.uleb128 0x3
 1979 00ae EE020000 		.4byte	.LASF15
 1980 00b2 03       		.byte	0x3
 1981 00b3 2C       		.byte	0x2c
 1982 00b4 57000000 		.4byte	0x57
 1983 00b8 03       		.uleb128 0x3
 1984 00b9 96020000 		.4byte	.LASF16
 1985 00bd 03       		.byte	0x3
 1986 00be 2D       		.byte	0x2d
 1987 00bf 69000000 		.4byte	0x69
 1988 00c3 05       		.uleb128 0x5
 1989 00c4 FE020000 		.4byte	.LASF17
 1990 00c8 04       		.byte	0x4
 1991 00c9 9201     		.2byte	0x192
 1992 00cb 37000000 		.4byte	0x37
 1993 00cf 05       		.uleb128 0x5
 1994 00d0 21010000 		.4byte	.LASF18
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 47


 1995 00d4 04       		.byte	0x4
 1996 00d5 9601     		.2byte	0x196
 1997 00d7 49000000 		.4byte	0x49
 1998 00db 02       		.uleb128 0x2
 1999 00dc 04       		.byte	0x4
 2000 00dd 04       		.byte	0x4
 2001 00de 30010000 		.4byte	.LASF19
 2002 00e2 02       		.uleb128 0x2
 2003 00e3 08       		.byte	0x8
 2004 00e4 04       		.byte	0x4
 2005 00e5 85030000 		.4byte	.LASF20
 2006 00e9 02       		.uleb128 0x2
 2007 00ea 01       		.byte	0x1
 2008 00eb 08       		.byte	0x8
 2009 00ec DB020000 		.4byte	.LASF21
 2010 00f0 05       		.uleb128 0x5
 2011 00f1 5D030000 		.4byte	.LASF22
 2012 00f5 04       		.byte	0x4
 2013 00f6 3C02     		.2byte	0x23c
 2014 00f8 FC000000 		.4byte	0xfc
 2015 00fc 06       		.uleb128 0x6
 2016 00fd C3000000 		.4byte	0xc3
 2017 0101 02       		.uleb128 0x2
 2018 0102 04       		.byte	0x4
 2019 0103 07       		.byte	0x7
 2020 0104 BE030000 		.4byte	.LASF23
 2021 0108 07       		.uleb128 0x7
 2022 0109 04       		.byte	0x4
 2023 010a E9000000 		.4byte	0xe9
 2024 010e 03       		.uleb128 0x3
 2025 010f 61020000 		.4byte	.LASF24
 2026 0113 05       		.byte	0x5
 2027 0114 7E       		.byte	0x7e
 2028 0115 19010000 		.4byte	0x119
 2029 0119 08       		.uleb128 0x8
 2030 011a 61020000 		.4byte	.LASF24
 2031 011e 07       		.uleb128 0x7
 2032 011f 04       		.byte	0x4
 2033 0120 0E010000 		.4byte	0x10e
 2034 0124 02       		.uleb128 0x2
 2035 0125 08       		.byte	0x8
 2036 0126 04       		.byte	0x4
 2037 0127 38020000 		.4byte	.LASF25
 2038 012b 09       		.uleb128 0x9
 2039 012c 43000000 		.4byte	.LASF33
 2040 0130 01       		.byte	0x1
 2041 0131 06       		.byte	0x6
 2042 0132 35       		.byte	0x35
 2043 0133 62010000 		.4byte	0x162
 2044 0137 0A       		.uleb128 0xa
 2045 0138 36000000 		.4byte	.LASF26
 2046 013c 00       		.sleb128 0
 2047 013d 0A       		.uleb128 0xa
 2048 013e 44020000 		.4byte	.LASF27
 2049 0142 01       		.sleb128 1
 2050 0143 0A       		.uleb128 0xa
 2051 0144 74030000 		.4byte	.LASF28
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 48


 2052 0148 02       		.sleb128 2
 2053 0149 0A       		.uleb128 0xa
 2054 014a AF000000 		.4byte	.LASF29
 2055 014e 03       		.sleb128 3
 2056 014f 0A       		.uleb128 0xa
 2057 0150 0D000000 		.4byte	.LASF30
 2058 0154 04       		.sleb128 4
 2059 0155 0A       		.uleb128 0xa
 2060 0156 5A010000 		.4byte	.LASF31
 2061 015a 05       		.sleb128 5
 2062 015b 0A       		.uleb128 0xa
 2063 015c 25020000 		.4byte	.LASF32
 2064 0160 06       		.sleb128 6
 2065 0161 00       		.byte	0
 2066 0162 03       		.uleb128 0x3
 2067 0163 43000000 		.4byte	.LASF33
 2068 0167 06       		.byte	0x6
 2069 0168 3D       		.byte	0x3d
 2070 0169 2B010000 		.4byte	0x12b
 2071 016d 0B       		.uleb128 0xb
 2072 016e C8000000 		.4byte	.LASF34
 2073 0172 01       		.byte	0x1
 2074 0173 6B       		.byte	0x6b
 2075 0174 00000000 		.4byte	.LFB63
 2076 0178 20000000 		.4byte	.LFE63-.LFB63
 2077 017c 01       		.uleb128 0x1
 2078 017d 9C       		.byte	0x9c
 2079 017e 0C       		.uleb128 0xc
 2080 017f 20040000 		.4byte	.LASF35
 2081 0183 01       		.byte	0x1
 2082 0184 72       		.byte	0x72
 2083 0185 00000000 		.4byte	.LFB64
 2084 0189 40000000 		.4byte	.LFE64-.LFB64
 2085 018d 01       		.uleb128 0x1
 2086 018e 9C       		.byte	0x9c
 2087 018f 0C       		.uleb128 0xc
 2088 0190 40030000 		.4byte	.LASF36
 2089 0194 01       		.byte	0x1
 2090 0195 7B       		.byte	0x7b
 2091 0196 00000000 		.4byte	.LFB65
 2092 019a 9C000000 		.4byte	.LFE65-.LFB65
 2093 019e 01       		.uleb128 0x1
 2094 019f 9C       		.byte	0x9c
 2095 01a0 0B       		.uleb128 0xb
 2096 01a1 F0030000 		.4byte	.LASF37
 2097 01a5 01       		.byte	0x1
 2098 01a6 8C       		.byte	0x8c
 2099 01a7 00000000 		.4byte	.LFB66
 2100 01ab 50000000 		.4byte	.LFE66-.LFB66
 2101 01af 01       		.uleb128 0x1
 2102 01b0 9C       		.byte	0x9c
 2103 01b1 0D       		.uleb128 0xd
 2104 01b2 E9020000 		.4byte	.LASF94
 2105 01b6 01       		.byte	0x1
 2106 01b7 96       		.byte	0x96
 2107 01b8 89000000 		.4byte	0x89
 2108 01bc 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 49


 2109 01c0 D8080000 		.4byte	.LFE67-.LFB67
 2110 01c4 01       		.uleb128 0x1
 2111 01c5 9C       		.byte	0x9c
 2112 01c6 74030000 		.4byte	0x374
 2113 01ca 0E       		.uleb128 0xe
 2114 01cb 6E756D00 		.ascii	"num\000"
 2115 01cf 01       		.byte	0x1
 2116 01d0 98       		.byte	0x98
 2117 01d1 89000000 		.4byte	0x89
 2118 01d5 02       		.uleb128 0x2
 2119 01d6 91       		.byte	0x91
 2120 01d7 60       		.sleb128 -32
 2121 01d8 0F       		.uleb128 0xf
 2122 01d9 27010000 		.4byte	.LASF38
 2123 01dd 01       		.byte	0x1
 2124 01de 98       		.byte	0x98
 2125 01df 89000000 		.4byte	0x89
 2126 01e3 02       		.uleb128 0x2
 2127 01e4 91       		.byte	0x91
 2128 01e5 5C       		.sleb128 -36
 2129 01e6 0F       		.uleb128 0xf
 2130 01e7 F6010000 		.4byte	.LASF39
 2131 01eb 01       		.byte	0x1
 2132 01ec 99       		.byte	0x99
 2133 01ed DB000000 		.4byte	0xdb
 2134 01f1 02       		.uleb128 0x2
 2135 01f2 91       		.byte	0x91
 2136 01f3 58       		.sleb128 -40
 2137 01f4 0F       		.uleb128 0xf
 2138 01f5 B6020000 		.4byte	.LASF40
 2139 01f9 01       		.byte	0x1
 2140 01fa 99       		.byte	0x99
 2141 01fb DB000000 		.4byte	0xdb
 2142 01ff 02       		.uleb128 0x2
 2143 0200 91       		.byte	0x91
 2144 0201 54       		.sleb128 -44
 2145 0202 0F       		.uleb128 0xf
 2146 0203 D7030000 		.4byte	.LASF41
 2147 0207 01       		.byte	0x1
 2148 0208 99       		.byte	0x99
 2149 0209 DB000000 		.4byte	0xdb
 2150 020d 02       		.uleb128 0x2
 2151 020e 91       		.byte	0x91
 2152 020f 50       		.sleb128 -48
 2153 0210 0F       		.uleb128 0xf
 2154 0211 EC000000 		.4byte	.LASF42
 2155 0215 01       		.byte	0x1
 2156 0216 99       		.byte	0x99
 2157 0217 DB000000 		.4byte	0xdb
 2158 021b 02       		.uleb128 0x2
 2159 021c 91       		.byte	0x91
 2160 021d 6C       		.sleb128 -20
 2161 021e 0E       		.uleb128 0xe
 2162 021f 62756600 		.ascii	"buf\000"
 2163 0223 01       		.byte	0x1
 2164 0224 9A       		.byte	0x9a
 2165 0225 74030000 		.4byte	0x374
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 50


 2166 0229 03       		.uleb128 0x3
 2167 022a 91       		.byte	0x91
 2168 022b 8C7F     		.sleb128 -116
 2169 022d 0F       		.uleb128 0xf
 2170 022e 97030000 		.4byte	.LASF43
 2171 0232 01       		.byte	0x1
 2172 0233 9A       		.byte	0x9a
 2173 0234 84030000 		.4byte	0x384
 2174 0238 03       		.uleb128 0x3
 2175 0239 91       		.byte	0x91
 2176 023a F87E     		.sleb128 -136
 2177 023c 0F       		.uleb128 0xf
 2178 023d 10030000 		.4byte	.LASF44
 2179 0241 01       		.byte	0x1
 2180 0242 9A       		.byte	0x9a
 2181 0243 94030000 		.4byte	0x394
 2182 0247 03       		.uleb128 0x3
 2183 0248 91       		.byte	0x91
 2184 0249 E87E     		.sleb128 -152
 2185 024b 0F       		.uleb128 0xf
 2186 024c B3030000 		.4byte	.LASF45
 2187 0250 01       		.byte	0x1
 2188 0251 9B       		.byte	0x9b
 2189 0252 A4030000 		.4byte	0x3a4
 2190 0256 03       		.uleb128 0x3
 2191 0257 91       		.byte	0x91
 2192 0258 D47E     		.sleb128 -172
 2193 025a 0F       		.uleb128 0xf
 2194 025b 3A040000 		.4byte	.LASF46
 2195 025f 01       		.byte	0x1
 2196 0260 9C       		.byte	0x9c
 2197 0261 94030000 		.4byte	0x394
 2198 0265 03       		.uleb128 0x3
 2199 0266 91       		.byte	0x91
 2200 0267 C47E     		.sleb128 -188
 2201 0269 0F       		.uleb128 0xf
 2202 026a DD000000 		.4byte	.LASF47
 2203 026e 01       		.byte	0x1
 2204 026f 9D       		.byte	0x9d
 2205 0270 B4030000 		.4byte	0x3b4
 2206 0274 03       		.uleb128 0x3
 2207 0275 91       		.byte	0x91
 2208 0276 B07E     		.sleb128 -208
 2209 0278 0F       		.uleb128 0xf
 2210 0279 28030000 		.4byte	.LASF48
 2211 027d 01       		.byte	0x1
 2212 027e 9E       		.byte	0x9e
 2213 027f B4030000 		.4byte	0x3b4
 2214 0283 03       		.uleb128 0x3
 2215 0284 91       		.byte	0x91
 2216 0285 9C7E     		.sleb128 -228
 2217 0287 0F       		.uleb128 0xf
 2218 0288 1C020000 		.4byte	.LASF49
 2219 028c 01       		.byte	0x1
 2220 028d 9F       		.byte	0x9f
 2221 028e C4030000 		.4byte	0x3c4
 2222 0292 03       		.uleb128 0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 51


 2223 0293 91       		.byte	0x91
 2224 0294 8C7E     		.sleb128 -244
 2225 0296 0F       		.uleb128 0xf
 2226 0297 36010000 		.4byte	.LASF50
 2227 029b 01       		.byte	0x1
 2228 029c A0       		.byte	0xa0
 2229 029d 89000000 		.4byte	0x89
 2230 02a1 02       		.uleb128 0x2
 2231 02a2 91       		.byte	0x91
 2232 02a3 68       		.sleb128 -24
 2233 02a4 0F       		.uleb128 0xf
 2234 02a5 1B010000 		.4byte	.LASF51
 2235 02a9 01       		.byte	0x1
 2236 02aa A0       		.byte	0xa0
 2237 02ab 89000000 		.4byte	0x89
 2238 02af 02       		.uleb128 0x2
 2239 02b0 91       		.byte	0x91
 2240 02b1 64       		.sleb128 -28
 2241 02b2 0F       		.uleb128 0xf
 2242 02b3 0E020000 		.4byte	.LASF52
 2243 02b7 01       		.byte	0x1
 2244 02b8 A0       		.byte	0xa0
 2245 02b9 89000000 		.4byte	0x89
 2246 02bd 02       		.uleb128 0x2
 2247 02be 91       		.byte	0x91
 2248 02bf 4C       		.sleb128 -52
 2249 02c0 10       		.uleb128 0x10
 2250 02c1 617800   		.ascii	"ax\000"
 2251 02c4 01       		.byte	0x1
 2252 02c5 A2       		.byte	0xa2
 2253 02c6 A2000000 		.4byte	0xa2
 2254 02ca 10       		.uleb128 0x10
 2255 02cb 617900   		.ascii	"ay\000"
 2256 02ce 01       		.byte	0x1
 2257 02cf A2       		.byte	0xa2
 2258 02d0 A2000000 		.4byte	0xa2
 2259 02d4 0E       		.uleb128 0xe
 2260 02d5 617A00   		.ascii	"az\000"
 2261 02d8 01       		.byte	0x1
 2262 02d9 A2       		.byte	0xa2
 2263 02da A2000000 		.4byte	0xa2
 2264 02de 03       		.uleb128 0x3
 2265 02df 91       		.byte	0x91
 2266 02e0 BE7F     		.sleb128 -66
 2267 02e2 10       		.uleb128 0x10
 2268 02e3 6900     		.ascii	"i\000"
 2269 02e5 01       		.byte	0x1
 2270 02e6 A2       		.byte	0xa2
 2271 02e7 A2000000 		.4byte	0xa2
 2272 02eb 10       		.uleb128 0x10
 2273 02ec 677800   		.ascii	"gx\000"
 2274 02ef 01       		.byte	0x1
 2275 02f0 A3       		.byte	0xa3
 2276 02f1 A2000000 		.4byte	0xa2
 2277 02f5 10       		.uleb128 0x10
 2278 02f6 677900   		.ascii	"gy\000"
 2279 02f9 01       		.byte	0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 52


 2280 02fa A3       		.byte	0xa3
 2281 02fb A2000000 		.4byte	0xa2
 2282 02ff 10       		.uleb128 0x10
 2283 0300 677A00   		.ascii	"gz\000"
 2284 0303 01       		.byte	0x1
 2285 0304 A3       		.byte	0xa3
 2286 0305 A2000000 		.4byte	0xa2
 2287 0309 0F       		.uleb128 0xf
 2288 030a 1F030000 		.4byte	.LASF53
 2289 030e 01       		.byte	0x1
 2290 030f A4       		.byte	0xa4
 2291 0310 A2000000 		.4byte	0xa2
 2292 0314 02       		.uleb128 0x2
 2293 0315 91       		.byte	0x91
 2294 0316 4A       		.sleb128 -54
 2295 0317 0F       		.uleb128 0xf
 2296 0318 F1010000 		.4byte	.LASF54
 2297 031c 01       		.byte	0x1
 2298 031d A5       		.byte	0xa5
 2299 031e 89000000 		.4byte	0x89
 2300 0322 03       		.uleb128 0x3
 2301 0323 91       		.byte	0x91
 2302 0324 887E     		.sleb128 -248
 2303 0326 0F       		.uleb128 0xf
 2304 0327 AA000000 		.4byte	.LASF55
 2305 032b 01       		.byte	0x1
 2306 032c A5       		.byte	0xa5
 2307 032d 89000000 		.4byte	0x89
 2308 0331 02       		.uleb128 0x2
 2309 0332 91       		.byte	0x91
 2310 0333 44       		.sleb128 -60
 2311 0334 0F       		.uleb128 0xf
 2312 0335 C7030000 		.4byte	.LASF56
 2313 0339 01       		.byte	0x1
 2314 033a CE       		.byte	0xce
 2315 033b 89000000 		.4byte	0x89
 2316 033f 02       		.uleb128 0x2
 2317 0340 91       		.byte	0x91
 2318 0341 40       		.sleb128 -64
 2319 0342 11       		.uleb128 0x11
 2320 0343 76010000 		.4byte	.LBB2
 2321 0347 0A070000 		.4byte	.LBE2-.LBB2
 2322 034b 12       		.uleb128 0x12
 2323 034c 7400     		.ascii	"t\000"
 2324 034e 01       		.byte	0x1
 2325 034f 1A01     		.2byte	0x11a
 2326 0351 89000000 		.4byte	0x89
 2327 0355 03       		.uleb128 0x3
 2328 0356 91       		.byte	0x91
 2329 0357 847E     		.sleb128 -252
 2330 0359 11       		.uleb128 0x11
 2331 035a 74020000 		.4byte	.LBB3
 2332 035e 9C000000 		.4byte	.LBE3-.LBB3
 2333 0362 0F       		.uleb128 0xf
 2334 0363 4A000000 		.4byte	.LASF57
 2335 0367 01       		.byte	0x1
 2336 0368 F6       		.byte	0xf6
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 53


 2337 0369 D4030000 		.4byte	0x3d4
 2338 036d 03       		.uleb128 0x3
 2339 036e 91       		.byte	0x91
 2340 036f C87D     		.sleb128 -312
 2341 0371 00       		.byte	0
 2342 0372 00       		.byte	0
 2343 0373 00       		.byte	0
 2344 0374 13       		.uleb128 0x13
 2345 0375 E9000000 		.4byte	0xe9
 2346 0379 84030000 		.4byte	0x384
 2347 037d 14       		.uleb128 0x14
 2348 037e 01010000 		.4byte	0x101
 2349 0382 31       		.byte	0x31
 2350 0383 00       		.byte	0
 2351 0384 13       		.uleb128 0x13
 2352 0385 E9000000 		.4byte	0xe9
 2353 0389 94030000 		.4byte	0x394
 2354 038d 14       		.uleb128 0x14
 2355 038e 01010000 		.4byte	0x101
 2356 0392 13       		.byte	0x13
 2357 0393 00       		.byte	0
 2358 0394 13       		.uleb128 0x13
 2359 0395 E9000000 		.4byte	0xe9
 2360 0399 A4030000 		.4byte	0x3a4
 2361 039d 14       		.uleb128 0x14
 2362 039e 01010000 		.4byte	0x101
 2363 03a2 0D       		.byte	0xd
 2364 03a3 00       		.byte	0
 2365 03a4 13       		.uleb128 0x13
 2366 03a5 E9000000 		.4byte	0xe9
 2367 03a9 B4030000 		.4byte	0x3b4
 2368 03ad 14       		.uleb128 0x14
 2369 03ae 01010000 		.4byte	0x101
 2370 03b2 12       		.byte	0x12
 2371 03b3 00       		.byte	0
 2372 03b4 13       		.uleb128 0x13
 2373 03b5 E9000000 		.4byte	0xe9
 2374 03b9 C4030000 		.4byte	0x3c4
 2375 03bd 14       		.uleb128 0x14
 2376 03be 01010000 		.4byte	0x101
 2377 03c2 10       		.byte	0x10
 2378 03c3 00       		.byte	0
 2379 03c4 13       		.uleb128 0x13
 2380 03c5 E9000000 		.4byte	0xe9
 2381 03c9 D4030000 		.4byte	0x3d4
 2382 03cd 14       		.uleb128 0x14
 2383 03ce 01010000 		.4byte	0x101
 2384 03d2 0F       		.byte	0xf
 2385 03d3 00       		.byte	0
 2386 03d4 13       		.uleb128 0x13
 2387 03d5 E9000000 		.4byte	0xe9
 2388 03d9 E4030000 		.4byte	0x3e4
 2389 03dd 14       		.uleb128 0x14
 2390 03de 01010000 		.4byte	0x101
 2391 03e2 3B       		.byte	0x3b
 2392 03e3 00       		.byte	0
 2393 03e4 15       		.uleb128 0x15
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 54


 2394 03e5 0A040000 		.4byte	.LASF95
 2395 03e9 01       		.byte	0x1
 2396 03ea DF01     		.2byte	0x1df
 2397 03ec 89000000 		.4byte	0x89
 2398 03f0 00000000 		.4byte	.LFB68
 2399 03f4 30010000 		.4byte	.LFE68-.LFB68
 2400 03f8 01       		.uleb128 0x1
 2401 03f9 9C       		.byte	0x9c
 2402 03fa 1D040000 		.4byte	0x41d
 2403 03fe 16       		.uleb128 0x16
 2404 03ff BF000000 		.4byte	.LASF96
 2405 0403 01       		.byte	0x1
 2406 0404 DF01     		.2byte	0x1df
 2407 0406 08010000 		.4byte	0x108
 2408 040a 02       		.uleb128 0x2
 2409 040b 91       		.byte	0x91
 2410 040c 64       		.sleb128 -28
 2411 040d 17       		.uleb128 0x17
 2412 040e 13040000 		.4byte	.LASF58
 2413 0412 01       		.byte	0x1
 2414 0413 E001     		.2byte	0x1e0
 2415 0415 89000000 		.4byte	0x89
 2416 0419 02       		.uleb128 0x2
 2417 041a 91       		.byte	0x91
 2418 041b 6C       		.sleb128 -20
 2419 041c 00       		.byte	0
 2420 041d 18       		.uleb128 0x18
 2421 041e FD030000 		.4byte	.LASF59
 2422 0422 07       		.byte	0x7
 2423 0423 9606     		.2byte	0x696
 2424 0425 29040000 		.4byte	0x429
 2425 0429 06       		.uleb128 0x6
 2426 042a AD000000 		.4byte	0xad
 2427 042e 19       		.uleb128 0x19
 2428 042f 94000000 		.4byte	.LASF60
 2429 0433 08       		.byte	0x8
 2430 0434 9101     		.2byte	0x191
 2431 0436 97000000 		.4byte	0x97
 2432 043a 05       		.uleb128 0x5
 2433 043b 03       		.byte	0x3
 2434 043c 00000000 		.4byte	devAddr
 2435 0440 13       		.uleb128 0x13
 2436 0441 97000000 		.4byte	0x97
 2437 0445 50040000 		.4byte	0x450
 2438 0449 14       		.uleb128 0x14
 2439 044a 01010000 		.4byte	0x101
 2440 044e 15       		.byte	0x15
 2441 044f 00       		.byte	0
 2442 0450 19       		.uleb128 0x19
 2443 0451 39030000 		.4byte	.LASF61
 2444 0455 08       		.byte	0x8
 2445 0456 9201     		.2byte	0x192
 2446 0458 40040000 		.4byte	0x440
 2447 045c 05       		.uleb128 0x5
 2448 045d 03       		.byte	0x3
 2449 045e 00000000 		.4byte	buffer
 2450 0462 1A       		.uleb128 0x1a
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 55


 2451 0463 50000000 		.4byte	.LASF62
 2452 0467 01       		.byte	0x1
 2453 0468 34       		.byte	0x34
 2454 0469 B8000000 		.4byte	0xb8
 2455 046d 05       		.uleb128 0x5
 2456 046e 03       		.byte	0x3
 2457 046f 00000000 		.4byte	Addr
 2458 0473 1B       		.uleb128 0x1b
 2459 0474 696400   		.ascii	"id\000"
 2460 0477 01       		.byte	0x1
 2461 0478 35       		.byte	0x35
 2462 0479 62000000 		.4byte	0x62
 2463 047d 05       		.uleb128 0x5
 2464 047e 03       		.byte	0x3
 2465 047f 00000000 		.4byte	id
 2466 0483 1A       		.uleb128 0x1a
 2467 0484 05020000 		.4byte	.LASF63
 2468 0488 01       		.byte	0x1
 2469 0489 35       		.byte	0x35
 2470 048a 62000000 		.4byte	0x62
 2471 048e 05       		.uleb128 0x5
 2472 048f 03       		.byte	0x3
 2473 0490 00000000 		.4byte	press_id
 2474 0494 1A       		.uleb128 0x1a
 2475 0495 9F020000 		.4byte	.LASF64
 2476 0499 01       		.byte	0x1
 2477 049a 36       		.byte	0x36
 2478 049b 62000000 		.4byte	0x62
 2479 049f 05       		.uleb128 0x5
 2480 04a0 03       		.byte	0x3
 2481 04a1 00000000 		.4byte	data_time
 2482 04a5 1A       		.uleb128 0x1a
 2483 04a6 00000000 		.4byte	.LASF65
 2484 04aa 01       		.byte	0x1
 2485 04ab 37       		.byte	0x37
 2486 04ac 62000000 		.4byte	0x62
 2487 04b0 05       		.uleb128 0x5
 2488 04b1 03       		.byte	0x3
 2489 04b2 00000000 		.4byte	descent_time
 2490 04b6 1B       		.uleb128 0x1b
 2491 04b7 73756D00 		.ascii	"sum\000"
 2492 04bb 01       		.byte	0x1
 2493 04bc 39       		.byte	0x39
 2494 04bd 62000000 		.4byte	0x62
 2495 04c1 05       		.uleb128 0x5
 2496 04c2 03       		.byte	0x3
 2497 04c3 00000000 		.4byte	sum
 2498 04c7 1A       		.uleb128 0x1a
 2499 04c8 2B020000 		.4byte	.LASF66
 2500 04cc 01       		.byte	0x1
 2501 04cd 3A       		.byte	0x3a
 2502 04ce DB000000 		.4byte	0xdb
 2503 04d2 05       		.uleb128 0x5
 2504 04d3 03       		.byte	0x3
 2505 04d4 00000000 		.4byte	pressure_sum
 2506 04d8 1A       		.uleb128 0x1a
 2507 04d9 52010000 		.4byte	.LASF67
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 56


 2508 04dd 01       		.byte	0x1
 2509 04de 3B       		.byte	0x3b
 2510 04df A2000000 		.4byte	0xa2
 2511 04e3 05       		.uleb128 0x5
 2512 04e4 03       		.byte	0x3
 2513 04e5 00000000 		.4byte	average
 2514 04e9 1A       		.uleb128 0x1a
 2515 04ea E3030000 		.4byte	.LASF68
 2516 04ee 01       		.byte	0x1
 2517 04ef 3C       		.byte	0x3c
 2518 04f0 FA040000 		.4byte	0x4fa
 2519 04f4 05       		.uleb128 0x5
 2520 04f5 03       		.byte	0x3
 2521 04f6 00000000 		.4byte	collect_flag
 2522 04fa 02       		.uleb128 0x2
 2523 04fb 01       		.byte	0x1
 2524 04fc 02       		.byte	0x2
 2525 04fd 04030000 		.4byte	.LASF69
 2526 0501 1A       		.uleb128 0x1a
 2527 0502 44040000 		.4byte	.LASF70
 2528 0506 01       		.byte	0x1
 2529 0507 3D       		.byte	0x3d
 2530 0508 FA040000 		.4byte	0x4fa
 2531 050c 05       		.uleb128 0x5
 2532 050d 03       		.byte	0x3
 2533 050e 00000000 		.4byte	wait_flag
 2534 0512 1A       		.uleb128 0x1a
 2535 0513 03010000 		.4byte	.LASF71
 2536 0517 01       		.byte	0x1
 2537 0518 3E       		.byte	0x3e
 2538 0519 FA040000 		.4byte	0x4fa
 2539 051d 05       		.uleb128 0x5
 2540 051e 03       		.byte	0x3
 2541 051f 00000000 		.4byte	PANIC_flag
 2542 0523 1A       		.uleb128 0x1a
 2543 0524 D1030000 		.4byte	.LASF72
 2544 0528 01       		.byte	0x1
 2545 0529 40       		.byte	0x40
 2546 052a 62010000 		.4byte	0x162
 2547 052e 05       		.uleb128 0x5
 2548 052f 03       		.byte	0x3
 2549 0530 00000000 		.4byte	STATE
 2550 0534 1A       		.uleb128 0x1a
 2551 0535 69020000 		.4byte	.LASF73
 2552 0539 01       		.byte	0x1
 2553 053a 41       		.byte	0x41
 2554 053b 97000000 		.4byte	0x97
 2555 053f 05       		.uleb128 0x5
 2556 0540 03       		.byte	0x3
 2557 0541 00000000 		.4byte	countdown
 2558 0545 1A       		.uleb128 0x1a
 2559 0546 21000000 		.4byte	.LASF74
 2560 054a 01       		.byte	0x1
 2561 054b 41       		.byte	0x41
 2562 054c 97000000 		.4byte	0x97
 2563 0550 05       		.uleb128 0x5
 2564 0551 03       		.byte	0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 57


 2565 0552 00000000 		.4byte	update_Data
 2566 0556 13       		.uleb128 0x13
 2567 0557 97000000 		.4byte	0x97
 2568 055b 66050000 		.4byte	0x566
 2569 055f 14       		.uleb128 0x14
 2570 0560 01010000 		.4byte	0x101
 2571 0564 3F       		.byte	0x3f
 2572 0565 00       		.byte	0
 2573 0566 1A       		.uleb128 0x1a
 2574 0567 2D000000 		.4byte	.LASF75
 2575 056b 01       		.byte	0x1
 2576 056c 42       		.byte	0x42
 2577 056d 56050000 		.4byte	0x556
 2578 0571 05       		.uleb128 0x5
 2579 0572 03       		.byte	0x3
 2580 0573 00000000 		.4byte	RxBuffer
 2581 0577 1A       		.uleb128 0x1a
 2582 0578 17000000 		.4byte	.LASF76
 2583 057c 01       		.byte	0x1
 2584 057d 43       		.byte	0x43
 2585 057e 89000000 		.4byte	0x89
 2586 0582 05       		.uleb128 0x5
 2587 0583 03       		.byte	0x3
 2588 0584 00000000 		.4byte	msg_count
 2589 0588 1A       		.uleb128 0x1a
 2590 0589 32030000 		.4byte	.LASF77
 2591 058d 01       		.byte	0x1
 2592 058e 43       		.byte	0x43
 2593 058f 89000000 		.4byte	0x89
 2594 0593 05       		.uleb128 0x5
 2595 0594 03       		.byte	0x3
 2596 0595 00000000 		.4byte	rxflag
 2597 0599 1A       		.uleb128 0x1a
 2598 059a 7F030000 		.4byte	.LASF78
 2599 059e 01       		.byte	0x1
 2600 059f 43       		.byte	0x43
 2601 05a0 89000000 		.4byte	0x89
 2602 05a4 05       		.uleb128 0x5
 2603 05a5 03       		.byte	0x3
 2604 05a6 00000000 		.4byte	bytes
 2605 05aa 1A       		.uleb128 0x1a
 2606 05ab B6000000 		.4byte	.LASF79
 2607 05af 01       		.byte	0x1
 2608 05b0 43       		.byte	0x43
 2609 05b1 89000000 		.4byte	0x89
 2610 05b5 05       		.uleb128 0x5
 2611 05b6 03       		.byte	0x3
 2612 05b7 00000000 		.4byte	dataflag
 2613 05bb 1A       		.uleb128 0x1a
 2614 05bc 9C000000 		.4byte	.LASF80
 2615 05c0 01       		.byte	0x1
 2616 05c1 43       		.byte	0x43
 2617 05c2 89000000 		.4byte	0x89
 2618 05c6 05       		.uleb128 0x5
 2619 05c7 03       		.byte	0x3
 2620 05c8 00000000 		.4byte	transmit_flag
 2621 05cc 1A       		.uleb128 0x1a
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 58


 2622 05cd 19030000 		.4byte	.LASF81
 2623 05d1 01       		.byte	0x1
 2624 05d2 44       		.byte	0x44
 2625 05d3 89000000 		.4byte	0x89
 2626 05d7 05       		.uleb128 0x5
 2627 05d8 03       		.byte	0x3
 2628 05d9 00000000 		.4byte	depth
 2629 05dd 1A       		.uleb128 0x1a
 2630 05de 0A030000 		.4byte	.LASF82
 2631 05e2 01       		.byte	0x1
 2632 05e3 44       		.byte	0x44
 2633 05e4 89000000 		.4byte	0x89
 2634 05e8 05       		.uleb128 0x5
 2635 05e9 03       		.byte	0x3
 2636 05ea 00000000 		.4byte	reset
 2637 05ee 1A       		.uleb128 0x1a
 2638 05ef BB020000 		.4byte	.LASF83
 2639 05f3 01       		.byte	0x1
 2640 05f4 44       		.byte	0x44
 2641 05f5 89000000 		.4byte	0x89
 2642 05f9 05       		.uleb128 0x5
 2643 05fa 03       		.byte	0x3
 2644 05fb 00000000 		.4byte	testnum
 2645 05ff 1A       		.uleb128 0x1a
 2646 0600 1B040000 		.4byte	.LASF84
 2647 0604 01       		.byte	0x1
 2648 0605 45       		.byte	0x45
 2649 0606 DB000000 		.4byte	0xdb
 2650 060a 05       		.uleb128 0x5
 2651 060b 03       		.byte	0x3
 2652 060c 00000000 		.4byte	xavg
 2653 0610 1A       		.uleb128 0x1a
 2654 0611 0E010000 		.4byte	.LASF85
 2655 0615 01       		.byte	0x1
 2656 0616 45       		.byte	0x45
 2657 0617 DB000000 		.4byte	0xdb
 2658 061b 05       		.uleb128 0x5
 2659 061c 03       		.byte	0x3
 2660 061d 00000000 		.4byte	yavg
 2661 0621 1A       		.uleb128 0x1a
 2662 0622 D6020000 		.4byte	.LASF86
 2663 0626 01       		.byte	0x1
 2664 0627 45       		.byte	0x45
 2665 0628 DB000000 		.4byte	0xdb
 2666 062c 05       		.uleb128 0x5
 2667 062d 03       		.byte	0x3
 2668 062e 00000000 		.4byte	xsum
 2669 0632 1A       		.uleb128 0x1a
 2670 0633 DE030000 		.4byte	.LASF87
 2671 0637 01       		.byte	0x1
 2672 0638 45       		.byte	0x45
 2673 0639 DB000000 		.4byte	0xdb
 2674 063d 05       		.uleb128 0x5
 2675 063e 03       		.byte	0x3
 2676 063f 00000000 		.4byte	ysum
 2677 0643 13       		.uleb128 0x13
 2678 0644 E9000000 		.4byte	0xe9
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 59


 2679 0648 53060000 		.4byte	0x653
 2680 064c 14       		.uleb128 0x14
 2681 064d 01010000 		.4byte	0x101
 2682 0651 0A       		.byte	0xa
 2683 0652 00       		.byte	0
 2684 0653 1A       		.uleb128 0x1a
 2685 0654 E7000000 		.4byte	.LASF88
 2686 0658 01       		.byte	0x1
 2687 0659 46       		.byte	0x46
 2688 065a 43060000 		.4byte	0x643
 2689 065e 05       		.uleb128 0x5
 2690 065f 03       		.byte	0x3
 2691 0660 00000000 		.4byte	file
 2692 0664 13       		.uleb128 0x13
 2693 0665 E9000000 		.4byte	0xe9
 2694 0669 74060000 		.4byte	0x674
 2695 066d 14       		.uleb128 0x14
 2696 066e 01010000 		.4byte	0x101
 2697 0672 09       		.byte	0x9
 2698 0673 00       		.byte	0
 2699 0674 1A       		.uleb128 0x1a
 2700 0675 FE010000 		.4byte	.LASF89
 2701 0679 01       		.byte	0x1
 2702 067a 47       		.byte	0x47
 2703 067b 64060000 		.4byte	0x664
 2704 067f 05       		.uleb128 0x5
 2705 0680 03       		.byte	0x3
 2706 0681 00000000 		.4byte	volume
 2707 0685 1A       		.uleb128 0x1a
 2708 0686 33040000 		.4byte	.LASF90
 2709 068a 01       		.byte	0x1
 2710 068b 48       		.byte	0x48
 2711 068c 1E010000 		.4byte	0x11e
 2712 0690 05       		.uleb128 0x5
 2713 0691 03       		.byte	0x3
 2714 0692 00000000 		.4byte	fsfile
 2715 0696 00       		.byte	0
 2716              		.section	.debug_abbrev,"",%progbits
 2717              	.Ldebug_abbrev0:
 2718 0000 01       		.uleb128 0x1
 2719 0001 11       		.uleb128 0x11
 2720 0002 01       		.byte	0x1
 2721 0003 25       		.uleb128 0x25
 2722 0004 0E       		.uleb128 0xe
 2723 0005 13       		.uleb128 0x13
 2724 0006 0B       		.uleb128 0xb
 2725 0007 03       		.uleb128 0x3
 2726 0008 0E       		.uleb128 0xe
 2727 0009 1B       		.uleb128 0x1b
 2728 000a 0E       		.uleb128 0xe
 2729 000b 55       		.uleb128 0x55
 2730 000c 17       		.uleb128 0x17
 2731 000d 11       		.uleb128 0x11
 2732 000e 01       		.uleb128 0x1
 2733 000f 10       		.uleb128 0x10
 2734 0010 17       		.uleb128 0x17
 2735 0011 00       		.byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 60


 2736 0012 00       		.byte	0
 2737 0013 02       		.uleb128 0x2
 2738 0014 24       		.uleb128 0x24
 2739 0015 00       		.byte	0
 2740 0016 0B       		.uleb128 0xb
 2741 0017 0B       		.uleb128 0xb
 2742 0018 3E       		.uleb128 0x3e
 2743 0019 0B       		.uleb128 0xb
 2744 001a 03       		.uleb128 0x3
 2745 001b 0E       		.uleb128 0xe
 2746 001c 00       		.byte	0
 2747 001d 00       		.byte	0
 2748 001e 03       		.uleb128 0x3
 2749 001f 16       		.uleb128 0x16
 2750 0020 00       		.byte	0
 2751 0021 03       		.uleb128 0x3
 2752 0022 0E       		.uleb128 0xe
 2753 0023 3A       		.uleb128 0x3a
 2754 0024 0B       		.uleb128 0xb
 2755 0025 3B       		.uleb128 0x3b
 2756 0026 0B       		.uleb128 0xb
 2757 0027 49       		.uleb128 0x49
 2758 0028 13       		.uleb128 0x13
 2759 0029 00       		.byte	0
 2760 002a 00       		.byte	0
 2761 002b 04       		.uleb128 0x4
 2762 002c 24       		.uleb128 0x24
 2763 002d 00       		.byte	0
 2764 002e 0B       		.uleb128 0xb
 2765 002f 0B       		.uleb128 0xb
 2766 0030 3E       		.uleb128 0x3e
 2767 0031 0B       		.uleb128 0xb
 2768 0032 03       		.uleb128 0x3
 2769 0033 08       		.uleb128 0x8
 2770 0034 00       		.byte	0
 2771 0035 00       		.byte	0
 2772 0036 05       		.uleb128 0x5
 2773 0037 16       		.uleb128 0x16
 2774 0038 00       		.byte	0
 2775 0039 03       		.uleb128 0x3
 2776 003a 0E       		.uleb128 0xe
 2777 003b 3A       		.uleb128 0x3a
 2778 003c 0B       		.uleb128 0xb
 2779 003d 3B       		.uleb128 0x3b
 2780 003e 05       		.uleb128 0x5
 2781 003f 49       		.uleb128 0x49
 2782 0040 13       		.uleb128 0x13
 2783 0041 00       		.byte	0
 2784 0042 00       		.byte	0
 2785 0043 06       		.uleb128 0x6
 2786 0044 35       		.uleb128 0x35
 2787 0045 00       		.byte	0
 2788 0046 49       		.uleb128 0x49
 2789 0047 13       		.uleb128 0x13
 2790 0048 00       		.byte	0
 2791 0049 00       		.byte	0
 2792 004a 07       		.uleb128 0x7
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 61


 2793 004b 0F       		.uleb128 0xf
 2794 004c 00       		.byte	0
 2795 004d 0B       		.uleb128 0xb
 2796 004e 0B       		.uleb128 0xb
 2797 004f 49       		.uleb128 0x49
 2798 0050 13       		.uleb128 0x13
 2799 0051 00       		.byte	0
 2800 0052 00       		.byte	0
 2801 0053 08       		.uleb128 0x8
 2802 0054 13       		.uleb128 0x13
 2803 0055 00       		.byte	0
 2804 0056 03       		.uleb128 0x3
 2805 0057 0E       		.uleb128 0xe
 2806 0058 3C       		.uleb128 0x3c
 2807 0059 19       		.uleb128 0x19
 2808 005a 00       		.byte	0
 2809 005b 00       		.byte	0
 2810 005c 09       		.uleb128 0x9
 2811 005d 04       		.uleb128 0x4
 2812 005e 01       		.byte	0x1
 2813 005f 03       		.uleb128 0x3
 2814 0060 0E       		.uleb128 0xe
 2815 0061 0B       		.uleb128 0xb
 2816 0062 0B       		.uleb128 0xb
 2817 0063 3A       		.uleb128 0x3a
 2818 0064 0B       		.uleb128 0xb
 2819 0065 3B       		.uleb128 0x3b
 2820 0066 0B       		.uleb128 0xb
 2821 0067 01       		.uleb128 0x1
 2822 0068 13       		.uleb128 0x13
 2823 0069 00       		.byte	0
 2824 006a 00       		.byte	0
 2825 006b 0A       		.uleb128 0xa
 2826 006c 28       		.uleb128 0x28
 2827 006d 00       		.byte	0
 2828 006e 03       		.uleb128 0x3
 2829 006f 0E       		.uleb128 0xe
 2830 0070 1C       		.uleb128 0x1c
 2831 0071 0D       		.uleb128 0xd
 2832 0072 00       		.byte	0
 2833 0073 00       		.byte	0
 2834 0074 0B       		.uleb128 0xb
 2835 0075 2E       		.uleb128 0x2e
 2836 0076 00       		.byte	0
 2837 0077 3F       		.uleb128 0x3f
 2838 0078 19       		.uleb128 0x19
 2839 0079 03       		.uleb128 0x3
 2840 007a 0E       		.uleb128 0xe
 2841 007b 3A       		.uleb128 0x3a
 2842 007c 0B       		.uleb128 0xb
 2843 007d 3B       		.uleb128 0x3b
 2844 007e 0B       		.uleb128 0xb
 2845 007f 27       		.uleb128 0x27
 2846 0080 19       		.uleb128 0x19
 2847 0081 11       		.uleb128 0x11
 2848 0082 01       		.uleb128 0x1
 2849 0083 12       		.uleb128 0x12
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 62


 2850 0084 06       		.uleb128 0x6
 2851 0085 40       		.uleb128 0x40
 2852 0086 18       		.uleb128 0x18
 2853 0087 9642     		.uleb128 0x2116
 2854 0089 19       		.uleb128 0x19
 2855 008a 00       		.byte	0
 2856 008b 00       		.byte	0
 2857 008c 0C       		.uleb128 0xc
 2858 008d 2E       		.uleb128 0x2e
 2859 008e 00       		.byte	0
 2860 008f 3F       		.uleb128 0x3f
 2861 0090 19       		.uleb128 0x19
 2862 0091 03       		.uleb128 0x3
 2863 0092 0E       		.uleb128 0xe
 2864 0093 3A       		.uleb128 0x3a
 2865 0094 0B       		.uleb128 0xb
 2866 0095 3B       		.uleb128 0x3b
 2867 0096 0B       		.uleb128 0xb
 2868 0097 27       		.uleb128 0x27
 2869 0098 19       		.uleb128 0x19
 2870 0099 11       		.uleb128 0x11
 2871 009a 01       		.uleb128 0x1
 2872 009b 12       		.uleb128 0x12
 2873 009c 06       		.uleb128 0x6
 2874 009d 40       		.uleb128 0x40
 2875 009e 18       		.uleb128 0x18
 2876 009f 9742     		.uleb128 0x2117
 2877 00a1 19       		.uleb128 0x19
 2878 00a2 00       		.byte	0
 2879 00a3 00       		.byte	0
 2880 00a4 0D       		.uleb128 0xd
 2881 00a5 2E       		.uleb128 0x2e
 2882 00a6 01       		.byte	0x1
 2883 00a7 3F       		.uleb128 0x3f
 2884 00a8 19       		.uleb128 0x19
 2885 00a9 03       		.uleb128 0x3
 2886 00aa 0E       		.uleb128 0xe
 2887 00ab 3A       		.uleb128 0x3a
 2888 00ac 0B       		.uleb128 0xb
 2889 00ad 3B       		.uleb128 0x3b
 2890 00ae 0B       		.uleb128 0xb
 2891 00af 49       		.uleb128 0x49
 2892 00b0 13       		.uleb128 0x13
 2893 00b1 11       		.uleb128 0x11
 2894 00b2 01       		.uleb128 0x1
 2895 00b3 12       		.uleb128 0x12
 2896 00b4 06       		.uleb128 0x6
 2897 00b5 40       		.uleb128 0x40
 2898 00b6 18       		.uleb128 0x18
 2899 00b7 9642     		.uleb128 0x2116
 2900 00b9 19       		.uleb128 0x19
 2901 00ba 01       		.uleb128 0x1
 2902 00bb 13       		.uleb128 0x13
 2903 00bc 00       		.byte	0
 2904 00bd 00       		.byte	0
 2905 00be 0E       		.uleb128 0xe
 2906 00bf 34       		.uleb128 0x34
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 63


 2907 00c0 00       		.byte	0
 2908 00c1 03       		.uleb128 0x3
 2909 00c2 08       		.uleb128 0x8
 2910 00c3 3A       		.uleb128 0x3a
 2911 00c4 0B       		.uleb128 0xb
 2912 00c5 3B       		.uleb128 0x3b
 2913 00c6 0B       		.uleb128 0xb
 2914 00c7 49       		.uleb128 0x49
 2915 00c8 13       		.uleb128 0x13
 2916 00c9 02       		.uleb128 0x2
 2917 00ca 18       		.uleb128 0x18
 2918 00cb 00       		.byte	0
 2919 00cc 00       		.byte	0
 2920 00cd 0F       		.uleb128 0xf
 2921 00ce 34       		.uleb128 0x34
 2922 00cf 00       		.byte	0
 2923 00d0 03       		.uleb128 0x3
 2924 00d1 0E       		.uleb128 0xe
 2925 00d2 3A       		.uleb128 0x3a
 2926 00d3 0B       		.uleb128 0xb
 2927 00d4 3B       		.uleb128 0x3b
 2928 00d5 0B       		.uleb128 0xb
 2929 00d6 49       		.uleb128 0x49
 2930 00d7 13       		.uleb128 0x13
 2931 00d8 02       		.uleb128 0x2
 2932 00d9 18       		.uleb128 0x18
 2933 00da 00       		.byte	0
 2934 00db 00       		.byte	0
 2935 00dc 10       		.uleb128 0x10
 2936 00dd 34       		.uleb128 0x34
 2937 00de 00       		.byte	0
 2938 00df 03       		.uleb128 0x3
 2939 00e0 08       		.uleb128 0x8
 2940 00e1 3A       		.uleb128 0x3a
 2941 00e2 0B       		.uleb128 0xb
 2942 00e3 3B       		.uleb128 0x3b
 2943 00e4 0B       		.uleb128 0xb
 2944 00e5 49       		.uleb128 0x49
 2945 00e6 13       		.uleb128 0x13
 2946 00e7 00       		.byte	0
 2947 00e8 00       		.byte	0
 2948 00e9 11       		.uleb128 0x11
 2949 00ea 0B       		.uleb128 0xb
 2950 00eb 01       		.byte	0x1
 2951 00ec 11       		.uleb128 0x11
 2952 00ed 01       		.uleb128 0x1
 2953 00ee 12       		.uleb128 0x12
 2954 00ef 06       		.uleb128 0x6
 2955 00f0 00       		.byte	0
 2956 00f1 00       		.byte	0
 2957 00f2 12       		.uleb128 0x12
 2958 00f3 34       		.uleb128 0x34
 2959 00f4 00       		.byte	0
 2960 00f5 03       		.uleb128 0x3
 2961 00f6 08       		.uleb128 0x8
 2962 00f7 3A       		.uleb128 0x3a
 2963 00f8 0B       		.uleb128 0xb
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 64


 2964 00f9 3B       		.uleb128 0x3b
 2965 00fa 05       		.uleb128 0x5
 2966 00fb 49       		.uleb128 0x49
 2967 00fc 13       		.uleb128 0x13
 2968 00fd 02       		.uleb128 0x2
 2969 00fe 18       		.uleb128 0x18
 2970 00ff 00       		.byte	0
 2971 0100 00       		.byte	0
 2972 0101 13       		.uleb128 0x13
 2973 0102 01       		.uleb128 0x1
 2974 0103 01       		.byte	0x1
 2975 0104 49       		.uleb128 0x49
 2976 0105 13       		.uleb128 0x13
 2977 0106 01       		.uleb128 0x1
 2978 0107 13       		.uleb128 0x13
 2979 0108 00       		.byte	0
 2980 0109 00       		.byte	0
 2981 010a 14       		.uleb128 0x14
 2982 010b 21       		.uleb128 0x21
 2983 010c 00       		.byte	0
 2984 010d 49       		.uleb128 0x49
 2985 010e 13       		.uleb128 0x13
 2986 010f 2F       		.uleb128 0x2f
 2987 0110 0B       		.uleb128 0xb
 2988 0111 00       		.byte	0
 2989 0112 00       		.byte	0
 2990 0113 15       		.uleb128 0x15
 2991 0114 2E       		.uleb128 0x2e
 2992 0115 01       		.byte	0x1
 2993 0116 3F       		.uleb128 0x3f
 2994 0117 19       		.uleb128 0x19
 2995 0118 03       		.uleb128 0x3
 2996 0119 0E       		.uleb128 0xe
 2997 011a 3A       		.uleb128 0x3a
 2998 011b 0B       		.uleb128 0xb
 2999 011c 3B       		.uleb128 0x3b
 3000 011d 05       		.uleb128 0x5
 3001 011e 27       		.uleb128 0x27
 3002 011f 19       		.uleb128 0x19
 3003 0120 49       		.uleb128 0x49
 3004 0121 13       		.uleb128 0x13
 3005 0122 11       		.uleb128 0x11
 3006 0123 01       		.uleb128 0x1
 3007 0124 12       		.uleb128 0x12
 3008 0125 06       		.uleb128 0x6
 3009 0126 40       		.uleb128 0x40
 3010 0127 18       		.uleb128 0x18
 3011 0128 9642     		.uleb128 0x2116
 3012 012a 19       		.uleb128 0x19
 3013 012b 01       		.uleb128 0x1
 3014 012c 13       		.uleb128 0x13
 3015 012d 00       		.byte	0
 3016 012e 00       		.byte	0
 3017 012f 16       		.uleb128 0x16
 3018 0130 05       		.uleb128 0x5
 3019 0131 00       		.byte	0
 3020 0132 03       		.uleb128 0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 65


 3021 0133 0E       		.uleb128 0xe
 3022 0134 3A       		.uleb128 0x3a
 3023 0135 0B       		.uleb128 0xb
 3024 0136 3B       		.uleb128 0x3b
 3025 0137 05       		.uleb128 0x5
 3026 0138 49       		.uleb128 0x49
 3027 0139 13       		.uleb128 0x13
 3028 013a 02       		.uleb128 0x2
 3029 013b 18       		.uleb128 0x18
 3030 013c 00       		.byte	0
 3031 013d 00       		.byte	0
 3032 013e 17       		.uleb128 0x17
 3033 013f 34       		.uleb128 0x34
 3034 0140 00       		.byte	0
 3035 0141 03       		.uleb128 0x3
 3036 0142 0E       		.uleb128 0xe
 3037 0143 3A       		.uleb128 0x3a
 3038 0144 0B       		.uleb128 0xb
 3039 0145 3B       		.uleb128 0x3b
 3040 0146 05       		.uleb128 0x5
 3041 0147 49       		.uleb128 0x49
 3042 0148 13       		.uleb128 0x13
 3043 0149 02       		.uleb128 0x2
 3044 014a 18       		.uleb128 0x18
 3045 014b 00       		.byte	0
 3046 014c 00       		.byte	0
 3047 014d 18       		.uleb128 0x18
 3048 014e 34       		.uleb128 0x34
 3049 014f 00       		.byte	0
 3050 0150 03       		.uleb128 0x3
 3051 0151 0E       		.uleb128 0xe
 3052 0152 3A       		.uleb128 0x3a
 3053 0153 0B       		.uleb128 0xb
 3054 0154 3B       		.uleb128 0x3b
 3055 0155 05       		.uleb128 0x5
 3056 0156 49       		.uleb128 0x49
 3057 0157 13       		.uleb128 0x13
 3058 0158 3F       		.uleb128 0x3f
 3059 0159 19       		.uleb128 0x19
 3060 015a 3C       		.uleb128 0x3c
 3061 015b 19       		.uleb128 0x19
 3062 015c 00       		.byte	0
 3063 015d 00       		.byte	0
 3064 015e 19       		.uleb128 0x19
 3065 015f 34       		.uleb128 0x34
 3066 0160 00       		.byte	0
 3067 0161 03       		.uleb128 0x3
 3068 0162 0E       		.uleb128 0xe
 3069 0163 3A       		.uleb128 0x3a
 3070 0164 0B       		.uleb128 0xb
 3071 0165 3B       		.uleb128 0x3b
 3072 0166 05       		.uleb128 0x5
 3073 0167 49       		.uleb128 0x49
 3074 0168 13       		.uleb128 0x13
 3075 0169 3F       		.uleb128 0x3f
 3076 016a 19       		.uleb128 0x19
 3077 016b 02       		.uleb128 0x2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 66


 3078 016c 18       		.uleb128 0x18
 3079 016d 00       		.byte	0
 3080 016e 00       		.byte	0
 3081 016f 1A       		.uleb128 0x1a
 3082 0170 34       		.uleb128 0x34
 3083 0171 00       		.byte	0
 3084 0172 03       		.uleb128 0x3
 3085 0173 0E       		.uleb128 0xe
 3086 0174 3A       		.uleb128 0x3a
 3087 0175 0B       		.uleb128 0xb
 3088 0176 3B       		.uleb128 0x3b
 3089 0177 0B       		.uleb128 0xb
 3090 0178 49       		.uleb128 0x49
 3091 0179 13       		.uleb128 0x13
 3092 017a 3F       		.uleb128 0x3f
 3093 017b 19       		.uleb128 0x19
 3094 017c 02       		.uleb128 0x2
 3095 017d 18       		.uleb128 0x18
 3096 017e 00       		.byte	0
 3097 017f 00       		.byte	0
 3098 0180 1B       		.uleb128 0x1b
 3099 0181 34       		.uleb128 0x34
 3100 0182 00       		.byte	0
 3101 0183 03       		.uleb128 0x3
 3102 0184 08       		.uleb128 0x8
 3103 0185 3A       		.uleb128 0x3a
 3104 0186 0B       		.uleb128 0xb
 3105 0187 3B       		.uleb128 0x3b
 3106 0188 0B       		.uleb128 0xb
 3107 0189 49       		.uleb128 0x49
 3108 018a 13       		.uleb128 0x13
 3109 018b 3F       		.uleb128 0x3f
 3110 018c 19       		.uleb128 0x19
 3111 018d 02       		.uleb128 0x2
 3112 018e 18       		.uleb128 0x18
 3113 018f 00       		.byte	0
 3114 0190 00       		.byte	0
 3115 0191 00       		.byte	0
 3116              		.section	.debug_aranges,"",%progbits
 3117 0000 44000000 		.4byte	0x44
 3118 0004 0200     		.2byte	0x2
 3119 0006 00000000 		.4byte	.Ldebug_info0
 3120 000a 04       		.byte	0x4
 3121 000b 00       		.byte	0
 3122 000c 0000     		.2byte	0
 3123 000e 0000     		.2byte	0
 3124 0010 00000000 		.4byte	.LFB63
 3125 0014 20000000 		.4byte	.LFE63-.LFB63
 3126 0018 00000000 		.4byte	.LFB64
 3127 001c 40000000 		.4byte	.LFE64-.LFB64
 3128 0020 00000000 		.4byte	.LFB65
 3129 0024 9C000000 		.4byte	.LFE65-.LFB65
 3130 0028 00000000 		.4byte	.LFB66
 3131 002c 50000000 		.4byte	.LFE66-.LFB66
 3132 0030 00000000 		.4byte	.LFB67
 3133 0034 D8080000 		.4byte	.LFE67-.LFB67
 3134 0038 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 67


 3135 003c 30010000 		.4byte	.LFE68-.LFB68
 3136 0040 00000000 		.4byte	0
 3137 0044 00000000 		.4byte	0
 3138              		.section	.debug_ranges,"",%progbits
 3139              	.Ldebug_ranges0:
 3140 0000 00000000 		.4byte	.LFB63
 3141 0004 20000000 		.4byte	.LFE63
 3142 0008 00000000 		.4byte	.LFB64
 3143 000c 40000000 		.4byte	.LFE64
 3144 0010 00000000 		.4byte	.LFB65
 3145 0014 9C000000 		.4byte	.LFE65
 3146 0018 00000000 		.4byte	.LFB66
 3147 001c 50000000 		.4byte	.LFE66
 3148 0020 00000000 		.4byte	.LFB67
 3149 0024 D8080000 		.4byte	.LFE67
 3150 0028 00000000 		.4byte	.LFB68
 3151 002c 30010000 		.4byte	.LFE68
 3152 0030 00000000 		.4byte	0
 3153 0034 00000000 		.4byte	0
 3154              		.section	.debug_line,"",%progbits
 3155              	.Ldebug_line0:
 3156 0000 5D030000 		.section	.debug_str,"MS",%progbits,1
 3156      0200A101 
 3156      00000201 
 3156      FB0E0D00 
 3156      01010101 
 3157              	.LASF65:
 3158 0000 64657363 		.ascii	"descent_time\000"
 3158      656E745F 
 3158      74696D65 
 3158      00
 3159              	.LASF30:
 3160 000d 52455355 		.ascii	"RESURFACE\000"
 3160      52464143 
 3160      4500
 3161              	.LASF76:
 3162 0017 6D73675F 		.ascii	"msg_count\000"
 3162      636F756E 
 3162      7400
 3163              	.LASF74:
 3164 0021 75706461 		.ascii	"update_Data\000"
 3164      74655F44 
 3164      61746100 
 3165              	.LASF75:
 3166 002d 52784275 		.ascii	"RxBuffer\000"
 3166      66666572 
 3166      00
 3167              	.LASF26:
 3168 0036 53595354 		.ascii	"SYSTEM_CHECK\000"
 3168      454D5F43 
 3168      4845434B 
 3168      00
 3169              	.LASF33:
 3170 0043 53544154 		.ascii	"STATES\000"
 3170      455300
 3171              	.LASF57:
 3172 004a 73646275 		.ascii	"sdbuf\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 68


 3172      6600
 3173              	.LASF62:
 3174 0050 41646472 		.ascii	"Addr\000"
 3174      00
 3175              	.LASF93:
 3176 0055 433A5C55 		.ascii	"C:\\Users\\gding\\Documents\\Project_O-Vac\\Full_wo"
 3176      73657273 
 3176      5C676469 
 3176      6E675C44 
 3176      6F63756D 
 3177 0083 5F666169 		.ascii	"_failsafes.cydsn\000"
 3177      6C736166 
 3177      65732E63 
 3177      7964736E 
 3177      00
 3178              	.LASF60:
 3179 0094 64657641 		.ascii	"devAddr\000"
 3179      64647200 
 3180              	.LASF80:
 3181 009c 7472616E 		.ascii	"transmit_flag\000"
 3181      736D6974 
 3181      5F666C61 
 3181      6700
 3182              	.LASF55:
 3183 00aa 6F6E6573 		.ascii	"ones\000"
 3183      00
 3184              	.LASF29:
 3185 00af 4C414E44 		.ascii	"LANDED\000"
 3185      454400
 3186              	.LASF79:
 3187 00b6 64617461 		.ascii	"dataflag\000"
 3187      666C6167 
 3187      00
 3188              	.LASF96:
 3189 00bf 66696C65 		.ascii	"filename\000"
 3189      6E616D65 
 3189      00
 3190              	.LASF34:
 3191 00c8 4D6F6973 		.ascii	"Moisture_ISR_Handler\000"
 3191      74757265 
 3191      5F495352 
 3191      5F48616E 
 3191      646C6572 
 3192              	.LASF47:
 3193 00dd 76616375 		.ascii	"vacuumbuf\000"
 3193      756D6275 
 3193      6600
 3194              	.LASF88:
 3195 00e7 66696C65 		.ascii	"file\000"
 3195      00
 3196              	.LASF42:
 3197 00ec 70726573 		.ascii	"pressure_avg\000"
 3197      73757265 
 3197      5F617667 
 3197      00
 3198              	.LASF4:
 3199 00f9 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 69


 3199      7420696E 
 3199      7400
 3200              	.LASF71:
 3201 0103 50414E49 		.ascii	"PANIC_flag\000"
 3201      435F666C 
 3201      616700
 3202              	.LASF85:
 3203 010e 79617667 		.ascii	"yavg\000"
 3203      00
 3204              	.LASF13:
 3205 0113 75696E74 		.ascii	"uint8_t\000"
 3205      385F7400 
 3206              	.LASF51:
 3207 011b 70756C73 		.ascii	"pulse\000"
 3207      6500
 3208              	.LASF18:
 3209 0121 696E7431 		.ascii	"int16\000"
 3209      3600
 3210              	.LASF38:
 3211 0127 64656369 		.ascii	"decimals\000"
 3211      6D616C73 
 3211      00
 3212              	.LASF19:
 3213 0130 666C6F61 		.ascii	"float\000"
 3213      7400
 3214              	.LASF50:
 3215 0136 73746174 		.ascii	"stateMsgCount\000"
 3215      654D7367 
 3215      436F756E 
 3215      7400
 3216              	.LASF10:
 3217 0144 6C6F6E67 		.ascii	"long long int\000"
 3217      206C6F6E 
 3217      6720696E 
 3217      7400
 3218              	.LASF67:
 3219 0152 61766572 		.ascii	"average\000"
 3219      61676500 
 3220              	.LASF31:
 3221 015a 5452414E 		.ascii	"TRANSMIT\000"
 3221      534D4954 
 3221      00
 3222              	.LASF91:
 3223 0163 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3223      4320342E 
 3223      392E3320 
 3223      32303135 
 3223      30333033 
 3224 0196 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3224      20726576 
 3224      6973696F 
 3224      6E203232 
 3224      31323230 
 3225 01c9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3225      66756E63 
 3225      74696F6E 
 3225      2D736563 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 70


 3225      74696F6E 
 3226              	.LASF54:
 3227 01f1 74656E73 		.ascii	"tens\000"
 3227      00
 3228              	.LASF39:
 3229 01f6 766F6C74 		.ascii	"voltage\000"
 3229      61676500 
 3230              	.LASF89:
 3231 01fe 766F6C75 		.ascii	"volume\000"
 3231      6D6500
 3232              	.LASF63:
 3233 0205 70726573 		.ascii	"press_id\000"
 3233      735F6964 
 3233      00
 3234              	.LASF52:
 3235 020e 73656373 		.ascii	"secs_for_tilt\000"
 3235      5F666F72 
 3235      5F74696C 
 3235      7400
 3236              	.LASF49:
 3237 021c 7472616E 		.ascii	"transbuf\000"
 3237      73627566 
 3237      00
 3238              	.LASF32:
 3239 0225 4552524F 		.ascii	"ERROR\000"
 3239      5200
 3240              	.LASF66:
 3241 022b 70726573 		.ascii	"pressure_sum\000"
 3241      73757265 
 3241      5F73756D 
 3241      00
 3242              	.LASF25:
 3243 0238 6C6F6E67 		.ascii	"long double\000"
 3243      20646F75 
 3243      626C6500 
 3244              	.LASF27:
 3245 0244 57414954 		.ascii	"WAIT_TO_LAUNCH\000"
 3245      5F544F5F 
 3245      4C41554E 
 3245      434800
 3246              	.LASF1:
 3247 0253 756E7369 		.ascii	"unsigned char\000"
 3247      676E6564 
 3247      20636861 
 3247      7200
 3248              	.LASF24:
 3249 0261 46535F46 		.ascii	"FS_FILE\000"
 3249      494C4500 
 3250              	.LASF73:
 3251 0269 636F756E 		.ascii	"countdown\000"
 3251      74646F77 
 3251      6E00
 3252              	.LASF0:
 3253 0273 7369676E 		.ascii	"signed char\000"
 3253      65642063 
 3253      68617200 
 3254              	.LASF11:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 71


 3255 027f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3255      206C6F6E 
 3255      6720756E 
 3255      7369676E 
 3255      65642069 
 3256              	.LASF16:
 3257 0296 75696E74 		.ascii	"uint32_t\000"
 3257      33325F74 
 3257      00
 3258              	.LASF64:
 3259 029f 64617461 		.ascii	"data_time\000"
 3259      5F74696D 
 3259      6500
 3260              	.LASF12:
 3261 02a9 756E7369 		.ascii	"unsigned int\000"
 3261      676E6564 
 3261      20696E74 
 3261      00
 3262              	.LASF40:
 3263 02b6 74656D70 		.ascii	"temp\000"
 3263      00
 3264              	.LASF83:
 3265 02bb 74657374 		.ascii	"testnum\000"
 3265      6E756D00 
 3266              	.LASF5:
 3267 02c3 73686F72 		.ascii	"short unsigned int\000"
 3267      7420756E 
 3267      7369676E 
 3267      65642069 
 3267      6E7400
 3268              	.LASF86:
 3269 02d6 7873756D 		.ascii	"xsum\000"
 3269      00
 3270              	.LASF21:
 3271 02db 63686172 		.ascii	"char\000"
 3271      00
 3272              	.LASF7:
 3273 02e0 6C6F6E67 		.ascii	"long int\000"
 3273      20696E74 
 3273      00
 3274              	.LASF94:
 3275 02e9 6D61696E 		.ascii	"main\000"
 3275      00
 3276              	.LASF15:
 3277 02ee 696E7433 		.ascii	"int32_t\000"
 3277      325F7400 
 3278              	.LASF14:
 3279 02f6 696E7431 		.ascii	"int16_t\000"
 3279      365F7400 
 3280              	.LASF17:
 3281 02fe 75696E74 		.ascii	"uint8\000"
 3281      3800
 3282              	.LASF69:
 3283 0304 5F426F6F 		.ascii	"_Bool\000"
 3283      6C00
 3284              	.LASF82:
 3285 030a 72657365 		.ascii	"reset\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 72


 3285      7400
 3286              	.LASF44:
 3287 0310 63757253 		.ascii	"curState\000"
 3287      74617465 
 3287      00
 3288              	.LASF81:
 3289 0319 64657074 		.ascii	"depth\000"
 3289      6800
 3290              	.LASF53:
 3291 031f 7A5F6F66 		.ascii	"z_offset\000"
 3291      66736574 
 3291      00
 3292              	.LASF48:
 3293 0328 72657375 		.ascii	"resurfbuf\000"
 3293      72666275 
 3293      6600
 3294              	.LASF77:
 3295 0332 7278666C 		.ascii	"rxflag\000"
 3295      616700
 3296              	.LASF61:
 3297 0339 62756666 		.ascii	"buffer\000"
 3297      657200
 3298              	.LASF36:
 3299 0340 436F756E 		.ascii	"Countdown_ISR_Handler\000"
 3299      74646F77 
 3299      6E5F4953 
 3299      525F4861 
 3299      6E646C65 
 3300              	.LASF92:
 3301 0356 6D61696E 		.ascii	"main.c\000"
 3301      2E6300
 3302              	.LASF22:
 3303 035d 72656738 		.ascii	"reg8\000"
 3303      00
 3304              	.LASF9:
 3305 0362 6C6F6E67 		.ascii	"long unsigned int\000"
 3305      20756E73 
 3305      69676E65 
 3305      6420696E 
 3305      7400
 3306              	.LASF28:
 3307 0374 44455343 		.ascii	"DESCENDING\000"
 3307      454E4449 
 3307      4E4700
 3308              	.LASF78:
 3309 037f 62797465 		.ascii	"bytes\000"
 3309      7300
 3310              	.LASF20:
 3311 0385 646F7562 		.ascii	"double\000"
 3311      6C6500
 3312              	.LASF8:
 3313 038c 5F5F7569 		.ascii	"__uint32_t\000"
 3313      6E743332 
 3313      5F7400
 3314              	.LASF43:
 3315 0397 74656D70 		.ascii	"tempbuf\000"
 3315      62756600 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 73


 3316              	.LASF6:
 3317 039f 5F5F696E 		.ascii	"__int32_t\000"
 3317      7433325F 
 3317      7400
 3318              	.LASF3:
 3319 03a9 5F5F696E 		.ascii	"__int16_t\000"
 3319      7431365F 
 3319      7400
 3320              	.LASF45:
 3321 03b3 64657363 		.ascii	"descendbuf\000"
 3321      656E6462 
 3321      756600
 3322              	.LASF23:
 3323 03be 73697A65 		.ascii	"sizetype\000"
 3323      74797065 
 3323      00
 3324              	.LASF56:
 3325 03c7 53445F52 		.ascii	"SD_Result\000"
 3325      6573756C 
 3325      7400
 3326              	.LASF72:
 3327 03d1 53544154 		.ascii	"STATE\000"
 3327      4500
 3328              	.LASF41:
 3329 03d7 6F757470 		.ascii	"output\000"
 3329      757400
 3330              	.LASF87:
 3331 03de 7973756D 		.ascii	"ysum\000"
 3331      00
 3332              	.LASF68:
 3333 03e3 636F6C6C 		.ascii	"collect_flag\000"
 3333      6563745F 
 3333      666C6167 
 3333      00
 3334              	.LASF37:
 3335 03f0 72785F69 		.ascii	"rx_interrupt\000"
 3335      6E746572 
 3335      72757074 
 3335      00
 3336              	.LASF59:
 3337 03fd 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3337      52784275 
 3337      66666572 
 3337      00
 3338              	.LASF95:
 3339 040a 53445F53 		.ascii	"SD_SETUP\000"
 3339      45545550 
 3339      00
 3340              	.LASF58:
 3341 0413 73756363 		.ascii	"success\000"
 3341      65737300 
 3342              	.LASF84:
 3343 041b 78617667 		.ascii	"xavg\000"
 3343      00
 3344              	.LASF35:
 3345 0420 53616D70 		.ascii	"Sample_ISR_Handler\000"
 3345      6C655F49 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccQyQpE5.s 			page 74


 3345      53525F48 
 3345      616E646C 
 3345      657200
 3346              	.LASF90:
 3347 0433 66736669 		.ascii	"fsfile\000"
 3347      6C6500
 3348              	.LASF46:
 3349 043a 6C616E64 		.ascii	"landedbuf\000"
 3349      65646275 
 3349      6600
 3350              	.LASF70:
 3351 0444 77616974 		.ascii	"wait_flag\000"
 3351      5F666C61 
 3351      6700
 3352              	.LASF2:
 3353 044e 5F5F7569 		.ascii	"__uint8_t\000"
 3353      6E74385F 
 3353      7400
 3354              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
