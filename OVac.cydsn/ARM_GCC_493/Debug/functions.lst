ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"functions.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	accelData,10,4
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 25642025 		.ascii	"%d %d %d     \000"
  22      64202564 
  22      20202020 
  22      2000
  23              		.section	.text.I2C_LCD_print,"ax",%progbits
  24              		.align	2
  25              		.global	I2C_LCD_print
  26              		.thumb
  27              		.thumb_func
  28              		.type	I2C_LCD_print, %function
  29              	I2C_LCD_print:
  30              	.LFB63:
  31              		.file 1 "functions.c"
   1:functions.c   **** /* ========================================
   2:functions.c   ****  *
   3:functions.c   ****  * Copyright YOUR COMPANY, THE YEAR
   4:functions.c   ****  * All Rights Reserved
   5:functions.c   ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:functions.c   ****  *
   7:functions.c   ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:functions.c   ****  * WHICH IS THE PROPERTY OF your company.
   9:functions.c   ****  *
  10:functions.c   ****  * ========================================
  11:functions.c   **** */
  12:functions.c   **** #include <stdint.h>
  13:functions.c   **** #include <stdio.h>
  14:functions.c   **** #include <math.h>
  15:functions.c   **** #include "functions.h"
  16:functions.c   **** #include "LiquidCrystal_I2C.h"
  17:functions.c   **** 
  18:functions.c   **** char accelData[10];
  19:functions.c   **** 
  20:functions.c   **** void I2C_LCD_print(uint8_t row, uint8_t column, uint16_t ax, uint16_t ay,uint16_t az){
  32              		.loc 1 20 0
  33              		.cfi_startproc
  34              		@ args = 4, pretend = 0, frame = 8
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 2


  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 90B5     		push	{r4, r7, lr}
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 85B0     		sub	sp, sp, #20
  42              		.cfi_def_cfa_offset 32
  43 0004 02AF     		add	r7, sp, #8
  44              		.cfi_def_cfa 7, 24
  45 0006 0446     		mov	r4, r0
  46 0008 0846     		mov	r0, r1
  47 000a 1146     		mov	r1, r2
  48 000c 1A46     		mov	r2, r3
  49 000e 2346     		mov	r3, r4
  50 0010 FB71     		strb	r3, [r7, #7]
  51 0012 0346     		mov	r3, r0
  52 0014 BB71     		strb	r3, [r7, #6]
  53 0016 0B46     		mov	r3, r1	@ movhi
  54 0018 BB80     		strh	r3, [r7, #4]	@ movhi
  55 001a 1346     		mov	r3, r2	@ movhi
  56 001c 7B80     		strh	r3, [r7, #2]	@ movhi
  21:functions.c   ****     sprintf(accelData,"%d %d %d     ",ax,ay,az); 
  57              		.loc 1 21 0
  58 001e BA88     		ldrh	r2, [r7, #4]
  59 0020 7C88     		ldrh	r4, [r7, #2]
  60 0022 3B8B     		ldrh	r3, [r7, #24]
  61 0024 0093     		str	r3, [sp]
  62 0026 0848     		ldr	r0, .L2
  63 0028 0849     		ldr	r1, .L2+4
  64 002a 2346     		mov	r3, r4
  65 002c FFF7FEFF 		bl	sprintf
  22:functions.c   ****     //clear();
  23:functions.c   ****     setCursor(column,row);
  66              		.loc 1 23 0
  67 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  68 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  69 0034 1046     		mov	r0, r2
  70 0036 1946     		mov	r1, r3
  71 0038 FFF7FEFF 		bl	setCursor
  24:functions.c   ****     LCD_print(accelData);
  72              		.loc 1 24 0
  73 003c 0248     		ldr	r0, .L2
  74 003e FFF7FEFF 		bl	LCD_print
  25:functions.c   **** }
  75              		.loc 1 25 0
  76 0042 0C37     		adds	r7, r7, #12
  77              		.cfi_def_cfa_offset 12
  78 0044 BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 0046 90BD     		pop	{r4, r7, pc}
  82              	.L3:
  83              		.align	2
  84              	.L2:
  85 0048 00000000 		.word	accelData
  86 004c 00000000 		.word	.LC0
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 3


  87              		.cfi_endproc
  88              	.LFE63:
  89              		.size	I2C_LCD_print, .-I2C_LCD_print
  90              		.global	__aeabi_i2f
  91              		.global	__aeabi_fdiv
  92              		.global	__aeabi_fsub
  93              		.global	__aeabi_fadd
  94              		.section	.text.ComputeMA,"ax",%progbits
  95              		.align	2
  96              		.global	ComputeMA
  97              		.thumb
  98              		.thumb_func
  99              		.type	ComputeMA, %function
 100              	ComputeMA:
 101              	.LFB64:
  26:functions.c   **** 
  27:functions.c   **** float ComputeMA(float avg, int16_t n, float sample){
 102              		.loc 1 27 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 16
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 84B0     		sub	sp, sp, #16
 111              		.cfi_def_cfa_offset 24
 112 0004 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 114 0006 F860     		str	r0, [r7, #12]	@ float
 115 0008 0B46     		mov	r3, r1
 116 000a 7A60     		str	r2, [r7, #4]	@ float
 117 000c 7B81     		strh	r3, [r7, #10]	@ movhi
  28:functions.c   ****     avg -= avg/n;
 118              		.loc 1 28 0
 119 000e B7F90A30 		ldrsh	r3, [r7, #10]
 120 0012 1846     		mov	r0, r3
 121 0014 FFF7FEFF 		bl	__aeabi_i2f
 122 0018 0346     		mov	r3, r0
 123 001a F868     		ldr	r0, [r7, #12]	@ float
 124 001c 1946     		mov	r1, r3
 125 001e FFF7FEFF 		bl	__aeabi_fdiv
 126 0022 0346     		mov	r3, r0
 127 0024 F868     		ldr	r0, [r7, #12]	@ float
 128 0026 1946     		mov	r1, r3
 129 0028 FFF7FEFF 		bl	__aeabi_fsub
 130 002c 0346     		mov	r3, r0
 131 002e FB60     		str	r3, [r7, #12]	@ float
  29:functions.c   ****     avg += sample/n;
 132              		.loc 1 29 0
 133 0030 B7F90A30 		ldrsh	r3, [r7, #10]
 134 0034 1846     		mov	r0, r3
 135 0036 FFF7FEFF 		bl	__aeabi_i2f
 136 003a 0346     		mov	r3, r0
 137 003c 7868     		ldr	r0, [r7, #4]	@ float
 138 003e 1946     		mov	r1, r3
 139 0040 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 4


 140 0044 0346     		mov	r3, r0
 141 0046 F868     		ldr	r0, [r7, #12]	@ float
 142 0048 1946     		mov	r1, r3
 143 004a FFF7FEFF 		bl	__aeabi_fadd
 144 004e 0346     		mov	r3, r0
 145 0050 FB60     		str	r3, [r7, #12]	@ float
  30:functions.c   ****     return avg;    
 146              		.loc 1 30 0
 147 0052 FB68     		ldr	r3, [r7, #12]	@ float
  31:functions.c   **** }
 148              		.loc 1 31 0
 149 0054 1846     		mov	r0, r3
 150 0056 1037     		adds	r7, r7, #16
 151              		.cfi_def_cfa_offset 8
 152 0058 BD46     		mov	sp, r7
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 005a 80BD     		pop	{r7, pc}
 156              		.cfi_endproc
 157              	.LFE64:
 158              		.size	ComputeMA, .-ComputeMA
 159              		.section	.rodata
 160 000e 0000     		.align	2
 161              	.LC3:
 162 0010 72657365 		.ascii	"reset\000"
 162      7400
 163 0016 0000     		.align	2
 164              	.LC4:
 165 0018 73746172 		.ascii	"start\000"
 165      7400
 166 001e 0000     		.align	2
 167              	.LC5:
 168 0020 643A00   		.ascii	"d:\000"
 169 0023 00       		.align	2
 170              	.LC6:
 171 0024 64617461 		.ascii	"data\000"
 171      00
 172 0029 000000   		.align	2
 173              	.LC1:
 174 002c 0A636F6D 		.ascii	"\012commands: \01205,start\01205,reset\01204,data\012"
 174      6D616E64 
 174      733A200A 
 174      30352C73 
 174      74617274 
 175 0052 30352C64 		.ascii	"05,d:###\000"
 175      3A232323 
 175      00
 176 005b 00       		.align	2
 177              	.LC2:
 178 005c 456E7465 		.ascii	"Enter desired depth:\000"
 178      72206465 
 178      73697265 
 178      64206465 
 178      7074683A 
 179              		.section	.text.BT_Process,"ax",%progbits
 180              		.align	2
 181              		.global	BT_Process
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 5


 182              		.thumb
 183              		.thumb_func
 184              		.type	BT_Process, %function
 185              	BT_Process:
 186              	.LFB65:
  32:functions.c   **** 
  33:functions.c   **** /* Process an incoming message, only for WAIT, TRANSMIT states, or for a reset of the system */
  34:functions.c   **** int BT_Process(char *RxBuffer, STATES *STATE, int bytes, int *flag, int *reset){
 187              		.loc 1 34 0
 188              		.cfi_startproc
 189              		@ args = 4, pretend = 0, frame = 104
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 B0B5     		push	{r4, r5, r7, lr}
 192              		.cfi_def_cfa_offset 16
 193              		.cfi_offset 4, -16
 194              		.cfi_offset 5, -12
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 9AB0     		sub	sp, sp, #104
 198              		.cfi_def_cfa_offset 120
 199 0004 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
 201 0006 F860     		str	r0, [r7, #12]
 202 0008 B960     		str	r1, [r7, #8]
 203 000a 7A60     		str	r2, [r7, #4]
 204 000c 3B60     		str	r3, [r7]
  35:functions.c   ****     int i = 0;
 205              		.loc 1 35 0
 206 000e 0023     		movs	r3, #0
 207 0010 7B66     		str	r3, [r7, #100]
  36:functions.c   ****     int ones = 0, tens = 0, hunds = 0;
 208              		.loc 1 36 0
 209 0012 0023     		movs	r3, #0
 210 0014 3B66     		str	r3, [r7, #96]
 211 0016 0023     		movs	r3, #0
 212 0018 FB65     		str	r3, [r7, #92]
 213 001a 0023     		movs	r3, #0
 214 001c BB65     		str	r3, [r7, #88]
  37:functions.c   ****     char commands[COMMANDS_LEN] = COMMANDS;
 215              		.loc 1 37 0
 216 001e 764B     		ldr	r3, .L28
 217 0020 07F12804 		add	r4, r7, #40
 218 0024 1D46     		mov	r5, r3
 219 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 220 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 221 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 222 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 223 002e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 224 0032 07C4     		stmia	r4!, {r0, r1, r2}
 225 0034 2380     		strh	r3, [r4]	@ movhi
  38:functions.c   ****     char depth[SEND_DEPTH_LEN] = SEND_DEPTH;
 226              		.loc 1 38 0
 227 0036 714B     		ldr	r3, .L28+4
 228 0038 07F11404 		add	r4, r7, #20
 229 003c 1D46     		mov	r5, r3
 230 003e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 231 0040 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 6


 232 0042 2B68     		ldr	r3, [r5]
 233 0044 2360     		str	r3, [r4]
  39:functions.c   ****     
  40:functions.c   ****     if (!strncmp(RxBuffer, "reset", 5)){                      // stop/reset program, go back to WAI
 234              		.loc 1 40 0
 235 0046 F868     		ldr	r0, [r7, #12]
 236 0048 6D49     		ldr	r1, .L28+8
 237 004a 0522     		movs	r2, #5
 238 004c FFF7FEFF 		bl	strncmp
 239 0050 0346     		mov	r3, r0
 240 0052 002B     		cmp	r3, #0
 241 0054 06D1     		bne	.L7
  41:functions.c   ****         *STATE = WAIT_TO_LAUNCH;
 242              		.loc 1 41 0
 243 0056 BB68     		ldr	r3, [r7, #8]
 244 0058 0122     		movs	r2, #1
 245 005a 1A70     		strb	r2, [r3]
  42:functions.c   ****         *reset = 1;
 246              		.loc 1 42 0
 247 005c BB6F     		ldr	r3, [r7, #120]
 248 005e 0122     		movs	r2, #1
 249 0060 1A60     		str	r2, [r3]
 250 0062 A1E0     		b	.L8
 251              	.L7:
  43:functions.c   ****     } else if (*STATE == WAIT_TO_LAUNCH && !strncmp(RxBuffer, "start", 5)){ // start the process, a
 252              		.loc 1 43 0
 253 0064 BB68     		ldr	r3, [r7, #8]
 254 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 255 0068 012B     		cmp	r3, #1
 256 006a 22D1     		bne	.L9
 257              		.loc 1 43 0 is_stmt 0 discriminator 1
 258 006c F868     		ldr	r0, [r7, #12]
 259 006e 6549     		ldr	r1, .L28+12
 260 0070 0522     		movs	r2, #5
 261 0072 FFF7FEFF 		bl	strncmp
 262 0076 0346     		mov	r3, r0
 263 0078 002B     		cmp	r3, #0
 264 007a 1AD1     		bne	.L9
  44:functions.c   ****          *flag = 1;
 265              		.loc 1 44 0 is_stmt 1
 266 007c 3B68     		ldr	r3, [r7]
 267 007e 0122     		movs	r2, #1
 268 0080 1A60     		str	r2, [r3]
  45:functions.c   ****         while (i < SEND_DEPTH_LEN){
 269              		.loc 1 45 0
 270 0082 12E0     		b	.L10
 271              	.L13:
  46:functions.c   ****             while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 272              		.loc 1 46 0
 273 0084 0AE0     		b	.L11
 274              	.L12:
  47:functions.c   ****                 UART_PutChar(depth[i++]);
 275              		.loc 1 47 0
 276 0086 7B6E     		ldr	r3, [r7, #100]
 277 0088 5A1C     		adds	r2, r3, #1
 278 008a 7A66     		str	r2, [r7, #100]
 279 008c 07F16802 		add	r2, r7, #104
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 7


 280 0090 1344     		add	r3, r3, r2
 281 0092 13F8543C 		ldrb	r3, [r3, #-84]	@ zero_extendqisi2
 282 0096 1846     		mov	r0, r3
 283 0098 FFF7FEFF 		bl	UART_PutChar
 284              	.L11:
  46:functions.c   ****             while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 285              		.loc 1 46 0
 286 009c FFF7FEFF 		bl	UART_ReadTxStatus
 287 00a0 0346     		mov	r3, r0
 288 00a2 03F00803 		and	r3, r3, #8
 289 00a6 002B     		cmp	r3, #0
 290 00a8 EDD1     		bne	.L12
 291              	.L10:
  45:functions.c   ****         while (i < SEND_DEPTH_LEN){
 292              		.loc 1 45 0
 293 00aa 7B6E     		ldr	r3, [r7, #100]
 294 00ac 132B     		cmp	r3, #19
 295 00ae E9DD     		ble	.L13
  43:functions.c   ****          *flag = 1;
 296              		.loc 1 43 0
 297 00b0 7AE0     		b	.L8
 298              	.L9:
  48:functions.c   ****         }
  49:functions.c   ****     } else if (*STATE == WAIT_TO_LAUNCH && !strncmp(RxBuffer, "d:", 2)){
 299              		.loc 1 49 0
 300 00b2 BB68     		ldr	r3, [r7, #8]
 301 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00b6 012B     		cmp	r3, #1
 303 00b8 42D1     		bne	.L14
 304              		.loc 1 49 0 is_stmt 0 discriminator 1
 305 00ba F868     		ldr	r0, [r7, #12]
 306 00bc 5249     		ldr	r1, .L28+16
 307 00be 0222     		movs	r2, #2
 308 00c0 FFF7FEFF 		bl	strncmp
 309 00c4 0346     		mov	r3, r0
 310 00c6 002B     		cmp	r3, #0
 311 00c8 3AD1     		bne	.L14
  50:functions.c   ****         hunds = RxBuffer[2] - 48;
 312              		.loc 1 50 0 is_stmt 1
 313 00ca FB68     		ldr	r3, [r7, #12]
 314 00cc 0233     		adds	r3, r3, #2
 315 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 316 00d0 303B     		subs	r3, r3, #48
 317 00d2 BB65     		str	r3, [r7, #88]
  51:functions.c   ****         tens = RxBuffer[3] - 48;
 318              		.loc 1 51 0
 319 00d4 FB68     		ldr	r3, [r7, #12]
 320 00d6 0333     		adds	r3, r3, #3
 321 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 322 00da 303B     		subs	r3, r3, #48
 323 00dc FB65     		str	r3, [r7, #92]
  52:functions.c   ****         ones = RxBuffer[4] - 48;
 324              		.loc 1 52 0
 325 00de FB68     		ldr	r3, [r7, #12]
 326 00e0 0433     		adds	r3, r3, #4
 327 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 00e4 303B     		subs	r3, r3, #48
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 8


 329 00e6 3B66     		str	r3, [r7, #96]
  53:functions.c   ****          
  54:functions.c   ****         if (hunds){ UART_PutChar(RxBuffer[2]); UART_PutChar(RxBuffer[3]);}
 330              		.loc 1 54 0
 331 00e8 BB6D     		ldr	r3, [r7, #88]
 332 00ea 002B     		cmp	r3, #0
 333 00ec 0CD0     		beq	.L15
 334              		.loc 1 54 0 is_stmt 0 discriminator 1
 335 00ee FB68     		ldr	r3, [r7, #12]
 336 00f0 0233     		adds	r3, r3, #2
 337 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 00f4 1846     		mov	r0, r3
 339 00f6 FFF7FEFF 		bl	UART_PutChar
 340 00fa FB68     		ldr	r3, [r7, #12]
 341 00fc 0333     		adds	r3, r3, #3
 342 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 343 0100 1846     		mov	r0, r3
 344 0102 FFF7FEFF 		bl	UART_PutChar
 345 0106 08E0     		b	.L16
 346              	.L15:
  55:functions.c   ****         else if (tens) UART_PutChar(RxBuffer[3]);
 347              		.loc 1 55 0 is_stmt 1
 348 0108 FB6D     		ldr	r3, [r7, #92]
 349 010a 002B     		cmp	r3, #0
 350 010c 05D0     		beq	.L16
 351              		.loc 1 55 0 is_stmt 0 discriminator 1
 352 010e FB68     		ldr	r3, [r7, #12]
 353 0110 0333     		adds	r3, r3, #3
 354 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 355 0114 1846     		mov	r0, r3
 356 0116 FFF7FEFF 		bl	UART_PutChar
 357              	.L16:
  56:functions.c   ****         UART_PutChar(RxBuffer[4]);
 358              		.loc 1 56 0 is_stmt 1
 359 011a FB68     		ldr	r3, [r7, #12]
 360 011c 0433     		adds	r3, r3, #4
 361 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 362 0120 1846     		mov	r0, r3
 363 0122 FFF7FEFF 		bl	UART_PutChar
  57:functions.c   ****         
  58:functions.c   ****         return (hunds * 100) + (tens * 10) + ones;
 364              		.loc 1 58 0
 365 0126 BB6D     		ldr	r3, [r7, #88]
 366 0128 6422     		movs	r2, #100
 367 012a 02FB03F1 		mul	r1, r2, r3
 368 012e FA6D     		ldr	r2, [r7, #92]
 369 0130 1346     		mov	r3, r2
 370 0132 9B00     		lsls	r3, r3, #2
 371 0134 1344     		add	r3, r3, r2
 372 0136 5B00     		lsls	r3, r3, #1
 373 0138 CA18     		adds	r2, r1, r3
 374 013a 3B6E     		ldr	r3, [r7, #96]
 375 013c 1344     		add	r3, r3, r2
 376 013e 57E0     		b	.L27
 377              	.L14:
  59:functions.c   ****     } else if (*STATE == TRANSMIT && !strncmp(RxBuffer, "data", 4)){ // prompt to start sending dat
 378              		.loc 1 59 0
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 9


 379 0140 BB68     		ldr	r3, [r7, #8]
 380 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 0144 052B     		cmp	r3, #5
 382 0146 0BD1     		bne	.L18
 383              		.loc 1 59 0 is_stmt 0 discriminator 1
 384 0148 F868     		ldr	r0, [r7, #12]
 385 014a 3049     		ldr	r1, .L28+20
 386 014c 0422     		movs	r2, #4
 387 014e FFF7FEFF 		bl	strncmp
 388 0152 0346     		mov	r3, r0
 389 0154 002B     		cmp	r3, #0
 390 0156 03D1     		bne	.L18
  60:functions.c   ****         *flag = 1;
 391              		.loc 1 60 0 is_stmt 1
 392 0158 3B68     		ldr	r3, [r7]
 393 015a 0122     		movs	r2, #1
 394 015c 1A60     		str	r2, [r3]
 395 015e 23E0     		b	.L8
 396              	.L18:
  61:functions.c   ****     } else {
  62:functions.c   ****         while (i < COMMANDS_LEN){
 397              		.loc 1 62 0
 398 0160 12E0     		b	.L19
 399              	.L22:
  63:functions.c   ****             while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 400              		.loc 1 63 0
 401 0162 0AE0     		b	.L20
 402              	.L21:
  64:functions.c   ****                 UART_PutChar(commands[i++]);
 403              		.loc 1 64 0
 404 0164 7B6E     		ldr	r3, [r7, #100]
 405 0166 5A1C     		adds	r2, r3, #1
 406 0168 7A66     		str	r2, [r7, #100]
 407 016a 07F16802 		add	r2, r7, #104
 408 016e 1344     		add	r3, r3, r2
 409 0170 13F8403C 		ldrb	r3, [r3, #-64]	@ zero_extendqisi2
 410 0174 1846     		mov	r0, r3
 411 0176 FFF7FEFF 		bl	UART_PutChar
 412              	.L20:
  63:functions.c   ****             while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 413              		.loc 1 63 0
 414 017a FFF7FEFF 		bl	UART_ReadTxStatus
 415 017e 0346     		mov	r3, r0
 416 0180 03F00803 		and	r3, r3, #8
 417 0184 002B     		cmp	r3, #0
 418 0186 EDD1     		bne	.L21
 419              	.L19:
  62:functions.c   ****             while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 420              		.loc 1 62 0
 421 0188 7B6E     		ldr	r3, [r7, #100]
 422 018a 2D2B     		cmp	r3, #45
 423 018c E9DD     		ble	.L22
  65:functions.c   ****         }
  66:functions.c   ****         return (hunds * 100) + (tens * 10) + ones;
 424              		.loc 1 66 0
 425 018e BB6D     		ldr	r3, [r7, #88]
 426 0190 6422     		movs	r2, #100
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 10


 427 0192 02FB03F1 		mul	r1, r2, r3
 428 0196 FA6D     		ldr	r2, [r7, #92]
 429 0198 1346     		mov	r3, r2
 430 019a 9B00     		lsls	r3, r3, #2
 431 019c 1344     		add	r3, r3, r2
 432 019e 5B00     		lsls	r3, r3, #1
 433 01a0 CA18     		adds	r2, r1, r3
 434 01a2 3B6E     		ldr	r3, [r7, #96]
 435 01a4 1344     		add	r3, r3, r2
 436 01a6 23E0     		b	.L27
 437              	.L8:
  67:functions.c   ****     }
  68:functions.c   ****    
  69:functions.c   ****     while (i < bytes + 3){
 438              		.loc 1 69 0 discriminator 1
 439 01a8 11E0     		b	.L23
 440              	.L26:
  70:functions.c   ****         while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 441              		.loc 1 70 0
 442 01aa 09E0     		b	.L24
 443              	.L25:
  71:functions.c   ****             UART_PutChar(RxBuffer[i++]);
 444              		.loc 1 71 0
 445 01ac 7B6E     		ldr	r3, [r7, #100]
 446 01ae 5A1C     		adds	r2, r3, #1
 447 01b0 7A66     		str	r2, [r7, #100]
 448 01b2 1A46     		mov	r2, r3
 449 01b4 FB68     		ldr	r3, [r7, #12]
 450 01b6 1344     		add	r3, r3, r2
 451 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 01ba 1846     		mov	r0, r3
 453 01bc FFF7FEFF 		bl	UART_PutChar
 454              	.L24:
  70:functions.c   ****         while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 455              		.loc 1 70 0
 456 01c0 FFF7FEFF 		bl	UART_ReadTxStatus
 457 01c4 0346     		mov	r3, r0
 458 01c6 03F00803 		and	r3, r3, #8
 459 01ca 002B     		cmp	r3, #0
 460 01cc EED1     		bne	.L25
 461              	.L23:
  69:functions.c   ****         while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 462              		.loc 1 69 0
 463 01ce 7B68     		ldr	r3, [r7, #4]
 464 01d0 DA1C     		adds	r2, r3, #3
 465 01d2 7B6E     		ldr	r3, [r7, #100]
 466 01d4 9A42     		cmp	r2, r3
 467 01d6 E8DC     		bgt	.L26
  72:functions.c   ****     }
  73:functions.c   ****     return (hunds * 100) + (tens * 10) + ones;
 468              		.loc 1 73 0
 469 01d8 BB6D     		ldr	r3, [r7, #88]
 470 01da 6422     		movs	r2, #100
 471 01dc 02FB03F1 		mul	r1, r2, r3
 472 01e0 FA6D     		ldr	r2, [r7, #92]
 473 01e2 1346     		mov	r3, r2
 474 01e4 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 11


 475 01e6 1344     		add	r3, r3, r2
 476 01e8 5B00     		lsls	r3, r3, #1
 477 01ea CA18     		adds	r2, r1, r3
 478 01ec 3B6E     		ldr	r3, [r7, #96]
 479 01ee 1344     		add	r3, r3, r2
 480              	.L27:
  74:functions.c   **** }
 481              		.loc 1 74 0 discriminator 2
 482 01f0 1846     		mov	r0, r3
 483 01f2 6837     		adds	r7, r7, #104
 484              		.cfi_def_cfa_offset 16
 485 01f4 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 01f6 B0BD     		pop	{r4, r5, r7, pc}
 489              	.L29:
 490              		.align	2
 491              	.L28:
 492 01f8 2C000000 		.word	.LC1
 493 01fc 5C000000 		.word	.LC2
 494 0200 10000000 		.word	.LC3
 495 0204 18000000 		.word	.LC4
 496 0208 20000000 		.word	.LC5
 497 020c 24000000 		.word	.LC6
 498              		.cfi_endproc
 499              	.LFE65:
 500              		.size	BT_Process, .-BT_Process
 501              		.section	.rodata
 502 0071 000000   		.align	2
 503              	.LC7:
 504 0074 53544154 		.ascii	"STATE: WAIT_TO_LAUNCH\012\000"
 504      453A2057 
 504      4149545F 
 504      544F5F4C 
 504      41554E43 
 505 008b 00       		.space	1
 506              		.align	2
 507              	.LC8:
 508 008c 5472616E 		.ascii	"Transmitting data\012\000"
 508      736D6974 
 508      74696E67 
 508      20646174 
 508      610A00
 509 009f 00       		.section	.text.BT_Send,"ax",%progbits
 510              		.align	2
 511              		.global	BT_Send
 512              		.thumb
 513              		.thumb_func
 514              		.type	BT_Send, %function
 515              	BT_Send:
 516              	.LFB66:
  75:functions.c   **** 
  76:functions.c   **** /* For sending status of State, or data back in transmit state */
  77:functions.c   **** void BT_Send(char *TxBuffer, STATES *STATE, int lengthOfBuf, int *firstPacket){
 517              		.loc 1 77 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 64
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 12


 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 B0B5     		push	{r4, r5, r7, lr}
 522              		.cfi_def_cfa_offset 16
 523              		.cfi_offset 4, -16
 524              		.cfi_offset 5, -12
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 90B0     		sub	sp, sp, #64
 528              		.cfi_def_cfa_offset 80
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 F860     		str	r0, [r7, #12]
 532 0008 B960     		str	r1, [r7, #8]
 533 000a 7A60     		str	r2, [r7, #4]
 534 000c 3B60     		str	r3, [r7]
  78:functions.c   ****     int i = 0;
 535              		.loc 1 78 0
 536 000e 0023     		movs	r3, #0
 537 0010 FB63     		str	r3, [r7, #60]
  79:functions.c   ****     uint8 waitstate[WAITING_LEN] = STATE_WAITING;
 538              		.loc 1 79 0
 539 0012 2E4B     		ldr	r3, .L42
 540 0014 07F12404 		add	r4, r7, #36
 541 0018 1D46     		mov	r5, r3
 542 001a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 543 001c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 544 001e 95E80300 		ldmia	r5, {r0, r1}
 545 0022 2060     		str	r0, [r4]
 546 0024 0434     		adds	r4, r4, #4
 547 0026 2180     		strh	r1, [r4]	@ movhi
 548 0028 0234     		adds	r4, r4, #2
 549 002a 0B0C     		lsrs	r3, r1, #16
 550 002c 2370     		strb	r3, [r4]
 551 002e 0023     		movs	r3, #0
 552 0030 87F83B30 		strb	r3, [r7, #59]
  80:functions.c   ****     uint8 transtate[TRANSMITTING_LEN] = TRANSMITTING;
 553              		.loc 1 80 0
 554 0034 264B     		ldr	r3, .L42+4
 555 0036 07F11004 		add	r4, r7, #16
 556 003a 1D46     		mov	r5, r3
 557 003c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 558 003e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 559 0040 2B68     		ldr	r3, [r5]
 560 0042 2380     		strh	r3, [r4]	@ movhi
  81:functions.c   ****     
  82:functions.c   ****     if (*STATE == WAIT_TO_LAUNCH){                  // Just send STATE back to indicate
 561              		.loc 1 82 0
 562 0044 BB68     		ldr	r3, [r7, #8]
 563 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 564 0048 012B     		cmp	r3, #1
 565 004a 17D1     		bne	.L31
  83:functions.c   ****         while (i < WAITING_LEN - 1){
 566              		.loc 1 83 0
 567 004c 12E0     		b	.L32
 568              	.L35:
  84:functions.c   ****             while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 569              		.loc 1 84 0
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 13


 570 004e 0AE0     		b	.L33
 571              	.L34:
  85:functions.c   ****                 UART_PutChar(waitstate[i++]);
 572              		.loc 1 85 0
 573 0050 FB6B     		ldr	r3, [r7, #60]
 574 0052 5A1C     		adds	r2, r3, #1
 575 0054 FA63     		str	r2, [r7, #60]
 576 0056 07F14002 		add	r2, r7, #64
 577 005a 1344     		add	r3, r3, r2
 578 005c 13F81C3C 		ldrb	r3, [r3, #-28]	@ zero_extendqisi2
 579 0060 1846     		mov	r0, r3
 580 0062 FFF7FEFF 		bl	UART_PutChar
 581              	.L33:
  84:functions.c   ****             while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 582              		.loc 1 84 0
 583 0066 FFF7FEFF 		bl	UART_ReadTxStatus
 584 006a 0346     		mov	r3, r0
 585 006c 03F00803 		and	r3, r3, #8
 586 0070 002B     		cmp	r3, #0
 587 0072 EDD1     		bne	.L34
 588              	.L32:
  83:functions.c   ****         while (i < WAITING_LEN - 1){
 589              		.loc 1 83 0
 590 0074 FB6B     		ldr	r3, [r7, #60]
 591 0076 162B     		cmp	r3, #22
 592 0078 E9DD     		ble	.L35
 593 007a 23E0     		b	.L30
 594              	.L31:
  86:functions.c   ****         }
  87:functions.c   ****     }
  88:functions.c   ****     else if (*STATE == TRANSMIT){                   // Send STATE back then data from buffer
 595              		.loc 1 88 0
 596 007c BB68     		ldr	r3, [r7, #8]
 597 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598 0080 052B     		cmp	r3, #5
 599 0082 1FD1     		bne	.L30
  89:functions.c   ****         if (*firstPacket){                          // only send STATE once
 600              		.loc 1 89 0
 601 0084 3B68     		ldr	r3, [r7]
 602 0086 1B68     		ldr	r3, [r3]
 603 0088 002B     		cmp	r3, #0
 604 008a 19D0     		beq	.L37
  90:functions.c   ****             while (i < TRANSMITTING_LEN - 1){
 605              		.loc 1 90 0
 606 008c 12E0     		b	.L38
 607              	.L41:
  91:functions.c   ****                 while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 608              		.loc 1 91 0
 609 008e 0AE0     		b	.L39
 610              	.L40:
  92:functions.c   ****                     UART_PutChar(transtate[i++]);
 611              		.loc 1 92 0
 612 0090 FB6B     		ldr	r3, [r7, #60]
 613 0092 5A1C     		adds	r2, r3, #1
 614 0094 FA63     		str	r2, [r7, #60]
 615 0096 07F14002 		add	r2, r7, #64
 616 009a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 14


 617 009c 13F8303C 		ldrb	r3, [r3, #-48]	@ zero_extendqisi2
 618 00a0 1846     		mov	r0, r3
 619 00a2 FFF7FEFF 		bl	UART_PutChar
 620              	.L39:
  91:functions.c   ****                 while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
 621              		.loc 1 91 0
 622 00a6 FFF7FEFF 		bl	UART_ReadTxStatus
 623 00aa 0346     		mov	r3, r0
 624 00ac 03F00803 		and	r3, r3, #8
 625 00b0 002B     		cmp	r3, #0
 626 00b2 EDD1     		bne	.L40
 627              	.L38:
  90:functions.c   ****             while (i < TRANSMITTING_LEN - 1){
 628              		.loc 1 90 0
 629 00b4 FB6B     		ldr	r3, [r7, #60]
 630 00b6 102B     		cmp	r3, #16
 631 00b8 E9DD     		ble	.L41
  93:functions.c   ****             }
  94:functions.c   ****             *firstPacket = 0;
 632              		.loc 1 94 0
 633 00ba 3B68     		ldr	r3, [r7]
 634 00bc 0022     		movs	r2, #0
 635 00be 1A60     		str	r2, [r3]
 636              	.L37:
  95:functions.c   ****         } i = 0;
 637              		.loc 1 95 0
 638 00c0 0023     		movs	r3, #0
 639 00c2 FB63     		str	r3, [r7, #60]
 640              	.L30:
  96:functions.c   **** //        while (i < lengthOfBuf - 1){                // Send buffer 
  97:functions.c   **** //            while(UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL)
  98:functions.c   **** //                UART_PutChar(TxBuffer[i++]);
  99:functions.c   **** //        }
 100:functions.c   ****     }
 101:functions.c   **** }
 641              		.loc 1 101 0
 642 00c4 4037     		adds	r7, r7, #64
 643              		.cfi_def_cfa_offset 16
 644 00c6 BD46     		mov	sp, r7
 645              		.cfi_def_cfa_register 13
 646              		@ sp needed
 647 00c8 B0BD     		pop	{r4, r5, r7, pc}
 648              	.L43:
 649 00ca 00BF     		.align	2
 650              	.L42:
 651 00cc 74000000 		.word	.LC7
 652 00d0 8C000000 		.word	.LC8
 653              		.cfi_endproc
 654              	.LFE66:
 655              		.size	BT_Send, .-BT_Send
 656              		.section	.text.uint8_to_char,"ax",%progbits
 657              		.align	2
 658              		.global	uint8_to_char
 659              		.thumb
 660              		.thumb_func
 661              		.type	uint8_to_char, %function
 662              	uint8_to_char:
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 15


 663              	.LFB67:
 102:functions.c   **** 
 103:functions.c   **** /* Convert uint8 array to chars, for type warnings/errors in above functions*/
 104:functions.c   **** void uint8_to_char(uint8_t a[], char *b, int len){
 664              		.loc 1 104 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 32
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              		.cfi_def_cfa_offset 4
 671              		.cfi_offset 7, -4
 672 0002 89B0     		sub	sp, sp, #36
 673              		.cfi_def_cfa_offset 40
 674 0004 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
 676 0006 F860     		str	r0, [r7, #12]
 677 0008 B960     		str	r1, [r7, #8]
 678 000a 7A60     		str	r2, [r7, #4]
 105:functions.c   ****     int i = 0, j = 0, good_msg = 0;
 679              		.loc 1 105 0
 680 000c 0023     		movs	r3, #0
 681 000e FB61     		str	r3, [r7, #28]
 682 0010 0023     		movs	r3, #0
 683 0012 BB61     		str	r3, [r7, #24]
 684 0014 0023     		movs	r3, #0
 685 0016 7B61     		str	r3, [r7, #20]
 106:functions.c   ****     for (;i < len; i++){
 686              		.loc 1 106 0
 687 0018 18E0     		b	.L45
 688              	.L48:
 107:functions.c   ****         if ((char)a[i] == '0') good_msg = 1;
 689              		.loc 1 107 0
 690 001a FB69     		ldr	r3, [r7, #28]
 691 001c FA68     		ldr	r2, [r7, #12]
 692 001e 1344     		add	r3, r3, r2
 693 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 694 0022 302B     		cmp	r3, #48
 695 0024 01D1     		bne	.L46
 696              		.loc 1 107 0 is_stmt 0 discriminator 1
 697 0026 0123     		movs	r3, #1
 698 0028 7B61     		str	r3, [r7, #20]
 699              	.L46:
 108:functions.c   ****         if (good_msg)
 700              		.loc 1 108 0 is_stmt 1
 701 002a 7B69     		ldr	r3, [r7, #20]
 702 002c 002B     		cmp	r3, #0
 703 002e 0AD0     		beq	.L47
 109:functions.c   ****             b[j++] = (char)a[i];
 704              		.loc 1 109 0
 705 0030 BB69     		ldr	r3, [r7, #24]
 706 0032 5A1C     		adds	r2, r3, #1
 707 0034 BA61     		str	r2, [r7, #24]
 708 0036 1A46     		mov	r2, r3
 709 0038 BB68     		ldr	r3, [r7, #8]
 710 003a 1344     		add	r3, r3, r2
 711 003c FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 16


 712 003e F968     		ldr	r1, [r7, #12]
 713 0040 0A44     		add	r2, r2, r1
 714 0042 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 715 0044 1A70     		strb	r2, [r3]
 716              	.L47:
 106:functions.c   ****         if ((char)a[i] == '0') good_msg = 1;
 717              		.loc 1 106 0
 718 0046 FB69     		ldr	r3, [r7, #28]
 719 0048 0133     		adds	r3, r3, #1
 720 004a FB61     		str	r3, [r7, #28]
 721              	.L45:
 106:functions.c   ****         if ((char)a[i] == '0') good_msg = 1;
 722              		.loc 1 106 0 is_stmt 0 discriminator 1
 723 004c FA69     		ldr	r2, [r7, #28]
 724 004e 7B68     		ldr	r3, [r7, #4]
 725 0050 9A42     		cmp	r2, r3
 726 0052 E2DB     		blt	.L48
 110:functions.c   ****     }
 111:functions.c   **** }
 727              		.loc 1 111 0 is_stmt 1
 728 0054 2437     		adds	r7, r7, #36
 729              		.cfi_def_cfa_offset 4
 730 0056 BD46     		mov	sp, r7
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
 733 0058 5DF8047B 		ldr	r7, [sp], #4
 734              		.cfi_restore 7
 735              		.cfi_def_cfa_offset 0
 736 005c 7047     		bx	lr
 737              		.cfi_endproc
 738              	.LFE67:
 739              		.size	uint8_to_char, .-uint8_to_char
 740 005e 00BF     		.text
 741              	.Letext0:
 742              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 743              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 744              		.file 4 "functions.h"
 745              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 746              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 747              		.section	.debug_info,"",%progbits
 748              	.Ldebug_info0:
 749 0000 EA030000 		.4byte	0x3ea
 750 0004 0400     		.2byte	0x4
 751 0006 00000000 		.4byte	.Ldebug_abbrev0
 752 000a 04       		.byte	0x4
 753 000b 01       		.uleb128 0x1
 754 000c ED000000 		.4byte	.LASF56
 755 0010 01       		.byte	0x1
 756 0011 A2020000 		.4byte	.LASF57
 757 0015 F6010000 		.4byte	.LASF58
 758 0019 00000000 		.4byte	.Ldebug_ranges0+0
 759 001d 00000000 		.4byte	0
 760 0021 00000000 		.4byte	.Ldebug_line0
 761 0025 02       		.uleb128 0x2
 762 0026 01       		.byte	0x1
 763 0027 06       		.byte	0x6
 764 0028 AF010000 		.4byte	.LASF0
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 17


 765 002c 03       		.uleb128 0x3
 766 002d 85010000 		.4byte	.LASF2
 767 0031 02       		.byte	0x2
 768 0032 1D       		.byte	0x1d
 769 0033 37000000 		.4byte	0x37
 770 0037 02       		.uleb128 0x2
 771 0038 01       		.byte	0x1
 772 0039 08       		.byte	0x8
 773 003a A1010000 		.4byte	.LASF1
 774 003e 03       		.uleb128 0x3
 775 003f CB020000 		.4byte	.LASF3
 776 0043 02       		.byte	0x2
 777 0044 29       		.byte	0x29
 778 0045 49000000 		.4byte	0x49
 779 0049 02       		.uleb128 0x2
 780 004a 02       		.byte	0x2
 781 004b 05       		.byte	0x5
 782 004c 70000000 		.4byte	.LASF4
 783 0050 03       		.uleb128 0x3
 784 0051 97000000 		.4byte	.LASF5
 785 0055 02       		.byte	0x2
 786 0056 2B       		.byte	0x2b
 787 0057 5B000000 		.4byte	0x5b
 788 005b 02       		.uleb128 0x2
 789 005c 02       		.byte	0x2
 790 005d 07       		.byte	0x7
 791 005e 3D020000 		.4byte	.LASF6
 792 0062 03       		.uleb128 0x3
 793 0063 C1020000 		.4byte	.LASF7
 794 0067 02       		.byte	0x2
 795 0068 3F       		.byte	0x3f
 796 0069 6D000000 		.4byte	0x6d
 797 006d 02       		.uleb128 0x2
 798 006e 04       		.byte	0x4
 799 006f 05       		.byte	0x5
 800 0070 2C020000 		.4byte	.LASF8
 801 0074 02       		.uleb128 0x2
 802 0075 04       		.byte	0x4
 803 0076 07       		.byte	0x7
 804 0077 79020000 		.4byte	.LASF9
 805 007b 02       		.uleb128 0x2
 806 007c 08       		.byte	0x8
 807 007d 05       		.byte	0x5
 808 007e CF000000 		.4byte	.LASF10
 809 0082 02       		.uleb128 0x2
 810 0083 08       		.byte	0x8
 811 0084 07       		.byte	0x7
 812 0085 C9010000 		.4byte	.LASF11
 813 0089 04       		.uleb128 0x4
 814 008a 04       		.byte	0x4
 815 008b 05       		.byte	0x5
 816 008c 696E7400 		.ascii	"int\000"
 817 0090 02       		.uleb128 0x2
 818 0091 04       		.byte	0x4
 819 0092 07       		.byte	0x7
 820 0093 E0010000 		.4byte	.LASF12
 821 0097 03       		.uleb128 0x3
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 18


 822 0098 A2000000 		.4byte	.LASF13
 823 009c 03       		.byte	0x3
 824 009d 15       		.byte	0x15
 825 009e 2C000000 		.4byte	0x2c
 826 00a2 03       		.uleb128 0x3
 827 00a3 50020000 		.4byte	.LASF14
 828 00a7 03       		.byte	0x3
 829 00a8 20       		.byte	0x20
 830 00a9 3E000000 		.4byte	0x3e
 831 00ad 03       		.uleb128 0x3
 832 00ae ED010000 		.4byte	.LASF15
 833 00b2 03       		.byte	0x3
 834 00b3 21       		.byte	0x21
 835 00b4 50000000 		.4byte	0x50
 836 00b8 03       		.uleb128 0x3
 837 00b9 35020000 		.4byte	.LASF16
 838 00bd 03       		.byte	0x3
 839 00be 2C       		.byte	0x2c
 840 00bf 62000000 		.4byte	0x62
 841 00c3 02       		.uleb128 0x2
 842 00c4 04       		.byte	0x4
 843 00c5 07       		.byte	0x7
 844 00c6 7A000000 		.4byte	.LASF17
 845 00ca 05       		.uleb128 0x5
 846 00cb 04       		.byte	0x4
 847 00cc D0000000 		.4byte	0xd0
 848 00d0 02       		.uleb128 0x2
 849 00d1 01       		.byte	0x1
 850 00d2 08       		.byte	0x8
 851 00d3 27020000 		.4byte	.LASF18
 852 00d7 02       		.uleb128 0x2
 853 00d8 08       		.byte	0x8
 854 00d9 04       		.byte	0x4
 855 00da 91020000 		.4byte	.LASF19
 856 00de 02       		.uleb128 0x2
 857 00df 04       		.byte	0x4
 858 00e0 04       		.byte	0x4
 859 00e1 C9000000 		.4byte	.LASF20
 860 00e5 02       		.uleb128 0x2
 861 00e6 08       		.byte	0x8
 862 00e7 04       		.byte	0x4
 863 00e8 95010000 		.4byte	.LASF21
 864 00ec 06       		.uleb128 0x6
 865 00ed 5E000000 		.4byte	.LASF29
 866 00f1 01       		.byte	0x1
 867 00f2 04       		.byte	0x4
 868 00f3 35       		.byte	0x35
 869 00f4 23010000 		.4byte	0x123
 870 00f8 07       		.uleb128 0x7
 871 00f9 4B000000 		.4byte	.LASF22
 872 00fd 00       		.sleb128 0
 873 00fe 07       		.uleb128 0x7
 874 00ff 00000000 		.4byte	.LASF23
 875 0103 01       		.sleb128 1
 876 0104 07       		.uleb128 0x7
 877 0105 37000000 		.4byte	.LASF24
 878 0109 02       		.sleb128 2
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 19


 879 010a 07       		.uleb128 0x7
 880 010b 88000000 		.4byte	.LASF25
 881 010f 03       		.sleb128 3
 882 0110 07       		.uleb128 0x7
 883 0111 1D000000 		.4byte	.LASF26
 884 0115 04       		.sleb128 4
 885 0116 07       		.uleb128 0x7
 886 0117 E4000000 		.4byte	.LASF27
 887 011b 05       		.sleb128 5
 888 011c 07       		.uleb128 0x7
 889 011d 8F010000 		.4byte	.LASF28
 890 0121 06       		.sleb128 6
 891 0122 00       		.byte	0
 892 0123 03       		.uleb128 0x3
 893 0124 5E000000 		.4byte	.LASF29
 894 0128 04       		.byte	0x4
 895 0129 3D       		.byte	0x3d
 896 012a EC000000 		.4byte	0xec
 897 012e 08       		.uleb128 0x8
 898 012f 58020000 		.4byte	.LASF30
 899 0133 05       		.byte	0x5
 900 0134 9201     		.2byte	0x192
 901 0136 37000000 		.4byte	0x37
 902 013a 09       		.uleb128 0x9
 903 013b BB010000 		.4byte	.LASF45
 904 013f 01       		.byte	0x1
 905 0140 14       		.byte	0x14
 906 0141 00000000 		.4byte	.LFB63
 907 0145 50000000 		.4byte	.LFE63-.LFB63
 908 0149 01       		.uleb128 0x1
 909 014a 9C       		.byte	0x9c
 910 014b 93010000 		.4byte	0x193
 911 014f 0A       		.uleb128 0xa
 912 0150 726F7700 		.ascii	"row\000"
 913 0154 01       		.byte	0x1
 914 0155 14       		.byte	0x14
 915 0156 97000000 		.4byte	0x97
 916 015a 02       		.uleb128 0x2
 917 015b 91       		.byte	0x91
 918 015c 6F       		.sleb128 -17
 919 015d 0B       		.uleb128 0xb
 920 015e 30000000 		.4byte	.LASF31
 921 0162 01       		.byte	0x1
 922 0163 14       		.byte	0x14
 923 0164 97000000 		.4byte	0x97
 924 0168 02       		.uleb128 0x2
 925 0169 91       		.byte	0x91
 926 016a 6E       		.sleb128 -18
 927 016b 0A       		.uleb128 0xa
 928 016c 617800   		.ascii	"ax\000"
 929 016f 01       		.byte	0x1
 930 0170 14       		.byte	0x14
 931 0171 AD000000 		.4byte	0xad
 932 0175 02       		.uleb128 0x2
 933 0176 91       		.byte	0x91
 934 0177 6C       		.sleb128 -20
 935 0178 0A       		.uleb128 0xa
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 20


 936 0179 617900   		.ascii	"ay\000"
 937 017c 01       		.byte	0x1
 938 017d 14       		.byte	0x14
 939 017e AD000000 		.4byte	0xad
 940 0182 02       		.uleb128 0x2
 941 0183 91       		.byte	0x91
 942 0184 6A       		.sleb128 -22
 943 0185 0A       		.uleb128 0xa
 944 0186 617A00   		.ascii	"az\000"
 945 0189 01       		.byte	0x1
 946 018a 14       		.byte	0x14
 947 018b AD000000 		.4byte	0xad
 948 018f 02       		.uleb128 0x2
 949 0190 91       		.byte	0x91
 950 0191 00       		.sleb128 0
 951 0192 00       		.byte	0
 952 0193 0C       		.uleb128 0xc
 953 0194 AA000000 		.4byte	.LASF33
 954 0198 01       		.byte	0x1
 955 0199 1B       		.byte	0x1b
 956 019a DE000000 		.4byte	0xde
 957 019e 00000000 		.4byte	.LFB64
 958 01a2 5C000000 		.4byte	.LFE64-.LFB64
 959 01a6 01       		.uleb128 0x1
 960 01a7 9C       		.byte	0x9c
 961 01a8 D5010000 		.4byte	0x1d5
 962 01ac 0A       		.uleb128 0xa
 963 01ad 61766700 		.ascii	"avg\000"
 964 01b1 01       		.byte	0x1
 965 01b2 1B       		.byte	0x1b
 966 01b3 DE000000 		.4byte	0xde
 967 01b7 02       		.uleb128 0x2
 968 01b8 91       		.byte	0x91
 969 01b9 74       		.sleb128 -12
 970 01ba 0A       		.uleb128 0xa
 971 01bb 6E00     		.ascii	"n\000"
 972 01bd 01       		.byte	0x1
 973 01be 1B       		.byte	0x1b
 974 01bf A2000000 		.4byte	0xa2
 975 01c3 02       		.uleb128 0x2
 976 01c4 91       		.byte	0x91
 977 01c5 72       		.sleb128 -14
 978 01c6 0B       		.uleb128 0xb
 979 01c7 DD000000 		.4byte	.LASF32
 980 01cb 01       		.byte	0x1
 981 01cc 1B       		.byte	0x1b
 982 01cd DE000000 		.4byte	0xde
 983 01d1 02       		.uleb128 0x2
 984 01d2 91       		.byte	0x91
 985 01d3 6C       		.sleb128 -20
 986 01d4 00       		.byte	0
 987 01d5 0C       		.uleb128 0xc
 988 01d6 65000000 		.4byte	.LASF34
 989 01da 01       		.byte	0x1
 990 01db 22       		.byte	0x22
 991 01dc 89000000 		.4byte	0x89
 992 01e0 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 21


 993 01e4 10020000 		.4byte	.LFE65-.LFB65
 994 01e8 01       		.uleb128 0x1
 995 01e9 9C       		.byte	0x9c
 996 01ea 8D020000 		.4byte	0x28d
 997 01ee 0B       		.uleb128 0xb
 998 01ef 42000000 		.4byte	.LASF35
 999 01f3 01       		.byte	0x1
 1000 01f4 22       		.byte	0x22
 1001 01f5 CA000000 		.4byte	0xca
 1002 01f9 03       		.uleb128 0x3
 1003 01fa 91       		.byte	0x91
 1004 01fb 947F     		.sleb128 -108
 1005 01fd 0B       		.uleb128 0xb
 1006 01fe D5020000 		.4byte	.LASF36
 1007 0202 01       		.byte	0x1
 1008 0203 22       		.byte	0x22
 1009 0204 8D020000 		.4byte	0x28d
 1010 0208 03       		.uleb128 0x3
 1011 0209 91       		.byte	0x91
 1012 020a 907F     		.sleb128 -112
 1013 020c 0B       		.uleb128 0xb
 1014 020d 8B020000 		.4byte	.LASF37
 1015 0211 01       		.byte	0x1
 1016 0212 22       		.byte	0x22
 1017 0213 89000000 		.4byte	0x89
 1018 0217 03       		.uleb128 0x3
 1019 0218 91       		.byte	0x91
 1020 0219 8C7F     		.sleb128 -116
 1021 021b 0B       		.uleb128 0xb
 1022 021c E0020000 		.4byte	.LASF38
 1023 0220 01       		.byte	0x1
 1024 0221 22       		.byte	0x22
 1025 0222 93020000 		.4byte	0x293
 1026 0226 03       		.uleb128 0x3
 1027 0227 91       		.byte	0x91
 1028 0228 887F     		.sleb128 -120
 1029 022a 0B       		.uleb128 0xb
 1030 022b BB020000 		.4byte	.LASF39
 1031 022f 01       		.byte	0x1
 1032 0230 22       		.byte	0x22
 1033 0231 93020000 		.4byte	0x293
 1034 0235 02       		.uleb128 0x2
 1035 0236 91       		.byte	0x91
 1036 0237 00       		.sleb128 0
 1037 0238 0D       		.uleb128 0xd
 1038 0239 6900     		.ascii	"i\000"
 1039 023b 01       		.byte	0x1
 1040 023c 23       		.byte	0x23
 1041 023d 89000000 		.4byte	0x89
 1042 0241 02       		.uleb128 0x2
 1043 0242 91       		.byte	0x91
 1044 0243 6C       		.sleb128 -20
 1045 0244 0E       		.uleb128 0xe
 1046 0245 83000000 		.4byte	.LASF40
 1047 0249 01       		.byte	0x1
 1048 024a 24       		.byte	0x24
 1049 024b 89000000 		.4byte	0x89
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 22


 1050 024f 02       		.uleb128 0x2
 1051 0250 91       		.byte	0x91
 1052 0251 68       		.sleb128 -24
 1053 0252 0E       		.uleb128 0xe
 1054 0253 DB020000 		.4byte	.LASF41
 1055 0257 01       		.byte	0x1
 1056 0258 24       		.byte	0x24
 1057 0259 89000000 		.4byte	0x89
 1058 025d 02       		.uleb128 0x2
 1059 025e 91       		.byte	0x91
 1060 025f 64       		.sleb128 -28
 1061 0260 0E       		.uleb128 0xe
 1062 0261 58000000 		.4byte	.LASF42
 1063 0265 01       		.byte	0x1
 1064 0266 24       		.byte	0x24
 1065 0267 89000000 		.4byte	0x89
 1066 026b 02       		.uleb128 0x2
 1067 026c 91       		.byte	0x91
 1068 026d 60       		.sleb128 -32
 1069 026e 0E       		.uleb128 0xe
 1070 026f 27000000 		.4byte	.LASF43
 1071 0273 01       		.byte	0x1
 1072 0274 25       		.byte	0x25
 1073 0275 99020000 		.4byte	0x299
 1074 0279 03       		.uleb128 0x3
 1075 027a 91       		.byte	0x91
 1076 027b B07F     		.sleb128 -80
 1077 027d 0E       		.uleb128 0xe
 1078 027e 6A020000 		.4byte	.LASF44
 1079 0282 01       		.byte	0x1
 1080 0283 26       		.byte	0x26
 1081 0284 A9020000 		.4byte	0x2a9
 1082 0288 03       		.uleb128 0x3
 1083 0289 91       		.byte	0x91
 1084 028a 9C7F     		.sleb128 -100
 1085 028c 00       		.byte	0
 1086 028d 05       		.uleb128 0x5
 1087 028e 04       		.byte	0x4
 1088 028f 23010000 		.4byte	0x123
 1089 0293 05       		.uleb128 0x5
 1090 0294 04       		.byte	0x4
 1091 0295 89000000 		.4byte	0x89
 1092 0299 0F       		.uleb128 0xf
 1093 029a D0000000 		.4byte	0xd0
 1094 029e A9020000 		.4byte	0x2a9
 1095 02a2 10       		.uleb128 0x10
 1096 02a3 C3000000 		.4byte	0xc3
 1097 02a7 2D       		.byte	0x2d
 1098 02a8 00       		.byte	0
 1099 02a9 0F       		.uleb128 0xf
 1100 02aa D0000000 		.4byte	0xd0
 1101 02ae B9020000 		.4byte	0x2b9
 1102 02b2 10       		.uleb128 0x10
 1103 02b3 C3000000 		.4byte	0xc3
 1104 02b7 13       		.byte	0x13
 1105 02b8 00       		.byte	0
 1106 02b9 09       		.uleb128 0x9
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 23


 1107 02ba 8F000000 		.4byte	.LASF46
 1108 02be 01       		.byte	0x1
 1109 02bf 4D       		.byte	0x4d
 1110 02c0 00000000 		.4byte	.LFB66
 1111 02c4 D4000000 		.4byte	.LFE66-.LFB66
 1112 02c8 01       		.uleb128 0x1
 1113 02c9 9C       		.byte	0x9c
 1114 02ca 33030000 		.4byte	0x333
 1115 02ce 0B       		.uleb128 0xb
 1116 02cf B4000000 		.4byte	.LASF47
 1117 02d3 01       		.byte	0x1
 1118 02d4 4D       		.byte	0x4d
 1119 02d5 CA000000 		.4byte	0xca
 1120 02d9 03       		.uleb128 0x3
 1121 02da 91       		.byte	0x91
 1122 02db BC7F     		.sleb128 -68
 1123 02dd 0B       		.uleb128 0xb
 1124 02de D5020000 		.4byte	.LASF36
 1125 02e2 01       		.byte	0x1
 1126 02e3 4D       		.byte	0x4d
 1127 02e4 8D020000 		.4byte	0x28d
 1128 02e8 03       		.uleb128 0x3
 1129 02e9 91       		.byte	0x91
 1130 02ea B87F     		.sleb128 -72
 1131 02ec 0B       		.uleb128 0xb
 1132 02ed BD000000 		.4byte	.LASF48
 1133 02f1 01       		.byte	0x1
 1134 02f2 4D       		.byte	0x4d
 1135 02f3 89000000 		.4byte	0x89
 1136 02f7 03       		.uleb128 0x3
 1137 02f8 91       		.byte	0x91
 1138 02f9 B47F     		.sleb128 -76
 1139 02fb 0B       		.uleb128 0xb
 1140 02fc 5E020000 		.4byte	.LASF49
 1141 0300 01       		.byte	0x1
 1142 0301 4D       		.byte	0x4d
 1143 0302 93020000 		.4byte	0x293
 1144 0306 03       		.uleb128 0x3
 1145 0307 91       		.byte	0x91
 1146 0308 B07F     		.sleb128 -80
 1147 030a 0D       		.uleb128 0xd
 1148 030b 6900     		.ascii	"i\000"
 1149 030d 01       		.byte	0x1
 1150 030e 4E       		.byte	0x4e
 1151 030f 89000000 		.4byte	0x89
 1152 0313 02       		.uleb128 0x2
 1153 0314 91       		.byte	0x91
 1154 0315 6C       		.sleb128 -20
 1155 0316 0E       		.uleb128 0xe
 1156 0317 E5020000 		.4byte	.LASF50
 1157 031b 01       		.byte	0x1
 1158 031c 4F       		.byte	0x4f
 1159 031d 33030000 		.4byte	0x333
 1160 0321 02       		.uleb128 0x2
 1161 0322 91       		.byte	0x91
 1162 0323 54       		.sleb128 -44
 1163 0324 0E       		.uleb128 0xe
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 24


 1164 0325 7B010000 		.4byte	.LASF51
 1165 0329 01       		.byte	0x1
 1166 032a 50       		.byte	0x50
 1167 032b 43030000 		.4byte	0x343
 1168 032f 02       		.uleb128 0x2
 1169 0330 91       		.byte	0x91
 1170 0331 40       		.sleb128 -64
 1171 0332 00       		.byte	0
 1172 0333 0F       		.uleb128 0xf
 1173 0334 2E010000 		.4byte	0x12e
 1174 0338 43030000 		.4byte	0x343
 1175 033c 10       		.uleb128 0x10
 1176 033d C3000000 		.4byte	0xc3
 1177 0341 17       		.byte	0x17
 1178 0342 00       		.byte	0
 1179 0343 0F       		.uleb128 0xf
 1180 0344 2E010000 		.4byte	0x12e
 1181 0348 53030000 		.4byte	0x353
 1182 034c 10       		.uleb128 0x10
 1183 034d C3000000 		.4byte	0xc3
 1184 0351 11       		.byte	0x11
 1185 0352 00       		.byte	0
 1186 0353 11       		.uleb128 0x11
 1187 0354 0F000000 		.4byte	.LASF52
 1188 0358 01       		.byte	0x1
 1189 0359 68       		.byte	0x68
 1190 035a 00000000 		.4byte	.LFB67
 1191 035e 5E000000 		.4byte	.LFE67-.LFB67
 1192 0362 01       		.uleb128 0x1
 1193 0363 9C       		.byte	0x9c
 1194 0364 B5030000 		.4byte	0x3b5
 1195 0368 0A       		.uleb128 0xa
 1196 0369 6100     		.ascii	"a\000"
 1197 036b 01       		.byte	0x1
 1198 036c 68       		.byte	0x68
 1199 036d B5030000 		.4byte	0x3b5
 1200 0371 02       		.uleb128 0x2
 1201 0372 91       		.byte	0x91
 1202 0373 64       		.sleb128 -28
 1203 0374 0A       		.uleb128 0xa
 1204 0375 6200     		.ascii	"b\000"
 1205 0377 01       		.byte	0x1
 1206 0378 68       		.byte	0x68
 1207 0379 CA000000 		.4byte	0xca
 1208 037d 02       		.uleb128 0x2
 1209 037e 91       		.byte	0x91
 1210 037f 60       		.sleb128 -32
 1211 0380 0A       		.uleb128 0xa
 1212 0381 6C656E00 		.ascii	"len\000"
 1213 0385 01       		.byte	0x1
 1214 0386 68       		.byte	0x68
 1215 0387 89000000 		.4byte	0x89
 1216 038b 02       		.uleb128 0x2
 1217 038c 91       		.byte	0x91
 1218 038d 5C       		.sleb128 -36
 1219 038e 0D       		.uleb128 0xd
 1220 038f 6900     		.ascii	"i\000"
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 25


 1221 0391 01       		.byte	0x1
 1222 0392 69       		.byte	0x69
 1223 0393 89000000 		.4byte	0x89
 1224 0397 02       		.uleb128 0x2
 1225 0398 91       		.byte	0x91
 1226 0399 74       		.sleb128 -12
 1227 039a 0D       		.uleb128 0xd
 1228 039b 6A00     		.ascii	"j\000"
 1229 039d 01       		.byte	0x1
 1230 039e 69       		.byte	0x69
 1231 039f 89000000 		.4byte	0x89
 1232 03a3 02       		.uleb128 0x2
 1233 03a4 91       		.byte	0x91
 1234 03a5 70       		.sleb128 -16
 1235 03a6 0E       		.uleb128 0xe
 1236 03a7 70020000 		.4byte	.LASF53
 1237 03ab 01       		.byte	0x1
 1238 03ac 69       		.byte	0x69
 1239 03ad 89000000 		.4byte	0x89
 1240 03b1 02       		.uleb128 0x2
 1241 03b2 91       		.byte	0x91
 1242 03b3 6C       		.sleb128 -20
 1243 03b4 00       		.byte	0
 1244 03b5 05       		.uleb128 0x5
 1245 03b6 04       		.byte	0x4
 1246 03b7 97000000 		.4byte	0x97
 1247 03bb 12       		.uleb128 0x12
 1248 03bc AE020000 		.4byte	.LASF54
 1249 03c0 06       		.byte	0x6
 1250 03c1 9606     		.2byte	0x696
 1251 03c3 C7030000 		.4byte	0x3c7
 1252 03c7 13       		.uleb128 0x13
 1253 03c8 B8000000 		.4byte	0xb8
 1254 03cc 0F       		.uleb128 0xf
 1255 03cd D0000000 		.4byte	0xd0
 1256 03d1 DC030000 		.4byte	0x3dc
 1257 03d5 10       		.uleb128 0x10
 1258 03d6 C3000000 		.4byte	0xc3
 1259 03da 09       		.byte	0x9
 1260 03db 00       		.byte	0
 1261 03dc 14       		.uleb128 0x14
 1262 03dd 98020000 		.4byte	.LASF55
 1263 03e1 01       		.byte	0x1
 1264 03e2 12       		.byte	0x12
 1265 03e3 CC030000 		.4byte	0x3cc
 1266 03e7 05       		.uleb128 0x5
 1267 03e8 03       		.byte	0x3
 1268 03e9 00000000 		.4byte	accelData
 1269 03ed 00       		.byte	0
 1270              		.section	.debug_abbrev,"",%progbits
 1271              	.Ldebug_abbrev0:
 1272 0000 01       		.uleb128 0x1
 1273 0001 11       		.uleb128 0x11
 1274 0002 01       		.byte	0x1
 1275 0003 25       		.uleb128 0x25
 1276 0004 0E       		.uleb128 0xe
 1277 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 26


 1278 0006 0B       		.uleb128 0xb
 1279 0007 03       		.uleb128 0x3
 1280 0008 0E       		.uleb128 0xe
 1281 0009 1B       		.uleb128 0x1b
 1282 000a 0E       		.uleb128 0xe
 1283 000b 55       		.uleb128 0x55
 1284 000c 17       		.uleb128 0x17
 1285 000d 11       		.uleb128 0x11
 1286 000e 01       		.uleb128 0x1
 1287 000f 10       		.uleb128 0x10
 1288 0010 17       		.uleb128 0x17
 1289 0011 00       		.byte	0
 1290 0012 00       		.byte	0
 1291 0013 02       		.uleb128 0x2
 1292 0014 24       		.uleb128 0x24
 1293 0015 00       		.byte	0
 1294 0016 0B       		.uleb128 0xb
 1295 0017 0B       		.uleb128 0xb
 1296 0018 3E       		.uleb128 0x3e
 1297 0019 0B       		.uleb128 0xb
 1298 001a 03       		.uleb128 0x3
 1299 001b 0E       		.uleb128 0xe
 1300 001c 00       		.byte	0
 1301 001d 00       		.byte	0
 1302 001e 03       		.uleb128 0x3
 1303 001f 16       		.uleb128 0x16
 1304 0020 00       		.byte	0
 1305 0021 03       		.uleb128 0x3
 1306 0022 0E       		.uleb128 0xe
 1307 0023 3A       		.uleb128 0x3a
 1308 0024 0B       		.uleb128 0xb
 1309 0025 3B       		.uleb128 0x3b
 1310 0026 0B       		.uleb128 0xb
 1311 0027 49       		.uleb128 0x49
 1312 0028 13       		.uleb128 0x13
 1313 0029 00       		.byte	0
 1314 002a 00       		.byte	0
 1315 002b 04       		.uleb128 0x4
 1316 002c 24       		.uleb128 0x24
 1317 002d 00       		.byte	0
 1318 002e 0B       		.uleb128 0xb
 1319 002f 0B       		.uleb128 0xb
 1320 0030 3E       		.uleb128 0x3e
 1321 0031 0B       		.uleb128 0xb
 1322 0032 03       		.uleb128 0x3
 1323 0033 08       		.uleb128 0x8
 1324 0034 00       		.byte	0
 1325 0035 00       		.byte	0
 1326 0036 05       		.uleb128 0x5
 1327 0037 0F       		.uleb128 0xf
 1328 0038 00       		.byte	0
 1329 0039 0B       		.uleb128 0xb
 1330 003a 0B       		.uleb128 0xb
 1331 003b 49       		.uleb128 0x49
 1332 003c 13       		.uleb128 0x13
 1333 003d 00       		.byte	0
 1334 003e 00       		.byte	0
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 27


 1335 003f 06       		.uleb128 0x6
 1336 0040 04       		.uleb128 0x4
 1337 0041 01       		.byte	0x1
 1338 0042 03       		.uleb128 0x3
 1339 0043 0E       		.uleb128 0xe
 1340 0044 0B       		.uleb128 0xb
 1341 0045 0B       		.uleb128 0xb
 1342 0046 3A       		.uleb128 0x3a
 1343 0047 0B       		.uleb128 0xb
 1344 0048 3B       		.uleb128 0x3b
 1345 0049 0B       		.uleb128 0xb
 1346 004a 01       		.uleb128 0x1
 1347 004b 13       		.uleb128 0x13
 1348 004c 00       		.byte	0
 1349 004d 00       		.byte	0
 1350 004e 07       		.uleb128 0x7
 1351 004f 28       		.uleb128 0x28
 1352 0050 00       		.byte	0
 1353 0051 03       		.uleb128 0x3
 1354 0052 0E       		.uleb128 0xe
 1355 0053 1C       		.uleb128 0x1c
 1356 0054 0D       		.uleb128 0xd
 1357 0055 00       		.byte	0
 1358 0056 00       		.byte	0
 1359 0057 08       		.uleb128 0x8
 1360 0058 16       		.uleb128 0x16
 1361 0059 00       		.byte	0
 1362 005a 03       		.uleb128 0x3
 1363 005b 0E       		.uleb128 0xe
 1364 005c 3A       		.uleb128 0x3a
 1365 005d 0B       		.uleb128 0xb
 1366 005e 3B       		.uleb128 0x3b
 1367 005f 05       		.uleb128 0x5
 1368 0060 49       		.uleb128 0x49
 1369 0061 13       		.uleb128 0x13
 1370 0062 00       		.byte	0
 1371 0063 00       		.byte	0
 1372 0064 09       		.uleb128 0x9
 1373 0065 2E       		.uleb128 0x2e
 1374 0066 01       		.byte	0x1
 1375 0067 3F       		.uleb128 0x3f
 1376 0068 19       		.uleb128 0x19
 1377 0069 03       		.uleb128 0x3
 1378 006a 0E       		.uleb128 0xe
 1379 006b 3A       		.uleb128 0x3a
 1380 006c 0B       		.uleb128 0xb
 1381 006d 3B       		.uleb128 0x3b
 1382 006e 0B       		.uleb128 0xb
 1383 006f 27       		.uleb128 0x27
 1384 0070 19       		.uleb128 0x19
 1385 0071 11       		.uleb128 0x11
 1386 0072 01       		.uleb128 0x1
 1387 0073 12       		.uleb128 0x12
 1388 0074 06       		.uleb128 0x6
 1389 0075 40       		.uleb128 0x40
 1390 0076 18       		.uleb128 0x18
 1391 0077 9642     		.uleb128 0x2116
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 28


 1392 0079 19       		.uleb128 0x19
 1393 007a 01       		.uleb128 0x1
 1394 007b 13       		.uleb128 0x13
 1395 007c 00       		.byte	0
 1396 007d 00       		.byte	0
 1397 007e 0A       		.uleb128 0xa
 1398 007f 05       		.uleb128 0x5
 1399 0080 00       		.byte	0
 1400 0081 03       		.uleb128 0x3
 1401 0082 08       		.uleb128 0x8
 1402 0083 3A       		.uleb128 0x3a
 1403 0084 0B       		.uleb128 0xb
 1404 0085 3B       		.uleb128 0x3b
 1405 0086 0B       		.uleb128 0xb
 1406 0087 49       		.uleb128 0x49
 1407 0088 13       		.uleb128 0x13
 1408 0089 02       		.uleb128 0x2
 1409 008a 18       		.uleb128 0x18
 1410 008b 00       		.byte	0
 1411 008c 00       		.byte	0
 1412 008d 0B       		.uleb128 0xb
 1413 008e 05       		.uleb128 0x5
 1414 008f 00       		.byte	0
 1415 0090 03       		.uleb128 0x3
 1416 0091 0E       		.uleb128 0xe
 1417 0092 3A       		.uleb128 0x3a
 1418 0093 0B       		.uleb128 0xb
 1419 0094 3B       		.uleb128 0x3b
 1420 0095 0B       		.uleb128 0xb
 1421 0096 49       		.uleb128 0x49
 1422 0097 13       		.uleb128 0x13
 1423 0098 02       		.uleb128 0x2
 1424 0099 18       		.uleb128 0x18
 1425 009a 00       		.byte	0
 1426 009b 00       		.byte	0
 1427 009c 0C       		.uleb128 0xc
 1428 009d 2E       		.uleb128 0x2e
 1429 009e 01       		.byte	0x1
 1430 009f 3F       		.uleb128 0x3f
 1431 00a0 19       		.uleb128 0x19
 1432 00a1 03       		.uleb128 0x3
 1433 00a2 0E       		.uleb128 0xe
 1434 00a3 3A       		.uleb128 0x3a
 1435 00a4 0B       		.uleb128 0xb
 1436 00a5 3B       		.uleb128 0x3b
 1437 00a6 0B       		.uleb128 0xb
 1438 00a7 27       		.uleb128 0x27
 1439 00a8 19       		.uleb128 0x19
 1440 00a9 49       		.uleb128 0x49
 1441 00aa 13       		.uleb128 0x13
 1442 00ab 11       		.uleb128 0x11
 1443 00ac 01       		.uleb128 0x1
 1444 00ad 12       		.uleb128 0x12
 1445 00ae 06       		.uleb128 0x6
 1446 00af 40       		.uleb128 0x40
 1447 00b0 18       		.uleb128 0x18
 1448 00b1 9642     		.uleb128 0x2116
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 29


 1449 00b3 19       		.uleb128 0x19
 1450 00b4 01       		.uleb128 0x1
 1451 00b5 13       		.uleb128 0x13
 1452 00b6 00       		.byte	0
 1453 00b7 00       		.byte	0
 1454 00b8 0D       		.uleb128 0xd
 1455 00b9 34       		.uleb128 0x34
 1456 00ba 00       		.byte	0
 1457 00bb 03       		.uleb128 0x3
 1458 00bc 08       		.uleb128 0x8
 1459 00bd 3A       		.uleb128 0x3a
 1460 00be 0B       		.uleb128 0xb
 1461 00bf 3B       		.uleb128 0x3b
 1462 00c0 0B       		.uleb128 0xb
 1463 00c1 49       		.uleb128 0x49
 1464 00c2 13       		.uleb128 0x13
 1465 00c3 02       		.uleb128 0x2
 1466 00c4 18       		.uleb128 0x18
 1467 00c5 00       		.byte	0
 1468 00c6 00       		.byte	0
 1469 00c7 0E       		.uleb128 0xe
 1470 00c8 34       		.uleb128 0x34
 1471 00c9 00       		.byte	0
 1472 00ca 03       		.uleb128 0x3
 1473 00cb 0E       		.uleb128 0xe
 1474 00cc 3A       		.uleb128 0x3a
 1475 00cd 0B       		.uleb128 0xb
 1476 00ce 3B       		.uleb128 0x3b
 1477 00cf 0B       		.uleb128 0xb
 1478 00d0 49       		.uleb128 0x49
 1479 00d1 13       		.uleb128 0x13
 1480 00d2 02       		.uleb128 0x2
 1481 00d3 18       		.uleb128 0x18
 1482 00d4 00       		.byte	0
 1483 00d5 00       		.byte	0
 1484 00d6 0F       		.uleb128 0xf
 1485 00d7 01       		.uleb128 0x1
 1486 00d8 01       		.byte	0x1
 1487 00d9 49       		.uleb128 0x49
 1488 00da 13       		.uleb128 0x13
 1489 00db 01       		.uleb128 0x1
 1490 00dc 13       		.uleb128 0x13
 1491 00dd 00       		.byte	0
 1492 00de 00       		.byte	0
 1493 00df 10       		.uleb128 0x10
 1494 00e0 21       		.uleb128 0x21
 1495 00e1 00       		.byte	0
 1496 00e2 49       		.uleb128 0x49
 1497 00e3 13       		.uleb128 0x13
 1498 00e4 2F       		.uleb128 0x2f
 1499 00e5 0B       		.uleb128 0xb
 1500 00e6 00       		.byte	0
 1501 00e7 00       		.byte	0
 1502 00e8 11       		.uleb128 0x11
 1503 00e9 2E       		.uleb128 0x2e
 1504 00ea 01       		.byte	0x1
 1505 00eb 3F       		.uleb128 0x3f
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 30


 1506 00ec 19       		.uleb128 0x19
 1507 00ed 03       		.uleb128 0x3
 1508 00ee 0E       		.uleb128 0xe
 1509 00ef 3A       		.uleb128 0x3a
 1510 00f0 0B       		.uleb128 0xb
 1511 00f1 3B       		.uleb128 0x3b
 1512 00f2 0B       		.uleb128 0xb
 1513 00f3 27       		.uleb128 0x27
 1514 00f4 19       		.uleb128 0x19
 1515 00f5 11       		.uleb128 0x11
 1516 00f6 01       		.uleb128 0x1
 1517 00f7 12       		.uleb128 0x12
 1518 00f8 06       		.uleb128 0x6
 1519 00f9 40       		.uleb128 0x40
 1520 00fa 18       		.uleb128 0x18
 1521 00fb 9742     		.uleb128 0x2117
 1522 00fd 19       		.uleb128 0x19
 1523 00fe 01       		.uleb128 0x1
 1524 00ff 13       		.uleb128 0x13
 1525 0100 00       		.byte	0
 1526 0101 00       		.byte	0
 1527 0102 12       		.uleb128 0x12
 1528 0103 34       		.uleb128 0x34
 1529 0104 00       		.byte	0
 1530 0105 03       		.uleb128 0x3
 1531 0106 0E       		.uleb128 0xe
 1532 0107 3A       		.uleb128 0x3a
 1533 0108 0B       		.uleb128 0xb
 1534 0109 3B       		.uleb128 0x3b
 1535 010a 05       		.uleb128 0x5
 1536 010b 49       		.uleb128 0x49
 1537 010c 13       		.uleb128 0x13
 1538 010d 3F       		.uleb128 0x3f
 1539 010e 19       		.uleb128 0x19
 1540 010f 3C       		.uleb128 0x3c
 1541 0110 19       		.uleb128 0x19
 1542 0111 00       		.byte	0
 1543 0112 00       		.byte	0
 1544 0113 13       		.uleb128 0x13
 1545 0114 35       		.uleb128 0x35
 1546 0115 00       		.byte	0
 1547 0116 49       		.uleb128 0x49
 1548 0117 13       		.uleb128 0x13
 1549 0118 00       		.byte	0
 1550 0119 00       		.byte	0
 1551 011a 14       		.uleb128 0x14
 1552 011b 34       		.uleb128 0x34
 1553 011c 00       		.byte	0
 1554 011d 03       		.uleb128 0x3
 1555 011e 0E       		.uleb128 0xe
 1556 011f 3A       		.uleb128 0x3a
 1557 0120 0B       		.uleb128 0xb
 1558 0121 3B       		.uleb128 0x3b
 1559 0122 0B       		.uleb128 0xb
 1560 0123 49       		.uleb128 0x49
 1561 0124 13       		.uleb128 0x13
 1562 0125 3F       		.uleb128 0x3f
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 31


 1563 0126 19       		.uleb128 0x19
 1564 0127 02       		.uleb128 0x2
 1565 0128 18       		.uleb128 0x18
 1566 0129 00       		.byte	0
 1567 012a 00       		.byte	0
 1568 012b 00       		.byte	0
 1569              		.section	.debug_aranges,"",%progbits
 1570 0000 3C000000 		.4byte	0x3c
 1571 0004 0200     		.2byte	0x2
 1572 0006 00000000 		.4byte	.Ldebug_info0
 1573 000a 04       		.byte	0x4
 1574 000b 00       		.byte	0
 1575 000c 0000     		.2byte	0
 1576 000e 0000     		.2byte	0
 1577 0010 00000000 		.4byte	.LFB63
 1578 0014 50000000 		.4byte	.LFE63-.LFB63
 1579 0018 00000000 		.4byte	.LFB64
 1580 001c 5C000000 		.4byte	.LFE64-.LFB64
 1581 0020 00000000 		.4byte	.LFB65
 1582 0024 10020000 		.4byte	.LFE65-.LFB65
 1583 0028 00000000 		.4byte	.LFB66
 1584 002c D4000000 		.4byte	.LFE66-.LFB66
 1585 0030 00000000 		.4byte	.LFB67
 1586 0034 5E000000 		.4byte	.LFE67-.LFB67
 1587 0038 00000000 		.4byte	0
 1588 003c 00000000 		.4byte	0
 1589              		.section	.debug_ranges,"",%progbits
 1590              	.Ldebug_ranges0:
 1591 0000 00000000 		.4byte	.LFB63
 1592 0004 50000000 		.4byte	.LFE63
 1593 0008 00000000 		.4byte	.LFB64
 1594 000c 5C000000 		.4byte	.LFE64
 1595 0010 00000000 		.4byte	.LFB65
 1596 0014 10020000 		.4byte	.LFE65
 1597 0018 00000000 		.4byte	.LFB66
 1598 001c D4000000 		.4byte	.LFE66
 1599 0020 00000000 		.4byte	.LFB67
 1600 0024 5E000000 		.4byte	.LFE67
 1601 0028 00000000 		.4byte	0
 1602 002c 00000000 		.4byte	0
 1603              		.section	.debug_line,"",%progbits
 1604              	.Ldebug_line0:
 1605 0000 32020000 		.section	.debug_str,"MS",%progbits,1
 1605      02005B01 
 1605      00000201 
 1605      FB0E0D00 
 1605      01010101 
 1606              	.LASF23:
 1607 0000 57414954 		.ascii	"WAIT_TO_LAUNCH\000"
 1607      5F544F5F 
 1607      4C41554E 
 1607      434800
 1608              	.LASF52:
 1609 000f 75696E74 		.ascii	"uint8_to_char\000"
 1609      385F746F 
 1609      5F636861 
 1609      7200
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 32


 1610              	.LASF26:
 1611 001d 52455355 		.ascii	"RESURFACE\000"
 1611      52464143 
 1611      4500
 1612              	.LASF43:
 1613 0027 636F6D6D 		.ascii	"commands\000"
 1613      616E6473 
 1613      00
 1614              	.LASF31:
 1615 0030 636F6C75 		.ascii	"column\000"
 1615      6D6E00
 1616              	.LASF24:
 1617 0037 44455343 		.ascii	"DESCENDING\000"
 1617      454E4449 
 1617      4E4700
 1618              	.LASF35:
 1619 0042 52784275 		.ascii	"RxBuffer\000"
 1619      66666572 
 1619      00
 1620              	.LASF22:
 1621 004b 53595354 		.ascii	"SYSTEM_CHECK\000"
 1621      454D5F43 
 1621      4845434B 
 1621      00
 1622              	.LASF42:
 1623 0058 68756E64 		.ascii	"hunds\000"
 1623      7300
 1624              	.LASF29:
 1625 005e 53544154 		.ascii	"STATES\000"
 1625      455300
 1626              	.LASF34:
 1627 0065 42545F50 		.ascii	"BT_Process\000"
 1627      726F6365 
 1627      737300
 1628              	.LASF4:
 1629 0070 73686F72 		.ascii	"short int\000"
 1629      7420696E 
 1629      7400
 1630              	.LASF17:
 1631 007a 73697A65 		.ascii	"sizetype\000"
 1631      74797065 
 1631      00
 1632              	.LASF40:
 1633 0083 6F6E6573 		.ascii	"ones\000"
 1633      00
 1634              	.LASF25:
 1635 0088 4C414E44 		.ascii	"LANDED\000"
 1635      454400
 1636              	.LASF46:
 1637 008f 42545F53 		.ascii	"BT_Send\000"
 1637      656E6400 
 1638              	.LASF5:
 1639 0097 5F5F7569 		.ascii	"__uint16_t\000"
 1639      6E743136 
 1639      5F7400
 1640              	.LASF13:
 1641 00a2 75696E74 		.ascii	"uint8_t\000"
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 33


 1641      385F7400 
 1642              	.LASF33:
 1643 00aa 436F6D70 		.ascii	"ComputeMA\000"
 1643      7574654D 
 1643      4100
 1644              	.LASF47:
 1645 00b4 54784275 		.ascii	"TxBuffer\000"
 1645      66666572 
 1645      00
 1646              	.LASF48:
 1647 00bd 6C656E67 		.ascii	"lengthOfBuf\000"
 1647      74684F66 
 1647      42756600 
 1648              	.LASF20:
 1649 00c9 666C6F61 		.ascii	"float\000"
 1649      7400
 1650              	.LASF10:
 1651 00cf 6C6F6E67 		.ascii	"long long int\000"
 1651      206C6F6E 
 1651      6720696E 
 1651      7400
 1652              	.LASF32:
 1653 00dd 73616D70 		.ascii	"sample\000"
 1653      6C6500
 1654              	.LASF27:
 1655 00e4 5452414E 		.ascii	"TRANSMIT\000"
 1655      534D4954 
 1655      00
 1656              	.LASF56:
 1657 00ed 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1657      4320342E 
 1657      392E3320 
 1657      32303135 
 1657      30333033 
 1658 0120 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1658      20726576 
 1658      6973696F 
 1658      6E203232 
 1658      31323230 
 1659 0153 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1659      66756E63 
 1659      74696F6E 
 1659      2D736563 
 1659      74696F6E 
 1660              	.LASF51:
 1661 017b 7472616E 		.ascii	"transtate\000"
 1661      73746174 
 1661      6500
 1662              	.LASF2:
 1663 0185 5F5F7569 		.ascii	"__uint8_t\000"
 1663      6E74385F 
 1663      7400
 1664              	.LASF28:
 1665 018f 4552524F 		.ascii	"ERROR\000"
 1665      5200
 1666              	.LASF21:
 1667 0195 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 34


 1667      20646F75 
 1667      626C6500 
 1668              	.LASF1:
 1669 01a1 756E7369 		.ascii	"unsigned char\000"
 1669      676E6564 
 1669      20636861 
 1669      7200
 1670              	.LASF0:
 1671 01af 7369676E 		.ascii	"signed char\000"
 1671      65642063 
 1671      68617200 
 1672              	.LASF45:
 1673 01bb 4932435F 		.ascii	"I2C_LCD_print\000"
 1673      4C43445F 
 1673      7072696E 
 1673      7400
 1674              	.LASF11:
 1675 01c9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1675      206C6F6E 
 1675      6720756E 
 1675      7369676E 
 1675      65642069 
 1676              	.LASF12:
 1677 01e0 756E7369 		.ascii	"unsigned int\000"
 1677      676E6564 
 1677      20696E74 
 1677      00
 1678              	.LASF15:
 1679 01ed 75696E74 		.ascii	"uint16_t\000"
 1679      31365F74 
 1679      00
 1680              	.LASF58:
 1681 01f6 433A5C55 		.ascii	"C:\\Users\\gstoll\\Desktop\\Project_O-Vac\\OVac.cyd"
 1681      73657273 
 1681      5C677374 
 1681      6F6C6C5C 
 1681      4465736B 
 1682 0224 736E00   		.ascii	"sn\000"
 1683              	.LASF18:
 1684 0227 63686172 		.ascii	"char\000"
 1684      00
 1685              	.LASF8:
 1686 022c 6C6F6E67 		.ascii	"long int\000"
 1686      20696E74 
 1686      00
 1687              	.LASF16:
 1688 0235 696E7433 		.ascii	"int32_t\000"
 1688      325F7400 
 1689              	.LASF6:
 1690 023d 73686F72 		.ascii	"short unsigned int\000"
 1690      7420756E 
 1690      7369676E 
 1690      65642069 
 1690      6E7400
 1691              	.LASF14:
 1692 0250 696E7431 		.ascii	"int16_t\000"
 1692      365F7400 
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 35


 1693              	.LASF30:
 1694 0258 75696E74 		.ascii	"uint8\000"
 1694      3800
 1695              	.LASF49:
 1696 025e 66697273 		.ascii	"firstPacket\000"
 1696      74506163 
 1696      6B657400 
 1697              	.LASF44:
 1698 026a 64657074 		.ascii	"depth\000"
 1698      6800
 1699              	.LASF53:
 1700 0270 676F6F64 		.ascii	"good_msg\000"
 1700      5F6D7367 
 1700      00
 1701              	.LASF9:
 1702 0279 6C6F6E67 		.ascii	"long unsigned int\000"
 1702      20756E73 
 1702      69676E65 
 1702      6420696E 
 1702      7400
 1703              	.LASF37:
 1704 028b 62797465 		.ascii	"bytes\000"
 1704      7300
 1705              	.LASF19:
 1706 0291 646F7562 		.ascii	"double\000"
 1706      6C6500
 1707              	.LASF55:
 1708 0298 61636365 		.ascii	"accelData\000"
 1708      6C446174 
 1708      6100
 1709              	.LASF57:
 1710 02a2 66756E63 		.ascii	"functions.c\000"
 1710      74696F6E 
 1710      732E6300 
 1711              	.LASF54:
 1712 02ae 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1712      52784275 
 1712      66666572 
 1712      00
 1713              	.LASF39:
 1714 02bb 72657365 		.ascii	"reset\000"
 1714      7400
 1715              	.LASF7:
 1716 02c1 5F5F696E 		.ascii	"__int32_t\000"
 1716      7433325F 
 1716      7400
 1717              	.LASF3:
 1718 02cb 5F5F696E 		.ascii	"__int16_t\000"
 1718      7431365F 
 1718      7400
 1719              	.LASF36:
 1720 02d5 53544154 		.ascii	"STATE\000"
 1720      4500
 1721              	.LASF41:
 1722 02db 74656E73 		.ascii	"tens\000"
 1722      00
 1723              	.LASF38:
ARM GAS  C:\Users\gstoll\AppData\Local\Temp\ccbgk6Se.s 			page 36


 1724 02e0 666C6167 		.ascii	"flag\000"
 1724      00
 1725              	.LASF50:
 1726 02e5 77616974 		.ascii	"waitstate\000"
 1726      73746174 
 1726      6500
 1727              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
