ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	devAddr,1,1
  19              		.comm	buffer,22,4
  20              		.global	Addr
  21              		.data
  22              		.align	2
  23              		.type	Addr, %object
  24              		.size	Addr, 4
  25              	Addr:
  26 0000 3F000000 		.word	63
  27              		.global	id
  28              		.align	2
  29              		.type	id, %object
  30              		.size	id, 4
  31              	id:
  32 0004 01000000 		.word	1
  33              		.global	press_id
  34              		.align	2
  35              		.type	press_id, %object
  36              		.size	press_id, 4
  37              	press_id:
  38 0008 01000000 		.word	1
  39              		.global	data_time
  40              		.bss
  41              		.align	2
  42              		.type	data_time, %object
  43              		.size	data_time, 4
  44              	data_time:
  45 0000 00000000 		.space	4
  46              		.global	sum
  47              		.align	2
  48              		.type	sum, %object
  49              		.size	sum, 4
  50              	sum:
  51 0004 00000000 		.space	4
  52              		.global	pressure_sum
  53              		.align	2
  54              		.type	pressure_sum, %object
  55              		.size	pressure_sum, 4
  56              	pressure_sum:
  57 0008 00000000 		.space	4
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 2


  58              		.global	average
  59              		.align	1
  60              		.type	average, %object
  61              		.size	average, 2
  62              	average:
  63 000c 0000     		.space	2
  64              		.global	collect_flag
  65              		.type	collect_flag, %object
  66              		.size	collect_flag, 1
  67              	collect_flag:
  68 000e 00       		.space	1
  69              		.global	wait_flag
  70              		.type	wait_flag, %object
  71              		.size	wait_flag, 1
  72              	wait_flag:
  73 000f 00       		.space	1
  74              		.global	PANIC_flag
  75              		.type	PANIC_flag, %object
  76              		.size	PANIC_flag, 1
  77              	PANIC_flag:
  78 0010 00       		.space	1
  79              		.global	STATE
  80              		.data
  81              		.type	STATE, %object
  82              		.size	STATE, 1
  83              	STATE:
  84 000c 01       		.byte	1
  85              		.global	testnum
  86              		.type	testnum, %object
  87              		.size	testnum, 1
  88              	testnum:
  89 000d 01       		.byte	1
  90              		.global	countdown
  91              		.bss
  92              		.type	countdown, %object
  93              		.size	countdown, 1
  94              	countdown:
  95 0011 00       		.space	1
  96              		.global	update_Data
  97              		.type	update_Data, %object
  98              		.size	update_Data, 1
  99              	update_Data:
 100 0012 00       		.space	1
 101              		.global	RxBuffer
 102 0013 00       		.align	2
 103              		.type	RxBuffer, %object
 104              		.size	RxBuffer, 64
 105              	RxBuffer:
 106 0014 00000000 		.space	64
 106      00000000 
 106      00000000 
 106      00000000 
 106      00000000 
 107              		.global	msg_count
 108              		.align	2
 109              		.type	msg_count, %object
 110              		.size	msg_count, 4
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 3


 111              	msg_count:
 112 0054 00000000 		.space	4
 113              		.global	rxflag
 114              		.align	2
 115              		.type	rxflag, %object
 116              		.size	rxflag, 4
 117              	rxflag:
 118 0058 00000000 		.space	4
 119              		.global	bytes
 120              		.align	2
 121              		.type	bytes, %object
 122              		.size	bytes, 4
 123              	bytes:
 124 005c 00000000 		.space	4
 125              		.global	dataflag
 126              		.align	2
 127              		.type	dataflag, %object
 128              		.size	dataflag, 4
 129              	dataflag:
 130 0060 00000000 		.space	4
 131              		.global	transmit_flag
 132              		.align	2
 133              		.type	transmit_flag, %object
 134              		.size	transmit_flag, 4
 135              	transmit_flag:
 136 0064 00000000 		.space	4
 137              		.global	file
 138              		.data
 139 000e 0000     		.align	2
 140              		.type	file, %object
 141              		.size	file, 11
 142              	file:
 143 0010 74657374 		.ascii	"test_1.txt\000"
 143      5F312E74 
 143      787400
 144              		.global	volume
 145 001b 00       		.bss
 146              		.align	2
 147              		.type	volume, %object
 148              		.size	volume, 10
 149              	volume:
 150 0068 00000000 		.space	10
 150      00000000 
 150      0000
 151              		.comm	fsfile,4,4
 152 0072 0000     		.section	.text.Moisture_ISR_Handler,"ax",%progbits
 153              		.align	2
 154              		.global	Moisture_ISR_Handler
 155              		.thumb
 156              		.thumb_func
 157              		.type	Moisture_ISR_Handler, %function
 158              	Moisture_ISR_Handler:
 159              	.LFB63:
 160              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 4


   4:main.c        **** * Version: 2.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   This is a source code for example project of ADC single ended mode.
   8:main.c        **** *
   9:main.c        **** *   Variable resistor(pot) is connected to +ve input of ADC using the I/O pin.
  10:main.c        **** *   P0.0. When voltage to positive terminal of ADC is 0, the output displayed
  11:main.c        **** *   on the LCD pannel is 0x0000. As voltage on positive terminal goes on
  12:main.c        **** *   increasing, the  converted value goes on increasing from 0x0000 and reaches
  13:main.c        **** *   0xFFFF when voltage becomes 1.024V. Futher increase in voltage value,
  14:main.c        **** *   doesn't cause any changes to values displayed in the LCD.
  15:main.c        **** *
  16:main.c        **** * Hardware Connections: 
  17:main.c        **** *  Connect analog input from Variable resistor to port P0[0] of DVK1 board.
  18:main.c        **** *
  19:main.c        **** ********************************************************************************
  20:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  21:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  22:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  23:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  24:main.c        **** * accompanying the software package from which you obtained this software.
  25:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  27:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  28:main.c        **** *******************************************************************************/
  29:main.c        **** 
  30:main.c        **** #include <project.h>
  31:main.c        **** #include <mpu6050.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include <string.h>
  34:main.c        **** #include <FS.h>
  35:main.c        **** #include "LiquidCrystal_I2C.h"
  36:main.c        **** #include "functions.h"
  37:main.c        **** 
  38:main.c        **** #define MPU6050 
  39:main.c        **** #define LCD
  40:main.c        **** #define SD
  41:main.c        **** #define BT
  42:main.c        **** 
  43:main.c        **** #define MA_WINDOW 15                    // Number of samples in the moving average window.
  44:main.c        **** #define BOT_THRESHOLD 20000             // Z-Aacceleration threshold for transition into LANDED sta
  45:main.c        **** #define WAIT_TIME 1000                  // Number of ISR calls until transition into DESCENDING sta
  46:main.c        **** #define DATA_TIME 5000                  // Number of ISR calls until transition into WAIT_TO_LAUNCH
  47:main.c        **** #define BUFFER_LEN  64u                 // Buffer length for UART rx
  48:main.c        **** 
  49:main.c        **** 
  50:main.c        **** uint32_t Addr = 0x3F;                       // I2C address of LCD.
  51:main.c        **** long id = 1, press_id = 1;                 // Interrupt count.
  52:main.c        **** long data_time = 0;                        // data point num
  53:main.c        **** 
  54:main.c        **** long sum = 0;                               // Sum of accelerometer values
  55:main.c        **** float pressure_sum = 0;                     // Sum of pressure values. 
  56:main.c        **** int16_t average = 0;                        // Moving average variable, accelerometer.
  57:main.c        **** bool collect_flag = 0;                      // flag indicating when to record acceleration sample.
  58:main.c        **** bool wait_flag = 0;                         // flag indicating when to increment interrupt counter.
  59:main.c        **** bool PANIC_flag = 0;                        // flag indicating water is present in housing.
  60:main.c        **** //bool first_test = 1;                        // flag indicating first test(longer countdown)
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 5


  61:main.c        **** STATES STATE = WAIT_TO_LAUNCH;                  // Set initial state. 
  62:main.c        **** uint8_t testnum = 1, countdown = 0, update_Data = 0;
  63:main.c        **** uint8_t RxBuffer[BUFFER_LEN] = {};            // Rx Buffer
  64:main.c        **** int msg_count = 0, rxflag = 0, bytes = 0, dataflag = 0, transmit_flag = 0;    // UART variables
  65:main.c        **** char file[11] = "test_1.txt";
  66:main.c        **** char volume[10] = {};
  67:main.c        **** FS_FILE *fsfile;
  68:main.c        **** 
  69:main.c        **** /*******************************************************************************
  70:main.c        **** * Function Name: main
  71:main.c        **** ********************************************************************************
  72:main.c        **** *
  73:main.c        **** * Summary:
  74:main.c        **** *  main() performs following functions:
  75:main.c        **** *  1: Initializes the LCD.
  76:main.c        **** *  2: Initializes timer module and sampling interrupt.
  77:main.c        **** *  3: Initializes MPU6050 Accelerometer/Gyroscope module.
  78:main.c        **** *  4: Samples Z-axis acceleration data from module @ 500hz.
  79:main.c        **** *  5: Computes moving average of Z-axis acceleration values.
  80:main.c        **** *  6: Transitions from DESCENDING to LANDED state when sudden acceleration occurs
  81:main.c        **** *     (ie. moving average > 200000).
  82:main.c        **** *
  83:main.c        **** * Parameters:
  84:main.c        **** *  None.
  85:main.c        **** *
  86:main.c        **** * Return:
  87:main.c        **** *  None.
  88:main.c        **** *
  89:main.c        **** *******************************************************************************/
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** /* Moisture sensor ISR */
  93:main.c        **** CY_ISR (Moisture_ISR_Handler){
 161              		.loc 1 93 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
  94:main.c        ****     PANIC_flag = 1;                             // Set flag to indicate water
 171              		.loc 1 94 0
 172 0004 044B     		ldr	r3, .L2
 173 0006 0122     		movs	r2, #1
 174 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     STATE = RESURFACE;                          // Go to surface
 175              		.loc 1 95 0
 176 000a 044B     		ldr	r3, .L2+4
 177 000c 0422     		movs	r2, #4
 178 000e 1A70     		strb	r2, [r3]
  96:main.c        ****     Comp_Stop();                                // Stop comparator for interrupt
 179              		.loc 1 96 0
 180 0010 FFF7FEFF 		bl	Comp_Stop
  97:main.c        **** }
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 6


 181              		.loc 1 97 0
 182 0014 80BD     		pop	{r7, pc}
 183              	.L3:
 184 0016 00BF     		.align	2
 185              	.L2:
 186 0018 00000000 		.word	PANIC_flag
 187 001c 00000000 		.word	STATE
 188              		.cfi_endproc
 189              	.LFE63:
 190              		.size	Moisture_ISR_Handler, .-Moisture_ISR_Handler
 191              		.section	.text.Sample_ISR_Handler,"ax",%progbits
 192              		.align	2
 193              		.global	Sample_ISR_Handler
 194              		.thumb
 195              		.thumb_func
 196              		.type	Sample_ISR_Handler, %function
 197              	Sample_ISR_Handler:
 198              	.LFB64:
  98:main.c        **** 
  99:main.c        **** /* Sampling ISR */
 100:main.c        **** CY_ISR (Sample_ISR_Handler){
 199              		.loc 1 100 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 101:main.c        ****     Sample_Timer_STATUS;                        // Clears interrupt by accessing timer status regis
 209              		.loc 1 101 0
 210 0004 084B     		ldr	r3, .L6
 211 0006 1B78     		ldrb	r3, [r3]
 102:main.c        ****     if (STATE == DESCENDING){ 
 212              		.loc 1 102 0
 213 0008 084B     		ldr	r3, .L6+4
 214 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 215 000c 022B     		cmp	r3, #2
 216 000e 07D1     		bne	.L4
 103:main.c        ****         collect_flag = 1;
 217              		.loc 1 103 0
 218 0010 074B     		ldr	r3, .L6+8
 219 0012 0122     		movs	r2, #1
 220 0014 1A70     		strb	r2, [r3]
 104:main.c        ****         data_time++;
 221              		.loc 1 104 0
 222 0016 074B     		ldr	r3, .L6+12
 223 0018 1B68     		ldr	r3, [r3]
 224 001a 0133     		adds	r3, r3, #1
 225 001c 054A     		ldr	r2, .L6+12
 226 001e 1360     		str	r3, [r2]
 227              	.L4:
 105:main.c        ****     }
 106:main.c        **** }
 228              		.loc 1 106 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 7


 229 0020 BD46     		mov	sp, r7
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
 232 0022 5DF8047B 		ldr	r7, [sp], #4
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 0026 7047     		bx	lr
 236              	.L7:
 237              		.align	2
 238              	.L6:
 239 0028 034F0040 		.word	1073762051
 240 002c 00000000 		.word	STATE
 241 0030 00000000 		.word	collect_flag
 242 0034 00000000 		.word	data_time
 243              		.cfi_endproc
 244              	.LFE64:
 245              		.size	Sample_ISR_Handler, .-Sample_ISR_Handler
 246              		.section	.text.Countdown_ISR_Handler,"ax",%progbits
 247              		.align	2
 248              		.global	Countdown_ISR_Handler
 249              		.thumb
 250              		.thumb_func
 251              		.type	Countdown_ISR_Handler, %function
 252              	Countdown_ISR_Handler:
 253              	.LFB65:
 107:main.c        **** 
 108:main.c        **** /* Countdown ISR*/
 109:main.c        **** CY_ISR (Countdown_ISR_Handler){
 254              		.loc 1 109 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259 0000 80B4     		push	{r7}
 260              		.cfi_def_cfa_offset 4
 261              		.cfi_offset 7, -4
 262 0002 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 110:main.c        ****     Countdown_timer_STATUS;                        // Clears interrupt by accessing timer status re
 264              		.loc 1 110 0
 265 0004 164B     		ldr	r3, .L13
 266 0006 1B78     		ldrb	r3, [r3]
 111:main.c        ****     if (STATE == DESCENDING || STATE == LANDED || STATE == RESURFACE){
 267              		.loc 1 111 0
 268 0008 164B     		ldr	r3, .L13+4
 269 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 000c 022B     		cmp	r3, #2
 271 000e 07D0     		beq	.L9
 272              		.loc 1 111 0 is_stmt 0 discriminator 1
 273 0010 144B     		ldr	r3, .L13+4
 274 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0014 032B     		cmp	r3, #3
 276 0016 03D0     		beq	.L9
 277              		.loc 1 111 0 discriminator 2
 278 0018 124B     		ldr	r3, .L13+4
 279 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 001c 042B     		cmp	r3, #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 8


 281 001e 02D1     		bne	.L10
 282              	.L9:
 112:main.c        ****         wait_flag = 1;
 283              		.loc 1 112 0 is_stmt 1
 284 0020 114B     		ldr	r3, .L13+8
 285 0022 0122     		movs	r2, #1
 286 0024 1A70     		strb	r2, [r3]
 287              	.L10:
 113:main.c        ****     }
 114:main.c        ****     #ifdef BT
 115:main.c        ****         if (STATE == TRANSMIT || STATE == WAIT_TO_LAUNCH){
 288              		.loc 1 115 0
 289 0026 0F4B     		ldr	r3, .L13+4
 290 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 291 002a 052B     		cmp	r3, #5
 292 002c 03D0     		beq	.L11
 293              		.loc 1 115 0 is_stmt 0 discriminator 1
 294 002e 0D4B     		ldr	r3, .L13+4
 295 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296 0032 012B     		cmp	r3, #1
 297 0034 0FD1     		bne	.L8
 298              	.L11:
 116:main.c        ****             update_Data++;
 299              		.loc 1 116 0 is_stmt 1
 300 0036 0D4B     		ldr	r3, .L13+12
 301 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 003a 0133     		adds	r3, r3, #1
 303 003c DAB2     		uxtb	r2, r3
 304 003e 0B4B     		ldr	r3, .L13+12
 305 0040 1A70     		strb	r2, [r3]
 117:main.c        ****             if (update_Data == 50){
 306              		.loc 1 117 0
 307 0042 0A4B     		ldr	r3, .L13+12
 308 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 0046 322B     		cmp	r3, #50
 310 0048 05D1     		bne	.L8
 118:main.c        ****                 transmit_flag = 1;
 311              		.loc 1 118 0
 312 004a 094B     		ldr	r3, .L13+16
 313 004c 0122     		movs	r2, #1
 314 004e 1A60     		str	r2, [r3]
 119:main.c        ****                 update_Data = 0;
 315              		.loc 1 119 0
 316 0050 064B     		ldr	r3, .L13+12
 317 0052 0022     		movs	r2, #0
 318 0054 1A70     		strb	r2, [r3]
 319              	.L8:
 120:main.c        ****             }
 121:main.c        ****         }
 122:main.c        ****             
 123:main.c        ****     #endif
 124:main.c        **** }
 320              		.loc 1 124 0
 321 0056 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 0058 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 9


 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 005c 7047     		bx	lr
 328              	.L14:
 329 005e 00BF     		.align	2
 330              	.L13:
 331 0060 6D640040 		.word	1073767533
 332 0064 00000000 		.word	STATE
 333 0068 00000000 		.word	wait_flag
 334 006c 00000000 		.word	update_Data
 335 0070 00000000 		.word	transmit_flag
 336              		.cfi_endproc
 337              	.LFE65:
 338              		.size	Countdown_ISR_Handler, .-Countdown_ISR_Handler
 339              		.section	.text.rx_interrupt,"ax",%progbits
 340              		.align	2
 341              		.global	rx_interrupt
 342              		.thumb
 343              		.thumb_func
 344              		.type	rx_interrupt, %function
 345              	rx_interrupt:
 346              	.LFB66:
 125:main.c        **** 
 126:main.c        **** CY_ISR(rx_interrupt){
 347              		.loc 1 126 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 98B5     		push	{r3, r4, r7, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 3, -16
 354              		.cfi_offset 4, -12
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 127:main.c        ****     #ifdef BT
 128:main.c        ****     while (UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 359              		.loc 1 128 0
 360 0004 14E0     		b	.L16
 361              	.L17:
 129:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 362              		.loc 1 129 0
 363 0006 0E4B     		ldr	r3, .L18
 364 0008 1C68     		ldr	r4, [r3]
 365 000a 631C     		adds	r3, r4, #1
 366 000c 0C4A     		ldr	r2, .L18
 367 000e 1360     		str	r3, [r2]
 368 0010 FFF7FEFF 		bl	UART_GetChar
 369 0014 0346     		mov	r3, r0
 370 0016 1A46     		mov	r2, r3
 371 0018 0A4B     		ldr	r3, .L18+4
 372 001a 1A55     		strb	r2, [r3, r4]
 130:main.c        ****         if ((msg_count - 3) == bytes)
 373              		.loc 1 130 0
 374 001c 084B     		ldr	r3, .L18
 375 001e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 10


 376 0020 DA1E     		subs	r2, r3, #3
 377 0022 094B     		ldr	r3, .L18+8
 378 0024 1B68     		ldr	r3, [r3]
 379 0026 9A42     		cmp	r2, r3
 380 0028 02D1     		bne	.L16
 131:main.c        ****             rxflag = 1;
 381              		.loc 1 131 0
 382 002a 084B     		ldr	r3, .L18+12
 383 002c 0122     		movs	r2, #1
 384 002e 1A60     		str	r2, [r3]
 385              	.L16:
 128:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 386              		.loc 1 128 0
 387 0030 FFF7FEFF 		bl	UART_ReadRxStatus
 388 0034 0346     		mov	r3, r0
 389 0036 03F02003 		and	r3, r3, #32
 390 003a 002B     		cmp	r3, #0
 391 003c E3D1     		bne	.L17
 132:main.c        ****     }
 133:main.c        ****     #endif
 134:main.c        **** }
 392              		.loc 1 134 0
 393 003e 98BD     		pop	{r3, r4, r7, pc}
 394              	.L19:
 395              		.align	2
 396              	.L18:
 397 0040 00000000 		.word	msg_count
 398 0044 00000000 		.word	RxBuffer
 399 0048 00000000 		.word	bytes
 400 004c 00000000 		.word	rxflag
 401              		.cfi_endproc
 402              	.LFE66:
 403              		.size	rx_interrupt, .-rx_interrupt
 404              		.section	.text.temp_interrupt,"ax",%progbits
 405              		.align	2
 406              		.global	temp_interrupt
 407              		.thumb
 408              		.thumb_func
 409              		.type	temp_interrupt, %function
 410              	temp_interrupt:
 411              	.LFB67:
 135:main.c        **** 
 136:main.c        **** CY_ISR(temp_interrupt){
 412              		.loc 1 136 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 137:main.c        ****     adjust_timer_STATUS;
 422              		.loc 1 137 0
 423 0004 094B     		ldr	r3, .L22
 424 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 11


 138:main.c        ****     if (STATE == WAIT_TO_LAUNCH){ 
 425              		.loc 1 138 0
 426 0008 094B     		ldr	r3, .L22+4
 427 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 000c 012B     		cmp	r3, #1
 429 000e 08D1     		bne	.L20
 139:main.c        ****         wait_flag = 1;
 430              		.loc 1 139 0
 431 0010 084B     		ldr	r3, .L22+8
 432 0012 0122     		movs	r2, #1
 433 0014 1A70     		strb	r2, [r3]
 140:main.c        ****         countdown++;
 434              		.loc 1 140 0
 435 0016 084B     		ldr	r3, .L22+12
 436 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437 001a 0133     		adds	r3, r3, #1
 438 001c DAB2     		uxtb	r2, r3
 439 001e 064B     		ldr	r3, .L22+12
 440 0020 1A70     		strb	r2, [r3]
 441              	.L20:
 141:main.c        ****     }
 142:main.c        **** }
 442              		.loc 1 142 0
 443 0022 BD46     		mov	sp, r7
 444              		.cfi_def_cfa_register 13
 445              		@ sp needed
 446 0024 5DF8047B 		ldr	r7, [sp], #4
 447              		.cfi_restore 7
 448              		.cfi_def_cfa_offset 0
 449 0028 7047     		bx	lr
 450              	.L23:
 451 002a 00BF     		.align	2
 452              	.L22:
 453 002c 67650040 		.word	1073767783
 454 0030 00000000 		.word	STATE
 455 0034 00000000 		.word	wait_flag
 456 0038 00000000 		.word	countdown
 457              		.cfi_endproc
 458              	.LFE67:
 459              		.size	temp_interrupt, .-temp_interrupt
 460              		.section	.rodata
 461              		.align	2
 462              	.LC6:
 463 0000 50536F43 		.ascii	"PSoC 5LP: O-Vac\000"
 463      20354C50 
 463      3A204F2D 
 463      56616300 
 464              		.align	2
 465              	.LC7:
 466 0010 49324320 		.ascii	"I2C Working\000"
 466      576F726B 
 466      696E6700 
 467              		.align	2
 468              	.LC8:
 469 001c 53642076 		.ascii	"Sd vol succeed\000"
 469      6F6C2073 
 469      75636365 
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 12


 469      656400
 470 002b 00       		.align	2
 471              	.LC9:
 472 002c 53642076 		.ascii	"Sd vol failed\000"
 472      6F6C2066 
 472      61696C65 
 472      6400
 473 003a 0000     		.align	2
 474              	.LC10:
 475 003c 666F726D 		.ascii	"format Succeeded\000"
 475      61742053 
 475      75636365 
 475      65646564 
 475      00
 476 004d 000000   		.align	2
 477              	.LC11:
 478 0050 666F726D 		.ascii	"format Failed\000"
 478      61742046 
 478      61696C65 
 478      6400
 479 005e 0000     		.align	2
 480              	.LC12:
 481 0060 7700     		.ascii	"w\000"
 482 0062 0000     		.align	2
 483              	.LC13:
 484 0064 46696C65 		.ascii	"File \000"
 484      2000
 485 006a 0000     		.align	2
 486              	.LC14:
 487 006c 77617320 		.ascii	"was opened\000"
 487      6F70656E 
 487      656400
 488 0077 00       		.align	2
 489              	.LC15:
 490 0078 77726974 		.ascii	"written to file\000"
 490      74656E20 
 490      746F2066 
 490      696C6500 
 491              		.align	2
 492              	.LC16:
 493 0088 4661696C 		.ascii	"Failed to write\000"
 493      65642074 
 493      6F207772 
 493      69746500 
 494              		.align	2
 495              	.LC17:
 496 0098 66696C65 		.ascii	"file not created\000"
 496      206E6F74 
 496      20637265 
 496      61746564 
 496      00
 497 00a9 000000   		.align	2
 498              	.LC18:
 499 00ac 0A2D2D2D 		.ascii	"\012------------\012\000"
 499      2D2D2D2D 
 499      2D2D2D2D 
 499      2D0A00
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 13


 500              		.global	__aeabi_i2f
 501              		.global	__aeabi_f2d
 502              		.global	__aeabi_dmul
 503              		.global	__aeabi_d2f
 504              		.global	__aeabi_fadd
 505              		.global	__aeabi_fdiv
 506              		.global	__aeabi_f2iz
 507              		.global	__aeabi_fsub
 508              		.global	__aeabi_fmul
 509 00bb 00       		.align	2
 510              	.LC19:
 511 00bc 70726573 		.ascii	"pressure: %d.%04d, %d\012\000"
 511      73757265 
 511      3A202564 
 511      2E253034 
 511      642C2025 
 512 00d3 00       		.align	2
 513              	.LC20:
 514 00d4 25642564 		.ascii	"%d%d\000"
 514      00
 515 00d9 000000   		.align	2
 516              	.LC21:
 517 00dc 53544154 		.ascii	"STATE: DESCENT\000"
 517      453A2044 
 517      45534345 
 517      4E5400
 518 00eb 00       		.align	2
 519              	.LC22:
 520 00ec 542D6D69 		.ascii	"T-minus %d seconds\012\000"
 520      6E757320 
 520      25642073 
 520      65636F6E 
 520      64730A00 
 521              		.align	2
 522              	.LC23:
 523 0100 53544154 		.ascii	"STATE: LANDED\000"
 523      453A204C 
 523      414E4445 
 523      4400
 524 010e 0000     		.align	2
 525              	.LC24:
 526 0110 53544154 		.ascii	"STATE: LANDED ***********\012\000"
 526      453A204C 
 526      414E4445 
 526      44202A2A 
 526      2A2A2A2A 
 527 012b 00       		.align	2
 528              	.LC25:
 529 012c 53544154 		.ascii	"STATE: WAIT\000"
 529      453A2057 
 529      41495400 
 530              		.align	2
 531              	.LC26:
 532 0138 56414355 		.ascii	"VACUUMING\000"
 532      554D494E 
 532      4700
 533 0142 0000     		.align	2
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 14


 534              	.LC27:
 535 0144 53544154 		.ascii	"STATE: VACUUMING ***********\012\000"
 535      453A2056 
 535      41435555 
 535      4D494E47 
 535      202A2A2A 
 536 0162 0000     		.align	2
 537              	.LC28:
 538 0164 53544154 		.ascii	"STATE: RESURFACING\000"
 538      453A2052 
 538      45535552 
 538      46414349 
 538      4E4700
 539 0177 00       		.align	2
 540              	.LC29:
 541 0178 53544154 		.ascii	"STATE: RESURFACING ***********\012\000"
 541      453A2052 
 541      45535552 
 541      46414349 
 541      4E47202A 
 542              		.align	2
 543              	.LC30:
 544 0198 57415445 		.ascii	"WATER DETECTED\000"
 544      52204445 
 544      54454354 
 544      454400
 545 01a7 00       		.align	2
 546              	.LC31:
 547 01a8 5452414E 		.ascii	"TRANSMIT\000"
 547      534D4954 
 547      00
 548 01b1 000000   		.align	2
 549              	.LC32:
 550 01b4 53544154 		.ascii	"STATE: TRANSMIT ***********\012\000"
 550      453A2054 
 550      52414E53 
 550      4D495420 
 550      2A2A2A2A 
 551 01d1 000000   		.align	2
 552              	.LC0:
 553 01d4 53595354 		.ascii	"SYSTEM_CHECK\000"
 553      454D5F43 
 553      4845434B 
 553      00
 554 01e1 00       		.space	1
 555 01e2 0000     		.align	2
 556              	.LC1:
 557 01e4 53544154 		.ascii	"STATE: DESCENDING\012\000"
 557      453A2044 
 557      45534345 
 557      4E44494E 
 557      470A00
 558 01f7 00       		.align	2
 559              	.LC2:
 560 01f8 53544154 		.ascii	"STATE: LANDED\012\000"
 560      453A204C 
 560      414E4445 
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 15


 560      440A00
 561 0207 00       		.align	2
 562              	.LC3:
 563 0208 53544154 		.ascii	"STATE: VACUUMING\012\000"
 563      453A2056 
 563      41435555 
 563      4D494E47 
 563      0A00
 564 021a 0000     		.align	2
 565              	.LC4:
 566 021c 53544154 		.ascii	"STATE: RESURFACE\012\000"
 566      453A2052 
 566      45535552 
 566      46414345 
 566      0A00
 567 022e 0000     		.align	2
 568              	.LC5:
 569 0230 53544154 		.ascii	"STATE: TRANSMIT\012\000"
 569      453A2054 
 569      52414E53 
 569      4D49540A 
 569      00
 570 0241 000000   		.section	.text.main,"ax",%progbits
 571              		.align	2
 572              		.global	main
 573              		.thumb
 574              		.thumb_func
 575              		.type	main, %function
 576              	main:
 577              	.LFB68:
 143:main.c        **** 
 144:main.c        **** int main()
 145:main.c        **** {
 578              		.loc 1 145 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 296
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582 0000 B0B5     		push	{r4, r5, r7, lr}
 583              		.cfi_def_cfa_offset 16
 584              		.cfi_offset 4, -16
 585              		.cfi_offset 5, -12
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 CCB0     		sub	sp, sp, #304
 589              		.cfi_def_cfa_offset 320
 590 0004 02AF     		add	r7, sp, #8
 591              		.cfi_def_cfa 7, 312
 146:main.c        ****     int num = 0, decimals = 0;                                       // ADC Voltage conversion plac
 592              		.loc 1 146 0
 593 0006 0023     		movs	r3, #0
 594 0008 C7F81C31 		str	r3, [r7, #284]
 595 000c 0023     		movs	r3, #0
 596 000e C7F81831 		str	r3, [r7, #280]
 147:main.c        ****     float voltage = 0, temp = 0, output = 0, pressure_avg = 0;       // ADC Voltage conversion vari
 597              		.loc 1 147 0
 598 0012 4FF00003 		mov	r3, #0
 599 0016 C7F81431 		str	r3, [r7, #276]	@ float
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 16


 600 001a 4FF00003 		mov	r3, #0
 601 001e C7F81031 		str	r3, [r7, #272]	@ float
 602 0022 4FF00003 		mov	r3, #0
 603 0026 C7F80C31 		str	r3, [r7, #268]	@ float
 604 002a 4FF00003 		mov	r3, #0
 605 002e C7F82431 		str	r3, [r7, #292]	@ float
 148:main.c        ****     char buf[50], tempbuf[20] = {}, curState[14] = "SYSTEM_CHECK";  // buffers, UART and initial st
 606              		.loc 1 148 0
 607 0032 07F1BC03 		add	r3, r7, #188
 608 0036 0022     		movs	r2, #0
 609 0038 1A60     		str	r2, [r3]
 610 003a 0433     		adds	r3, r3, #4
 611 003c 0022     		movs	r2, #0
 612 003e 1A60     		str	r2, [r3]
 613 0040 0433     		adds	r3, r3, #4
 614 0042 0022     		movs	r2, #0
 615 0044 1A60     		str	r2, [r3]
 616 0046 0433     		adds	r3, r3, #4
 617 0048 0022     		movs	r2, #0
 618 004a 1A60     		str	r2, [r3]
 619 004c 0433     		adds	r3, r3, #4
 620 004e 0022     		movs	r2, #0
 621 0050 1A60     		str	r2, [r3]
 622 0052 0433     		adds	r3, r3, #4
 623 0054 A04B     		ldr	r3, .L85+8
 624 0056 07F1AC04 		add	r4, r7, #172
 625 005a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 626 005c 07C4     		stmia	r4!, {r0, r1, r2}
 627 005e 2370     		strb	r3, [r4]
 628 0060 0023     		movs	r3, #0
 629 0062 87F8B930 		strb	r3, [r7, #185]
 149:main.c        ****     char descendbuf[DESCENDING_LEN] = STATE_DESCENDING;             // buffers for transmitting sta
 630              		.loc 1 149 0
 631 0066 9D4B     		ldr	r3, .L85+12
 632 0068 07F19804 		add	r4, r7, #152
 633 006c 1D46     		mov	r5, r3
 634 006e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 635 0070 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 636 0072 2B68     		ldr	r3, [r5]
 637 0074 2380     		strh	r3, [r4]	@ movhi
 150:main.c        ****     char landedbuf[LANDED_LEN] = STATE_LANDED;              
 638              		.loc 1 150 0
 639 0076 9A4B     		ldr	r3, .L85+16
 640 0078 07F18804 		add	r4, r7, #136
 641 007c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 642 007e 07C4     		stmia	r4!, {r0, r1, r2}
 643 0080 2380     		strh	r3, [r4]	@ movhi
 151:main.c        ****     char vacuumbuf[VACUUM_LEN] = STATE_VACUUM;
 644              		.loc 1 151 0
 645 0082 984B     		ldr	r3, .L85+20
 646 0084 07F17404 		add	r4, r7, #116
 647 0088 1D46     		mov	r5, r3
 648 008a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 649 008c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 650 008e 2B68     		ldr	r3, [r5]
 651 0090 2370     		strb	r3, [r4]
 152:main.c        ****     char resurfbuf[RESURFACE_LEN] = STATE_RESURFACE;
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 17


 652              		.loc 1 152 0
 653 0092 954B     		ldr	r3, .L85+24
 654 0094 07F16004 		add	r4, r7, #96
 655 0098 1D46     		mov	r5, r3
 656 009a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 657 009c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 658 009e 2B68     		ldr	r3, [r5]
 659 00a0 2370     		strb	r3, [r4]
 153:main.c        ****     char transbuf[TRANSMIT_LEN] = STATE_TRANSMIT;
 660              		.loc 1 153 0
 661 00a2 924B     		ldr	r3, .L85+28
 662 00a4 07F15004 		add	r4, r7, #80
 663 00a8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 664 00aa 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 154:main.c        ****     int stateMsgCount = 0;
 665              		.loc 1 154 0
 666 00ae 0023     		movs	r3, #0
 667 00b0 C7F82031 		str	r3, [r7, #288]
 155:main.c        ****     
 156:main.c        ****     int16_t ax, ay, az, i;
 157:main.c        ****     int16_t gx, gy, gz;
 158:main.c        ****     int16_t z_offset = 0;
 668              		.loc 1 158 0
 669 00b4 0023     		movs	r3, #0
 670 00b6 A7F80A31 		strh	r3, [r7, #266]	@ movhi
 159:main.c        ****     int tens = 0, ones = 0;                     // digit place variables for message len of bluetoo
 671              		.loc 1 159 0
 672 00ba 0023     		movs	r3, #0
 673 00bc FB64     		str	r3, [r7, #76]
 674 00be 0023     		movs	r3, #0
 675 00c0 C7F80431 		str	r3, [r7, #260]
 160:main.c        ****     
 161:main.c        ****     /* Start the components */
 162:main.c        ****     CYGlobalIntEnable;                          // enable global interrupts
 676              		.loc 1 162 0
 677              	@ 162 "main.c" 1
 678 00c4 62B6     		CPSIE   i
 679              	@ 0 "" 2
 163:main.c        ****     I2C_Master_Start(); 
 680              		.loc 1 163 0
 681              		.thumb
 682 00c6 FFF7FEFF 		bl	I2C_Master_Start
 164:main.c        ****     ADC_Start();
 683              		.loc 1 164 0
 684 00ca FFF7FEFF 		bl	ADC_Start
 165:main.c        ****     Sample_Timer_Start();                       // start timer module
 685              		.loc 1 165 0
 686 00ce FFF7FEFF 		bl	Sample_Timer_Start
 166:main.c        ****     Sample_ISR_StartEx(Sample_ISR_Handler);     // reference ISR function
 687              		.loc 1 166 0
 688 00d2 8748     		ldr	r0, .L85+32
 689 00d4 FFF7FEFF 		bl	Sample_ISR_StartEx
 167:main.c        ****     rx_interrupt_StartEx(rx_interrupt);
 690              		.loc 1 167 0
 691 00d8 8648     		ldr	r0, .L85+36
 692 00da FFF7FEFF 		bl	rx_interrupt_StartEx
 168:main.c        ****     //moisture_isr_StartEx(Moisture_ISR_Handler); // moisture isr start
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 18


 169:main.c        ****     //Comp_Start();                               // comparator for moisture start
 170:main.c        ****     UART_Start();
 693              		.loc 1 170 0
 694 00de FFF7FEFF 		bl	UART_Start
 171:main.c        ****     
 172:main.c        ****     
 173:main.c        ****     #ifdef LCD
 174:main.c        ****         LiquidCrystal_I2C_init(Addr,16,2,0);        // initialize I2C communication with LCD
 695              		.loc 1 174 0
 696 00e2 854B     		ldr	r3, .L85+40
 697 00e4 1B68     		ldr	r3, [r3]
 698 00e6 DBB2     		uxtb	r3, r3
 699 00e8 1846     		mov	r0, r3
 700 00ea 1021     		movs	r1, #16
 701 00ec 0222     		movs	r2, #2
 702 00ee 0023     		movs	r3, #0
 703 00f0 FFF7FEFF 		bl	LiquidCrystal_I2C_init
 175:main.c        ****         begin(); 
 704              		.loc 1 175 0
 705 00f4 FFF7FEFF 		bl	begin
 176:main.c        ****     
 177:main.c        ****     #endif
 178:main.c        ****    
 179:main.c        ****     /* initialize MPU6050 */
 180:main.c        ****     #ifdef MPU6050
 181:main.c        ****         MPU6050_init();    
 706              		.loc 1 181 0
 707 00f8 FFF7FEFF 		bl	MPU6050_init
 182:main.c        **** 	    MPU6050_initialize(); 
 708              		.loc 1 182 0
 709 00fc FFF7FEFF 		bl	MPU6050_initialize
 183:main.c        ****     #endif
 184:main.c        ****         
 185:main.c        ****     #ifdef LCD
 186:main.c        ****         /* Startup Display */
 187:main.c        ****         LCD_print("PSoC 5LP: O-Vac");
 710              		.loc 1 187 0
 711 0100 7E48     		ldr	r0, .L85+44
 712 0102 FFF7FEFF 		bl	LCD_print
 188:main.c        ****         setCursor(0,1);
 713              		.loc 1 188 0
 714 0106 0020     		movs	r0, #0
 715 0108 0121     		movs	r1, #1
 716 010a FFF7FEFF 		bl	setCursor
 189:main.c        ****         LCD_print("I2C Working");
 717              		.loc 1 189 0
 718 010e 7C48     		ldr	r0, .L85+48
 719 0110 FFF7FEFF 		bl	LCD_print
 190:main.c        ****         
 191:main.c        ****         CyDelay(1000u);   
 720              		.loc 1 191 0
 721 0114 4FF47A70 		mov	r0, #1000
 722 0118 FFF7FEFF 		bl	CyDelay
 192:main.c        ****         clear();
 723              		.loc 1 192 0
 724 011c FFF7FEFF 		bl	clear
 193:main.c        ****     #endif
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 19


 194:main.c        ****     
 195:main.c        ****     /* Start the ADC conversion */
 196:main.c        ****     ADC_StartConvert();
 725              		.loc 1 196 0
 726 0120 FFF7FEFF 		bl	ADC_StartConvert
 197:main.c        **** 
 198:main.c        ****     /* Start SD card*/
 199:main.c        ****     #ifdef SD
 200:main.c        ****         {
 201:main.c        ****             FS_Init();
 727              		.loc 1 201 0
 728 0124 FFF7FEFF 		bl	FS_Init
 202:main.c        ****             FS_Mount(volume);
 729              		.loc 1 202 0
 730 0128 7648     		ldr	r0, .L85+52
 731 012a FFF7FEFF 		bl	FS_Mount
 203:main.c        ****             if(0 != FS_GetVolumeName(0u, volume, 9u))
 732              		.loc 1 203 0
 733 012e 0020     		movs	r0, #0
 734 0130 7449     		ldr	r1, .L85+52
 735 0132 0922     		movs	r2, #9
 736 0134 FFF7FEFF 		bl	FS_GetVolumeName
 737 0138 0346     		mov	r3, r0
 738 013a 002B     		cmp	r3, #0
 739 013c 03D0     		beq	.L25
 204:main.c        ****                 /* Getting volume name succeeded so prompt it on the LCD */
 205:main.c        ****                 LCD_print("Sd vol succeed");
 740              		.loc 1 205 0
 741 013e 7248     		ldr	r0, .L85+56
 742 0140 FFF7FEFF 		bl	LCD_print
 743 0144 02E0     		b	.L26
 744              	.L25:
 206:main.c        ****             else
 207:main.c        ****                 LCD_print("Sd vol failed");
 745              		.loc 1 207 0
 746 0146 7148     		ldr	r0, .L85+60
 747 0148 FFF7FEFF 		bl	LCD_print
 748              	.L26:
 208:main.c        ****                 
 209:main.c        ****             CyDelay(500u);
 749              		.loc 1 209 0
 750 014c 4FF4FA70 		mov	r0, #500
 751 0150 FFF7FEFF 		bl	CyDelay
 210:main.c        ****             clear();
 752              		.loc 1 210 0
 753 0154 FFF7FEFF 		bl	clear
 211:main.c        ****             if(0 == FS_FormatSD(volume))
 754              		.loc 1 211 0
 755 0158 6A48     		ldr	r0, .L85+52
 756 015a FFF7FEFF 		bl	FS_FormatSD
 757 015e 0346     		mov	r3, r0
 758 0160 002B     		cmp	r3, #0
 759 0162 03D1     		bne	.L27
 212:main.c        ****                 LCD_print("format Succeeded");
 760              		.loc 1 212 0
 761 0164 6A48     		ldr	r0, .L85+64
 762 0166 FFF7FEFF 		bl	LCD_print
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 20


 763 016a 02E0     		b	.L28
 764              	.L27:
 213:main.c        ****             else
 214:main.c        ****                 LCD_print("format Failed");
 765              		.loc 1 214 0
 766 016c 6948     		ldr	r0, .L85+68
 767 016e FFF7FEFF 		bl	LCD_print
 768              	.L28:
 215:main.c        ****           
 216:main.c        ****             CyDelay(500u);
 769              		.loc 1 216 0
 770 0172 4FF4FA70 		mov	r0, #500
 771 0176 FFF7FEFF 		bl	CyDelay
 217:main.c        ****             clear();
 772              		.loc 1 217 0
 773 017a FFF7FEFF 		bl	clear
 218:main.c        ****             
 219:main.c        ****             fsfile = FS_FOpen(file, "w");
 774              		.loc 1 219 0
 775 017e 6648     		ldr	r0, .L85+72
 776 0180 6649     		ldr	r1, .L85+76
 777 0182 FFF7FEFF 		bl	FS_FOpen
 778 0186 0246     		mov	r2, r0
 779 0188 654B     		ldr	r3, .L85+80
 780 018a 1A60     		str	r2, [r3]
 220:main.c        ****             if(fsfile)
 781              		.loc 1 220 0
 782 018c 644B     		ldr	r3, .L85+80
 783 018e 1B68     		ldr	r3, [r3]
 784 0190 002B     		cmp	r3, #0
 785 0192 27D0     		beq	.L29
 221:main.c        ****             {
 222:main.c        ****                 /* Indicate successful file creation message */
 223:main.c        ****                 LCD_print("File ");
 786              		.loc 1 223 0
 787 0194 6348     		ldr	r0, .L85+84
 788 0196 FFF7FEFF 		bl	LCD_print
 224:main.c        ****                 LCD_print("was opened");
 789              		.loc 1 224 0
 790 019a 6348     		ldr	r0, .L85+88
 791 019c FFF7FEFF 		bl	LCD_print
 225:main.c        ****                 /* Need some delay to indicate output on the LCD */
 226:main.c        ****                 CyDelay(500u);
 792              		.loc 1 226 0
 793 01a0 4FF4FA70 		mov	r0, #500
 794 01a4 FFF7FEFF 		bl	CyDelay
 227:main.c        ****                 clear();
 795              		.loc 1 227 0
 796 01a8 FFF7FEFF 		bl	clear
 228:main.c        ****                 
 229:main.c        ****                 if(0 != FS_Write(fsfile, file, strlen(file))) 
 797              		.loc 1 229 0
 798 01ac 5C4B     		ldr	r3, .L85+80
 799 01ae 1C68     		ldr	r4, [r3]
 800 01b0 5948     		ldr	r0, .L85+72
 801 01b2 FFF7FEFF 		bl	strlen
 802 01b6 0346     		mov	r3, r0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 21


 803 01b8 2046     		mov	r0, r4
 804 01ba 5749     		ldr	r1, .L85+72
 805 01bc 1A46     		mov	r2, r3
 806 01be FFF7FEFF 		bl	FS_Write
 807 01c2 0346     		mov	r3, r0
 808 01c4 002B     		cmp	r3, #0
 809 01c6 03D0     		beq	.L30
 230:main.c        ****                     /* Inditate that data was written to a file */
 231:main.c        ****                     LCD_print("written to file");
 810              		.loc 1 231 0
 811 01c8 5848     		ldr	r0, .L85+92
 812 01ca FFF7FEFF 		bl	LCD_print
 813 01ce 02E0     		b	.L31
 814              	.L30:
 232:main.c        ****                 else
 233:main.c        ****                     LCD_print("Failed to write");
 815              		.loc 1 233 0
 816 01d0 5748     		ldr	r0, .L85+96
 817 01d2 FFF7FEFF 		bl	LCD_print
 818              	.L31:
 234:main.c        ****                     clear();
 819              		.loc 1 234 0
 820 01d6 FFF7FEFF 		bl	clear
 235:main.c        ****                 CyDelay(500u);
 821              		.loc 1 235 0
 822 01da 4FF4FA70 		mov	r0, #500
 823 01de FFF7FEFF 		bl	CyDelay
 824 01e2 02E0     		b	.L32
 825              	.L29:
 236:main.c        ****             }
 237:main.c        ****             else
 238:main.c        ****                 LCD_print("file not created");
 826              		.loc 1 238 0
 827 01e4 5348     		ldr	r0, .L85+100
 828 01e6 FFF7FEFF 		bl	LCD_print
 829              	.L32:
 239:main.c        ****         }
 240:main.c        ****         FS_Write(fsfile, "\n------------\n", 14);
 830              		.loc 1 240 0
 831 01ea 4D4B     		ldr	r3, .L85+80
 832 01ec 1B68     		ldr	r3, [r3]
 833 01ee 1846     		mov	r0, r3
 834 01f0 5149     		ldr	r1, .L85+104
 835 01f2 0E22     		movs	r2, #14
 836 01f4 FFF7FEFF 		bl	FS_Write
 241:main.c        ****     #endif
 242:main.c        ****     
 243:main.c        ****     #ifdef LCD
 244:main.c        ****         /* Display the current State */
 245:main.c        ****         setCursor(0,0);    
 837              		.loc 1 245 0
 838 01f8 0020     		movs	r0, #0
 839 01fa 0021     		movs	r1, #0
 840 01fc FFF7FEFF 		bl	setCursor
 246:main.c        ****         LCD_print(curState);
 841              		.loc 1 246 0
 842 0200 07F1AC03 		add	r3, r7, #172
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 22


 843 0204 1846     		mov	r0, r3
 844 0206 FFF7FEFF 		bl	LCD_print
 247:main.c        ****     #endif
 248:main.c        ****     STATE = WAIT_TO_LAUNCH;
 845              		.loc 1 248 0
 846 020a 4C4B     		ldr	r3, .L85+108
 847 020c 0122     		movs	r2, #1
 848 020e 1A70     		strb	r2, [r3]
 249:main.c        ****     
 250:main.c        ****     Countdown_timer_Start();
 849              		.loc 1 250 0
 850 0210 FFF7FEFF 		bl	Countdown_timer_Start
 251:main.c        ****     adjust_timer_Start();
 851              		.loc 1 251 0
 852 0214 FFF7FEFF 		bl	adjust_timer_Start
 252:main.c        ****     countdown_StartEx(Countdown_ISR_Handler);
 853              		.loc 1 252 0
 854 0218 4948     		ldr	r0, .L85+112
 855 021a FFF7FEFF 		bl	countdown_StartEx
 253:main.c        ****     temp_isr_StartEx(temp_interrupt);
 856              		.loc 1 253 0
 857 021e 4948     		ldr	r0, .L85+116
 858 0220 FFF7FEFF 		bl	temp_isr_StartEx
 859              	.L83:
 860              	.LBB2:
 254:main.c        ****     
 255:main.c        ****     for(;;)
 256:main.c        ****     {
 257:main.c        ****         
 258:main.c        ****         if(ADC_IsEndConversion(ADC_RETURN_STATUS))
 861              		.loc 1 258 0
 862 0224 0120     		movs	r0, #1
 863 0226 FFF7FEFF 		bl	ADC_IsEndConversion
 864 022a 0346     		mov	r3, r0
 865 022c 002B     		cmp	r3, #0
 866 022e 00F0E980 		beq	.L33
 259:main.c        ****         {
 260:main.c        ****             output = ADC_GetResult32();
 867              		.loc 1 260 0
 868 0232 FFF7FEFF 		bl	ADC_GetResult32
 869 0236 0346     		mov	r3, r0
 870 0238 1846     		mov	r0, r3
 871 023a FFF7FEFF 		bl	__aeabi_i2f
 872 023e 0346     		mov	r3, r0
 873 0240 C7F80C31 		str	r3, [r7, #268]	@ float
 261:main.c        **** 
 262:main.c        ****             voltage = output * (3.32 / 4096);
 874              		.loc 1 262 0
 875 0244 D7F80C01 		ldr	r0, [r7, #268]	@ float
 876 0248 FFF7FEFF 		bl	__aeabi_f2d
 877 024c 0246     		mov	r2, r0
 878 024e 0B46     		mov	r3, r1
 879 0250 1046     		mov	r0, r2
 880 0252 1946     		mov	r1, r3
 881 0254 1EA3     		adr	r3, .L85
 882 0256 D3E90023 		ldrd	r2, [r3]
 883 025a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 23


 884 025e 0246     		mov	r2, r0
 885 0260 0B46     		mov	r3, r1
 886 0262 1046     		mov	r0, r2
 887 0264 1946     		mov	r1, r3
 888 0266 FFF7FEFF 		bl	__aeabi_d2f
 889 026a 0346     		mov	r3, r0
 890 026c C7F81431 		str	r3, [r7, #276]	@ float
 263:main.c        ****             if(wait_flag == 1){
 891              		.loc 1 263 0
 892 0270 354B     		ldr	r3, .L85+120
 893 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 0274 002B     		cmp	r3, #0
 895 0276 00F0C580 		beq	.L33
 264:main.c        ****                 if (press_id < MA_WINDOW){
 896              		.loc 1 264 0
 897 027a 344B     		ldr	r3, .L85+124
 898 027c 1B68     		ldr	r3, [r3]
 899 027e 0E2B     		cmp	r3, #14
 900 0280 0BDC     		bgt	.L34
 265:main.c        ****                     pressure_sum += voltage;     
 901              		.loc 1 265 0
 902 0282 334B     		ldr	r3, .L85+128
 903 0284 1B68     		ldr	r3, [r3]	@ float
 904 0286 1846     		mov	r0, r3
 905 0288 D7F81411 		ldr	r1, [r7, #276]	@ float
 906 028c FFF7FEFF 		bl	__aeabi_fadd
 907 0290 0346     		mov	r3, r0
 908 0292 1A46     		mov	r2, r3
 909 0294 2E4B     		ldr	r3, .L85+128
 910 0296 1A60     		str	r2, [r3]	@ float
 911 0298 ACE0     		b	.L35
 912              	.L34:
 266:main.c        ****                 }
 267:main.c        ****                 else if(press_id == MA_WINDOW){
 913              		.loc 1 267 0
 914 029a 2C4B     		ldr	r3, .L85+124
 915 029c 1B68     		ldr	r3, [r3]
 916 029e 0F2B     		cmp	r3, #15
 917 02a0 5AD1     		bne	.L36
 268:main.c        ****                     pressure_sum += voltage;
 918              		.loc 1 268 0
 919 02a2 2B4B     		ldr	r3, .L85+128
 920 02a4 1B68     		ldr	r3, [r3]	@ float
 921 02a6 1846     		mov	r0, r3
 922 02a8 D7F81411 		ldr	r1, [r7, #276]	@ float
 923 02ac FFF7FEFF 		bl	__aeabi_fadd
 924 02b0 0346     		mov	r3, r0
 925 02b2 1A46     		mov	r2, r3
 926 02b4 264B     		ldr	r3, .L85+128
 927 02b6 1A60     		str	r2, [r3]	@ float
 269:main.c        ****                     pressure_avg = pressure_sum/MA_WINDOW;                            // compute ba
 928              		.loc 1 269 0
 929 02b8 254B     		ldr	r3, .L85+128
 930 02ba 1B68     		ldr	r3, [r3]	@ float
 931 02bc 1846     		mov	r0, r3
 932 02be 2549     		ldr	r1, .L85+132
 933 02c0 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 24


 934 02c4 0346     		mov	r3, r0
 935 02c6 C7F82431 		str	r3, [r7, #292]	@ float
 936 02ca 93E0     		b	.L35
 937              	.L86:
 938 02cc AFF30080 		.align	3
 939              	.L85:
 940 02d0 8FC2F528 		.word	687194767
 941 02d4 5C8F4A3F 		.word	1061850972
 942 02d8 D4010000 		.word	.LC0
 943 02dc E4010000 		.word	.LC1
 944 02e0 F8010000 		.word	.LC2
 945 02e4 08020000 		.word	.LC3
 946 02e8 1C020000 		.word	.LC4
 947 02ec 30020000 		.word	.LC5
 948 02f0 00000000 		.word	Sample_ISR_Handler
 949 02f4 00000000 		.word	rx_interrupt
 950 02f8 00000000 		.word	Addr
 951 02fc 00000000 		.word	.LC6
 952 0300 10000000 		.word	.LC7
 953 0304 00000000 		.word	volume
 954 0308 1C000000 		.word	.LC8
 955 030c 2C000000 		.word	.LC9
 956 0310 3C000000 		.word	.LC10
 957 0314 50000000 		.word	.LC11
 958 0318 00000000 		.word	file
 959 031c 60000000 		.word	.LC12
 960 0320 00000000 		.word	fsfile
 961 0324 64000000 		.word	.LC13
 962 0328 6C000000 		.word	.LC14
 963 032c 78000000 		.word	.LC15
 964 0330 88000000 		.word	.LC16
 965 0334 98000000 		.word	.LC17
 966 0338 AC000000 		.word	.LC18
 967 033c 00000000 		.word	STATE
 968 0340 00000000 		.word	Countdown_ISR_Handler
 969 0344 00000000 		.word	temp_interrupt
 970 0348 00000000 		.word	wait_flag
 971 034c 00000000 		.word	press_id
 972 0350 00000000 		.word	pressure_sum
 973 0354 00007041 		.word	1097859072
 974              	.L36:
 975              	.LBB3:
 270:main.c        ****                 }
 271:main.c        ****                 else{
 272:main.c        ****                     pressure_avg = ComputeMA(pressure_avg, MA_WINDOW, voltage);
 976              		.loc 1 272 0
 977 0358 D7F82401 		ldr	r0, [r7, #292]	@ float
 978 035c 0F21     		movs	r1, #15
 979 035e D7F81421 		ldr	r2, [r7, #276]	@ float
 980 0362 FFF7FEFF 		bl	ComputeMA
 981 0366 C7F82401 		str	r0, [r7, #292]	@ float
 273:main.c        ****                     num = pressure_avg;
 982              		.loc 1 273 0
 983 036a D7F82401 		ldr	r0, [r7, #292]	@ float
 984 036e FFF7FEFF 		bl	__aeabi_f2iz
 985 0372 0346     		mov	r3, r0
 986 0374 C7F81C31 		str	r3, [r7, #284]
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 25


 274:main.c        ****                     temp = pressure_avg - num;
 987              		.loc 1 274 0
 988 0378 D7F81C01 		ldr	r0, [r7, #284]
 989 037c FFF7FEFF 		bl	__aeabi_i2f
 990 0380 0346     		mov	r3, r0
 991 0382 D7F82401 		ldr	r0, [r7, #292]	@ float
 992 0386 1946     		mov	r1, r3
 993 0388 FFF7FEFF 		bl	__aeabi_fsub
 994 038c 0346     		mov	r3, r0
 995 038e C7F81031 		str	r3, [r7, #272]	@ float
 275:main.c        ****                     decimals = temp * 10000;
 996              		.loc 1 275 0
 997 0392 D7F81001 		ldr	r0, [r7, #272]	@ float
 998 0396 B549     		ldr	r1, .L87
 999 0398 FFF7FEFF 		bl	__aeabi_fmul
 1000 039c 0346     		mov	r3, r0
 1001 039e 1846     		mov	r0, r3
 1002 03a0 FFF7FEFF 		bl	__aeabi_f2iz
 1003 03a4 0346     		mov	r3, r0
 1004 03a6 C7F81831 		str	r3, [r7, #280]
 276:main.c        ****                     char sdbuf[60] = {};
 1005              		.loc 1 276 0
 1006 03aa 3B1D     		adds	r3, r7, #4
 1007 03ac 1A46     		mov	r2, r3
 1008 03ae 3C23     		movs	r3, #60
 1009 03b0 1046     		mov	r0, r2
 1010 03b2 0021     		movs	r1, #0
 1011 03b4 1A46     		mov	r2, r3
 1012 03b6 FFF7FEFF 		bl	memset
 277:main.c        ****                     #ifdef SD
 278:main.c        ****                         sprintf(sdbuf, "pressure: %d.%04d, %d\n", num, decimals, (int16)output); //
 1013              		.loc 1 278 0
 1014 03ba D7F80C01 		ldr	r0, [r7, #268]	@ float
 1015 03be FFF7FEFF 		bl	__aeabi_f2iz
 1016 03c2 0346     		mov	r3, r0
 1017 03c4 9BB2     		uxth	r3, r3
 1018 03c6 1BB2     		sxth	r3, r3
 1019 03c8 3A1D     		adds	r2, r7, #4
 1020 03ca 0093     		str	r3, [sp]
 1021 03cc 1046     		mov	r0, r2
 1022 03ce A849     		ldr	r1, .L87+4
 1023 03d0 D7F81C21 		ldr	r2, [r7, #284]
 1024 03d4 D7F81831 		ldr	r3, [r7, #280]
 1025 03d8 FFF7FEFF 		bl	sprintf
 279:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));                           
 1026              		.loc 1 279 0
 1027 03dc A54B     		ldr	r3, .L87+8
 1028 03de 1C68     		ldr	r4, [r3]
 1029 03e0 3B1D     		adds	r3, r7, #4
 1030 03e2 1846     		mov	r0, r3
 1031 03e4 FFF7FEFF 		bl	strlen
 1032 03e8 0246     		mov	r2, r0
 1033 03ea 3B1D     		adds	r3, r7, #4
 1034 03ec 2046     		mov	r0, r4
 1035 03ee 1946     		mov	r1, r3
 1036 03f0 FFF7FEFF 		bl	FS_Write
 1037              	.L35:
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 26


 1038              	.LBE3:
 280:main.c        ****                     #endif 
 281:main.c        ****                 }
 282:main.c        ****                 wait_flag = 0;
 1039              		.loc 1 282 0
 1040 03f4 A04B     		ldr	r3, .L87+12
 1041 03f6 0022     		movs	r2, #0
 1042 03f8 1A70     		strb	r2, [r3]
 283:main.c        ****                 press_id++;
 1043              		.loc 1 283 0
 1044 03fa A04B     		ldr	r3, .L87+16
 1045 03fc 1B68     		ldr	r3, [r3]
 1046 03fe 0133     		adds	r3, r3, #1
 1047 0400 9E4A     		ldr	r2, .L87+16
 1048 0402 1360     		str	r3, [r2]
 1049              	.L33:
 284:main.c        ****             }
 285:main.c        ****             
 286:main.c        ****         }
 287:main.c        ****         
 288:main.c        ****     /* Bluetooth message response*/
 289:main.c        ****     #ifdef BT
 290:main.c        ****         if (msg_count >= 2){
 1050              		.loc 1 290 0
 1051 0404 9E4B     		ldr	r3, .L87+20
 1052 0406 1B68     		ldr	r3, [r3]
 1053 0408 012B     		cmp	r3, #1
 1054 040a 2BDD     		ble	.L37
 1055              	.LBB4:
 291:main.c        ****             tens = RxBuffer[0] - 48;
 1056              		.loc 1 291 0
 1057 040c 9D4B     		ldr	r3, .L87+24
 1058 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1059 0410 303B     		subs	r3, r3, #48
 1060 0412 FB64     		str	r3, [r7, #76]
 292:main.c        ****             ones = RxBuffer[1] - 48;
 1061              		.loc 1 292 0
 1062 0414 9B4B     		ldr	r3, .L87+24
 1063 0416 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1064 0418 303B     		subs	r3, r3, #48
 1065 041a C7F80431 		str	r3, [r7, #260]
 293:main.c        ****             bytes = (tens * 10) + ones;
 1066              		.loc 1 293 0
 1067 041e FA6C     		ldr	r2, [r7, #76]
 1068 0420 1346     		mov	r3, r2
 1069 0422 9B00     		lsls	r3, r3, #2
 1070 0424 1344     		add	r3, r3, r2
 1071 0426 5B00     		lsls	r3, r3, #1
 1072 0428 1A46     		mov	r2, r3
 1073 042a D7F80431 		ldr	r3, [r7, #260]
 1074 042e 1344     		add	r3, r3, r2
 1075 0430 954A     		ldr	r2, .L87+28
 1076 0432 1360     		str	r3, [r2]
 294:main.c        ****             char t[5] = {};
 1077              		.loc 1 294 0
 1078 0434 0023     		movs	r3, #0
 1079 0436 3B64     		str	r3, [r7, #64]
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 27


 1080 0438 0023     		movs	r3, #0
 1081 043a 87F84430 		strb	r3, [r7, #68]
 295:main.c        ****             sprintf(t, "%d%d", tens, ones);
 1082              		.loc 1 295 0
 1083 043e FB6C     		ldr	r3, [r7, #76]
 1084 0440 07F14002 		add	r2, r7, #64
 1085 0444 1046     		mov	r0, r2
 1086 0446 9149     		ldr	r1, .L87+32
 1087 0448 1A46     		mov	r2, r3
 1088 044a D7F80431 		ldr	r3, [r7, #260]
 1089 044e FFF7FEFF 		bl	sprintf
 296:main.c        ****             setCursor(1, 0);
 1090              		.loc 1 296 0
 1091 0452 0120     		movs	r0, #1
 1092 0454 0021     		movs	r1, #0
 1093 0456 FFF7FEFF 		bl	setCursor
 297:main.c        ****             LCD_print(t);
 1094              		.loc 1 297 0
 1095 045a 07F14003 		add	r3, r7, #64
 1096 045e 1846     		mov	r0, r3
 1097 0460 FFF7FEFF 		bl	LCD_print
 1098              	.L37:
 1099              	.LBE4:
 298:main.c        ****         } 
 299:main.c        ****         
 300:main.c        ****         if(rxflag) {
 1100              		.loc 1 300 0
 1101 0464 8A4B     		ldr	r3, .L87+36
 1102 0466 1B68     		ldr	r3, [r3]
 1103 0468 002B     		cmp	r3, #0
 1104 046a 54D0     		beq	.L38
 301:main.c        ****             uint8_to_char(RxBuffer, &tempbuf[0], 20);
 1105              		.loc 1 301 0
 1106 046c 07F1BC03 		add	r3, r7, #188
 1107 0470 8448     		ldr	r0, .L87+24
 1108 0472 1946     		mov	r1, r3
 1109 0474 1422     		movs	r2, #20
 1110 0476 FFF7FEFF 		bl	uint8_to_char
 302:main.c        ****             BT_Process(&tempbuf[3], &STATE, bytes, &dataflag);
 1111              		.loc 1 302 0
 1112 047a 834B     		ldr	r3, .L87+28
 1113 047c 1A68     		ldr	r2, [r3]
 1114 047e 07F1BC03 		add	r3, r7, #188
 1115 0482 0333     		adds	r3, r3, #3
 1116 0484 1846     		mov	r0, r3
 1117 0486 8349     		ldr	r1, .L87+40
 1118 0488 834B     		ldr	r3, .L87+44
 1119 048a FFF7FEFF 		bl	BT_Process
 303:main.c        ****             if (STATE == DESCENDING){
 1120              		.loc 1 303 0
 1121 048e 814B     		ldr	r3, .L87+40
 1122 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1123 0492 022B     		cmp	r3, #2
 1124 0494 2AD1     		bne	.L39
 304:main.c        ****                 #ifdef LCD
 305:main.c        ****                     setCursor(0,0);
 1125              		.loc 1 305 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 28


 1126 0496 0020     		movs	r0, #0
 1127 0498 0021     		movs	r1, #0
 1128 049a FFF7FEFF 		bl	setCursor
 306:main.c        ****                     clear();
 1129              		.loc 1 306 0
 1130 049e FFF7FEFF 		bl	clear
 307:main.c        ****                     LCD_print("STATE: DESCENT");
 1131              		.loc 1 307 0
 1132 04a2 7E48     		ldr	r0, .L87+48
 1133 04a4 FFF7FEFF 		bl	LCD_print
 308:main.c        ****                 #endif
 309:main.c        ****                 #ifdef BT
 310:main.c        ****                     stateMsgCount = 0;
 1134              		.loc 1 310 0
 1135 04a8 0023     		movs	r3, #0
 1136 04aa C7F82031 		str	r3, [r7, #288]
 311:main.c        ****                     while (stateMsgCount < DESCENDING_LEN){
 1137              		.loc 1 311 0
 1138 04ae 19E0     		b	.L40
 1139              	.L43:
 312:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1140              		.loc 1 312 0
 1141 04b0 11E0     		b	.L41
 1142              	.L42:
 313:main.c        ****                             UART_PutChar(descendbuf[stateMsgCount++]);
 1143              		.loc 1 313 0
 1144 04b2 D7F82031 		ldr	r3, [r7, #288]
 1145 04b6 5A1C     		adds	r2, r3, #1
 1146 04b8 C7F82021 		str	r2, [r7, #288]
 1147 04bc 07F59472 		add	r2, r7, #296
 1148 04c0 1344     		add	r3, r3, r2
 1149 04c2 13F8903C 		ldrb	r3, [r3, #-144]	@ zero_extendqisi2
 1150 04c6 1846     		mov	r0, r3
 1151 04c8 FFF7FEFF 		bl	UART_PutChar
 314:main.c        ****                             if (stateMsgCount >= DESCENDING_LEN) break;
 1152              		.loc 1 314 0
 1153 04cc D7F82031 		ldr	r3, [r7, #288]
 1154 04d0 112B     		cmp	r3, #17
 1155 04d2 00DD     		ble	.L41
 1156 04d4 06E0     		b	.L40
 1157              	.L41:
 312:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1158              		.loc 1 312 0
 1159 04d6 FFF7FEFF 		bl	UART_ReadTxStatus
 1160 04da 0346     		mov	r3, r0
 1161 04dc 03F00803 		and	r3, r3, #8
 1162 04e0 002B     		cmp	r3, #0
 1163 04e2 E6D1     		bne	.L42
 1164              	.L40:
 311:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1165              		.loc 1 311 0
 1166 04e4 D7F82031 		ldr	r3, [r7, #288]
 1167 04e8 112B     		cmp	r3, #17
 1168 04ea E1DD     		ble	.L43
 1169              	.L39:
 315:main.c        ****                         }
 316:main.c        ****                     }
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 29


 317:main.c        ****                 #endif
 318:main.c        ****             }
 319:main.c        ****             msg_count = 0; bytes = 0;
 1170              		.loc 1 319 0
 1171 04ec 644B     		ldr	r3, .L87+20
 1172 04ee 0022     		movs	r2, #0
 1173 04f0 1A60     		str	r2, [r3]
 1174 04f2 654B     		ldr	r3, .L87+28
 1175 04f4 0022     		movs	r2, #0
 1176 04f6 1A60     		str	r2, [r3]
 320:main.c        ****             memset(RxBuffer, 0, BUFFER_LEN);
 1177              		.loc 1 320 0
 1178 04f8 6248     		ldr	r0, .L87+24
 1179 04fa 0021     		movs	r1, #0
 1180 04fc 4022     		movs	r2, #64
 1181 04fe FFF7FEFF 		bl	memset
 321:main.c        ****             memset(tempbuf, 0, 20);
 1182              		.loc 1 321 0
 1183 0502 07F1BC03 		add	r3, r7, #188
 1184 0506 1846     		mov	r0, r3
 1185 0508 0021     		movs	r1, #0
 1186 050a 1422     		movs	r2, #20
 1187 050c FFF7FEFF 		bl	memset
 322:main.c        ****             rxflag = 0;
 1188              		.loc 1 322 0
 1189 0510 5F4B     		ldr	r3, .L87+36
 1190 0512 0022     		movs	r2, #0
 1191 0514 1A60     		str	r2, [r3]
 1192              	.L38:
 323:main.c        ****         }
 324:main.c        ****     #endif
 325:main.c        ****     
 326:main.c        ****         /* Display Z-Acceleration */
 327:main.c        **** 
 328:main.c        ****         az = MPU6050_getAccelerationZ();
 1193              		.loc 1 328 0
 1194 0516 FFF7FEFF 		bl	MPU6050_getAccelerationZ
 1195 051a 0346     		mov	r3, r0
 1196 051c A7F80231 		strh	r3, [r7, #258]	@ movhi
 329:main.c        **** 
 330:main.c        ****         int t = 1;
 1197              		.loc 1 330 0
 1198 0520 0123     		movs	r3, #1
 1199 0522 BB64     		str	r3, [r7, #72]
 331:main.c        ****         /* State Machine */
 332:main.c        ****         switch (STATE){
 1200              		.loc 1 332 0
 1201 0524 5B4B     		ldr	r3, .L87+40
 1202 0526 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 0528 013B     		subs	r3, r3, #1
 1204 052a 042B     		cmp	r3, #4
 1205 052c 00F2C882 		bhi	.L84
 1206 0530 01A2     		adr	r2, .L46
 1207 0532 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1208 0536 00BF     		.p2align 2
 1209              	.L46:
 1210 0538 4D050000 		.word	.L45+1
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 30


 1211 053c 4B060000 		.word	.L47+1
 1212 0540 47080000 		.word	.L48+1
 1213 0544 DD090000 		.word	.L49+1
 1214 0548 9D0A0000 		.word	.L50+1
 1215              		.p2align 1
 1216              	.L45:
 1217              	.LBB5:
 333:main.c        ****     
 334:main.c        ****             case WAIT_TO_LAUNCH:
 335:main.c        ****                 id = 1;                                // Interrupt count.
 1218              		.loc 1 335 0
 1219 054c 544B     		ldr	r3, .L87+52
 1220 054e 0122     		movs	r2, #1
 1221 0550 1A60     		str	r2, [r3]
 336:main.c        ****                 data_time = 0;                        // data point num
 1222              		.loc 1 336 0
 1223 0552 544B     		ldr	r3, .L87+56
 1224 0554 0022     		movs	r2, #0
 1225 0556 1A60     		str	r2, [r3]
 337:main.c        ****                 sum = 0;                               // Sum of accelerometer values. 
 1226              		.loc 1 337 0
 1227 0558 534B     		ldr	r3, .L87+60
 1228 055a 0022     		movs	r2, #0
 1229 055c 1A60     		str	r2, [r3]
 338:main.c        ****                 average = 0;                        // Moving average variable.
 1230              		.loc 1 338 0
 1231 055e 534B     		ldr	r3, .L87+64
 1232 0560 0022     		movs	r2, #0
 1233 0562 1A80     		strh	r2, [r3]	@ movhi
 339:main.c        ****                 collect_flag = 0;                      // flag indicating when to record accelerati
 1234              		.loc 1 339 0
 1235 0564 524B     		ldr	r3, .L87+68
 1236 0566 0022     		movs	r2, #0
 1237 0568 1A70     		strb	r2, [r3]
 340:main.c        ****                 //wait_flag = 0;                         // flag indicating when to increment inter
 341:main.c        ****                 PANIC_flag = 0;                        // flag indicating water is present in housi
 1238              		.loc 1 341 0
 1239 056a 524B     		ldr	r3, .L87+72
 1240 056c 0022     		movs	r2, #0
 1241 056e 1A70     		strb	r2, [r3]
 342:main.c        ****                 //bool first_test = 1;                        // flag indicating first test(longer 
 343:main.c        ****                 testnum = 1; //countdown = 0;
 1242              		.loc 1 343 0
 1243 0570 514B     		ldr	r3, .L87+76
 1244 0572 0122     		movs	r2, #1
 1245 0574 1A70     		strb	r2, [r3]
 344:main.c        ****             
 345:main.c        ****                 if (transmit_flag){
 1246              		.loc 1 345 0
 1247 0576 514B     		ldr	r3, .L87+80
 1248 0578 1B68     		ldr	r3, [r3]
 1249 057a 002B     		cmp	r3, #0
 1250 057c 0BD0     		beq	.L51
 346:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &tens); // Here, the STATE variable only matte
 1251              		.loc 1 346 0
 1252 057e 07F1BC02 		add	r2, r7, #188
 1253 0582 07F14C03 		add	r3, r7, #76
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 31


 1254 0586 1046     		mov	r0, r2
 1255 0588 4249     		ldr	r1, .L87+40
 1256 058a 0A22     		movs	r2, #10
 1257 058c FFF7FEFF 		bl	BT_Send
 347:main.c        ****                     transmit_flag = 0;
 1258              		.loc 1 347 0
 1259 0590 4A4B     		ldr	r3, .L87+80
 1260 0592 0022     		movs	r2, #0
 1261 0594 1A60     		str	r2, [r3]
 1262              	.L51:
 348:main.c        ****                 }
 349:main.c        ****                 if(wait_flag == 1){
 1263              		.loc 1 349 0
 1264 0596 384B     		ldr	r3, .L87+12
 1265 0598 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1266 059a 002B     		cmp	r3, #0
 1267 059c 54D0     		beq	.L52
 350:main.c        ****                     #ifdef LCD
 351:main.c        ****                         setCursor(0,0);
 1268              		.loc 1 351 0
 1269 059e 0020     		movs	r0, #0
 1270 05a0 0021     		movs	r1, #0
 1271 05a2 FFF7FEFF 		bl	setCursor
 352:main.c        ****                         clear();
 1272              		.loc 1 352 0
 1273 05a6 FFF7FEFF 		bl	clear
 353:main.c        ****                         
 354:main.c        ****                         sprintf(buf, "T-minus %d seconds\n", (60 - countdown)); // countdown
 1274              		.loc 1 354 0
 1275 05aa 454B     		ldr	r3, .L87+84
 1276 05ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277 05ae C3F13C03 		rsb	r3, r3, #60
 1278 05b2 07F1D002 		add	r2, r7, #208
 1279 05b6 1046     		mov	r0, r2
 1280 05b8 4249     		ldr	r1, .L87+88
 1281 05ba 1A46     		mov	r2, r3
 1282 05bc FFF7FEFF 		bl	sprintf
 355:main.c        ****                         LCD_print(buf);
 1283              		.loc 1 355 0
 1284 05c0 07F1D003 		add	r3, r7, #208
 1285 05c4 1846     		mov	r0, r3
 1286 05c6 FFF7FEFF 		bl	LCD_print
 356:main.c        ****                     #endif
 357:main.c        ****                     if(countdown == 60){
 1287              		.loc 1 357 0
 1288 05ca 3D4B     		ldr	r3, .L87+84
 1289 05cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1290 05ce 3C2B     		cmp	r3, #60
 1291 05d0 36D1     		bne	.L53
 358:main.c        ****                         STATE = DESCENDING;
 1292              		.loc 1 358 0
 1293 05d2 304B     		ldr	r3, .L87+40
 1294 05d4 0222     		movs	r2, #2
 1295 05d6 1A70     		strb	r2, [r3]
 359:main.c        ****                         #ifdef LCD
 360:main.c        ****                             setCursor(0,0);
 1296              		.loc 1 360 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 32


 1297 05d8 0020     		movs	r0, #0
 1298 05da 0021     		movs	r1, #0
 1299 05dc FFF7FEFF 		bl	setCursor
 361:main.c        ****                             clear();
 1300              		.loc 1 361 0
 1301 05e0 FFF7FEFF 		bl	clear
 362:main.c        ****                             LCD_print("STATE: DESCENT");
 1302              		.loc 1 362 0
 1303 05e4 2D48     		ldr	r0, .L87+48
 1304 05e6 FFF7FEFF 		bl	LCD_print
 363:main.c        ****                         #endif
 364:main.c        ****                         #ifdef BT
 365:main.c        ****                             stateMsgCount = 0;
 1305              		.loc 1 365 0
 1306 05ea 0023     		movs	r3, #0
 1307 05ec C7F82031 		str	r3, [r7, #288]
 366:main.c        ****                             while (stateMsgCount < DESCENDING_LEN){
 1308              		.loc 1 366 0
 1309 05f0 19E0     		b	.L54
 1310              	.L57:
 367:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1311              		.loc 1 367 0
 1312 05f2 11E0     		b	.L55
 1313              	.L56:
 368:main.c        ****                                     UART_PutChar(descendbuf[stateMsgCount++]);
 1314              		.loc 1 368 0
 1315 05f4 D7F82031 		ldr	r3, [r7, #288]
 1316 05f8 5A1C     		adds	r2, r3, #1
 1317 05fa C7F82021 		str	r2, [r7, #288]
 1318 05fe 07F59472 		add	r2, r7, #296
 1319 0602 1344     		add	r3, r3, r2
 1320 0604 13F8903C 		ldrb	r3, [r3, #-144]	@ zero_extendqisi2
 1321 0608 1846     		mov	r0, r3
 1322 060a FFF7FEFF 		bl	UART_PutChar
 369:main.c        ****                                     if (stateMsgCount >= DESCENDING_LEN) break;
 1323              		.loc 1 369 0
 1324 060e D7F82031 		ldr	r3, [r7, #288]
 1325 0612 112B     		cmp	r3, #17
 1326 0614 00DD     		ble	.L55
 1327 0616 06E0     		b	.L54
 1328              	.L55:
 367:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1329              		.loc 1 367 0
 1330 0618 FFF7FEFF 		bl	UART_ReadTxStatus
 1331 061c 0346     		mov	r3, r0
 1332 061e 03F00803 		and	r3, r3, #8
 1333 0622 002B     		cmp	r3, #0
 1334 0624 E6D1     		bne	.L56
 1335              	.L54:
 366:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1336              		.loc 1 366 0
 1337 0626 D7F82031 		ldr	r3, [r7, #288]
 1338 062a 112B     		cmp	r3, #17
 1339 062c E1DD     		ble	.L57
 370:main.c        ****                                 }
 371:main.c        ****                             }
 372:main.c        ****                         #endif
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 33


 373:main.c        ****                         id=0;
 1340              		.loc 1 373 0
 1341 062e 1C4B     		ldr	r3, .L87+52
 1342 0630 0022     		movs	r2, #0
 1343 0632 1A60     		str	r2, [r3]
 374:main.c        ****                         data_time = 0;
 1344              		.loc 1 374 0
 1345 0634 1B4B     		ldr	r3, .L87+56
 1346 0636 0022     		movs	r2, #0
 1347 0638 1A60     		str	r2, [r3]
 375:main.c        ****                         countdown = 9; 
 1348              		.loc 1 375 0
 1349 063a 214B     		ldr	r3, .L87+84
 1350 063c 0922     		movs	r2, #9
 1351 063e 1A70     		strb	r2, [r3]
 1352              	.L53:
 376:main.c        ****                     }
 377:main.c        ****                     wait_flag = 0; 
 1353              		.loc 1 377 0
 1354 0640 0D4B     		ldr	r3, .L87+12
 1355 0642 0022     		movs	r2, #0
 1356 0644 1A70     		strb	r2, [r3]
 378:main.c        ****                 }
 379:main.c        ****                 break;
 1357              		.loc 1 379 0
 1358 0646 3CE2     		b	.L58
 1359              	.L52:
 1360 0648 3BE2     		b	.L58
 1361              	.L47:
 380:main.c        ****                 
 381:main.c        ****             case DESCENDING:
 382:main.c        ****                 if(collect_flag == 1){
 1362              		.loc 1 382 0
 1363 064a 194B     		ldr	r3, .L87+68
 1364 064c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1365 064e 002B     		cmp	r3, #0
 1366 0650 00F0F880 		beq	.L59
 383:main.c        ****                     if (id < MA_WINDOW){
 1367              		.loc 1 383 0
 1368 0654 124B     		ldr	r3, .L87+52
 1369 0656 1B68     		ldr	r3, [r3]
 1370 0658 0E2B     		cmp	r3, #14
 1371 065a 35DC     		bgt	.L60
 384:main.c        ****                         sum += az;     
 1372              		.loc 1 384 0
 1373 065c B7F90221 		ldrsh	r2, [r7, #258]
 1374 0660 114B     		ldr	r3, .L87+60
 1375 0662 1B68     		ldr	r3, [r3]
 1376 0664 1344     		add	r3, r3, r2
 1377 0666 104A     		ldr	r2, .L87+60
 1378 0668 1360     		str	r3, [r2]
 1379 066a 5FE0     		b	.L61
 1380              	.L88:
 1381              		.align	2
 1382              	.L87:
 1383 066c 00401C46 		.word	1176256512
 1384 0670 BC000000 		.word	.LC19
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 34


 1385 0674 00000000 		.word	fsfile
 1386 0678 00000000 		.word	wait_flag
 1387 067c 00000000 		.word	press_id
 1388 0680 00000000 		.word	msg_count
 1389 0684 00000000 		.word	RxBuffer
 1390 0688 00000000 		.word	bytes
 1391 068c D4000000 		.word	.LC20
 1392 0690 00000000 		.word	rxflag
 1393 0694 00000000 		.word	STATE
 1394 0698 00000000 		.word	dataflag
 1395 069c DC000000 		.word	.LC21
 1396 06a0 00000000 		.word	id
 1397 06a4 00000000 		.word	data_time
 1398 06a8 00000000 		.word	sum
 1399 06ac 00000000 		.word	average
 1400 06b0 00000000 		.word	collect_flag
 1401 06b4 00000000 		.word	PANIC_flag
 1402 06b8 00000000 		.word	testnum
 1403 06bc 00000000 		.word	transmit_flag
 1404 06c0 00000000 		.word	countdown
 1405 06c4 EC000000 		.word	.LC22
 1406              	.L60:
 385:main.c        ****                     }
 386:main.c        ****                     else if(id == MA_WINDOW){
 1407              		.loc 1 386 0
 1408 06c8 B54B     		ldr	r3, .L89
 1409 06ca 1B68     		ldr	r3, [r3]
 1410 06cc 0F2B     		cmp	r3, #15
 1411 06ce 13D1     		bne	.L62
 387:main.c        ****                         sum += az;
 1412              		.loc 1 387 0
 1413 06d0 B7F90221 		ldrsh	r2, [r7, #258]
 1414 06d4 B34B     		ldr	r3, .L89+4
 1415 06d6 1B68     		ldr	r3, [r3]
 1416 06d8 1344     		add	r3, r3, r2
 1417 06da B24A     		ldr	r2, .L89+4
 1418 06dc 1360     		str	r3, [r2]
 388:main.c        ****                         average = sum/MA_WINDOW;                            //compute baseline aver
 1419              		.loc 1 388 0
 1420 06de B14B     		ldr	r3, .L89+4
 1421 06e0 1B68     		ldr	r3, [r3]
 1422 06e2 B14A     		ldr	r2, .L89+8
 1423 06e4 82FB0312 		smull	r1, r2, r2, r3
 1424 06e8 1A44     		add	r2, r2, r3
 1425 06ea D210     		asrs	r2, r2, #3
 1426 06ec DB17     		asrs	r3, r3, #31
 1427 06ee D31A     		subs	r3, r2, r3
 1428 06f0 9AB2     		uxth	r2, r3
 1429 06f2 AE4B     		ldr	r3, .L89+12
 1430 06f4 1A80     		strh	r2, [r3]	@ movhi
 1431 06f6 19E0     		b	.L61
 1432              	.L62:
 389:main.c        ****                     }
 390:main.c        ****                     else{
 391:main.c        ****                         average = ComputeMA(average, MA_WINDOW, az);
 1433              		.loc 1 391 0
 1434 06f8 AC4B     		ldr	r3, .L89+12
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 35


 1435 06fa 1B88     		ldrh	r3, [r3]
 1436 06fc 1BB2     		sxth	r3, r3
 1437 06fe 1846     		mov	r0, r3
 1438 0700 FFF7FEFF 		bl	__aeabi_i2f
 1439 0704 0446     		mov	r4, r0
 1440 0706 B7F90231 		ldrsh	r3, [r7, #258]
 1441 070a 1846     		mov	r0, r3
 1442 070c FFF7FEFF 		bl	__aeabi_i2f
 1443 0710 0346     		mov	r3, r0
 1444 0712 2046     		mov	r0, r4
 1445 0714 0F21     		movs	r1, #15
 1446 0716 1A46     		mov	r2, r3
 1447 0718 FFF7FEFF 		bl	ComputeMA
 1448 071c 0346     		mov	r3, r0
 1449 071e 1846     		mov	r0, r3
 1450 0720 FFF7FEFF 		bl	__aeabi_f2iz
 1451 0724 0346     		mov	r3, r0
 1452 0726 9AB2     		uxth	r2, r3
 1453 0728 A04B     		ldr	r3, .L89+12
 1454 072a 1A80     		strh	r2, [r3]	@ movhi
 1455              	.L61:
 392:main.c        ****                     }
 393:main.c        ****                     
 394:main.c        ****                     if(average > BOT_THRESHOLD){                        
 1456              		.loc 1 394 0
 1457 072c 9F4B     		ldr	r3, .L89+12
 1458 072e 1B88     		ldrh	r3, [r3]
 1459 0730 1BB2     		sxth	r3, r3
 1460 0732 44F62062 		movw	r2, #20000
 1461 0736 9342     		cmp	r3, r2
 1462 0738 5ADD     		ble	.L63
 1463              	.LBB6:
 395:main.c        ****                         STATE = LANDED;                                     //Switch to LANDED stat
 1464              		.loc 1 395 0
 1465 073a 9D4B     		ldr	r3, .L89+16
 1466 073c 0322     		movs	r2, #3
 1467 073e 1A70     		strb	r2, [r3]
 396:main.c        ****                         #ifdef LCD
 397:main.c        ****                             setCursor(0,0);
 1468              		.loc 1 397 0
 1469 0740 0020     		movs	r0, #0
 1470 0742 0021     		movs	r1, #0
 1471 0744 FFF7FEFF 		bl	setCursor
 398:main.c        ****                             clear();
 1472              		.loc 1 398 0
 1473 0748 FFF7FEFF 		bl	clear
 399:main.c        ****                             LCD_print("STATE: LANDED");  
 1474              		.loc 1 399 0
 1475 074c 9948     		ldr	r0, .L89+20
 1476 074e FFF7FEFF 		bl	LCD_print
 400:main.c        ****                         #endif
 401:main.c        ****                         char sdbuf[60] = {};
 1477              		.loc 1 401 0
 1478 0752 3B1D     		adds	r3, r7, #4
 1479 0754 1A46     		mov	r2, r3
 1480 0756 3C23     		movs	r3, #60
 1481 0758 1046     		mov	r0, r2
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 36


 1482 075a 0021     		movs	r1, #0
 1483 075c 1A46     		mov	r2, r3
 1484 075e FFF7FEFF 		bl	memset
 402:main.c        ****                         #ifdef SD
 403:main.c        ****                             sprintf(sdbuf, "STATE: LANDED ***********\n");
 1485              		.loc 1 403 0
 1486 0762 3B1D     		adds	r3, r7, #4
 1487 0764 944A     		ldr	r2, .L89+24
 1488 0766 1C46     		mov	r4, r3
 1489 0768 1546     		mov	r5, r2
 1490 076a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1491 076c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1492 076e 95E80700 		ldmia	r5, {r0, r1, r2}
 1493 0772 03C4     		stmia	r4!, {r0, r1}
 1494 0774 2280     		strh	r2, [r4]	@ movhi
 1495 0776 0234     		adds	r4, r4, #2
 1496 0778 130C     		lsrs	r3, r2, #16
 1497 077a 2370     		strb	r3, [r4]
 404:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1498              		.loc 1 404 0
 1499 077c 8F4B     		ldr	r3, .L89+28
 1500 077e 1C68     		ldr	r4, [r3]
 1501 0780 3B1D     		adds	r3, r7, #4
 1502 0782 1846     		mov	r0, r3
 1503 0784 FFF7FEFF 		bl	strlen
 1504 0788 0246     		mov	r2, r0
 1505 078a 3B1D     		adds	r3, r7, #4
 1506 078c 2046     		mov	r0, r4
 1507 078e 1946     		mov	r1, r3
 1508 0790 FFF7FEFF 		bl	FS_Write
 405:main.c        ****                         #endif
 406:main.c        ****                         #ifdef BT
 407:main.c        ****                             stateMsgCount = 0;
 1509              		.loc 1 407 0
 1510 0794 0023     		movs	r3, #0
 1511 0796 C7F82031 		str	r3, [r7, #288]
 408:main.c        ****                             while (stateMsgCount < LANDED_LEN){
 1512              		.loc 1 408 0
 1513 079a 19E0     		b	.L64
 1514              	.L67:
 409:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1515              		.loc 1 409 0
 1516 079c 11E0     		b	.L65
 1517              	.L66:
 410:main.c        ****                                     UART_PutChar(landedbuf[stateMsgCount++]);
 1518              		.loc 1 410 0
 1519 079e D7F82031 		ldr	r3, [r7, #288]
 1520 07a2 5A1C     		adds	r2, r3, #1
 1521 07a4 C7F82021 		str	r2, [r7, #288]
 1522 07a8 07F59472 		add	r2, r7, #296
 1523 07ac 1344     		add	r3, r3, r2
 1524 07ae 13F8A03C 		ldrb	r3, [r3, #-160]	@ zero_extendqisi2
 1525 07b2 1846     		mov	r0, r3
 1526 07b4 FFF7FEFF 		bl	UART_PutChar
 411:main.c        ****                                     if (stateMsgCount >= LANDED_LEN) break;
 1527              		.loc 1 411 0
 1528 07b8 D7F82031 		ldr	r3, [r7, #288]
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 37


 1529 07bc 0D2B     		cmp	r3, #13
 1530 07be 00DD     		ble	.L65
 1531 07c0 06E0     		b	.L64
 1532              	.L65:
 409:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1533              		.loc 1 409 0
 1534 07c2 FFF7FEFF 		bl	UART_ReadTxStatus
 1535 07c6 0346     		mov	r3, r0
 1536 07c8 03F00803 		and	r3, r3, #8
 1537 07cc 002B     		cmp	r3, #0
 1538 07ce E6D1     		bne	.L66
 1539              	.L64:
 408:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1540              		.loc 1 408 0
 1541 07d0 D7F82031 		ldr	r3, [r7, #288]
 1542 07d4 0D2B     		cmp	r3, #13
 1543 07d6 E1DD     		ble	.L67
 412:main.c        ****                                 }
 413:main.c        ****                             }
 414:main.c        ****                         #endif
 415:main.c        ****                         id=0;                                                   //reset sample coun
 1544              		.loc 1 415 0
 1545 07d8 714B     		ldr	r3, .L89
 1546 07da 0022     		movs	r2, #0
 1547 07dc 1A60     		str	r2, [r3]
 416:main.c        ****                         data_time = 0;
 1548              		.loc 1 416 0
 1549 07de 784B     		ldr	r3, .L89+32
 1550 07e0 0022     		movs	r2, #0
 1551 07e2 1A60     		str	r2, [r3]
 417:main.c        ****                         sum = 0;
 1552              		.loc 1 417 0
 1553 07e4 6F4B     		ldr	r3, .L89+4
 1554 07e6 0022     		movs	r2, #0
 1555 07e8 1A60     		str	r2, [r3]
 418:main.c        ****                         average = 0;                
 1556              		.loc 1 418 0
 1557 07ea 704B     		ldr	r3, .L89+12
 1558 07ec 0022     		movs	r2, #0
 1559 07ee 1A80     		strh	r2, [r3]	@ movhi
 1560              	.L63:
 1561              	.LBE6:
 419:main.c        ****                     }
 420:main.c        ****                     id++;     
 1562              		.loc 1 420 0
 1563 07f0 6B4B     		ldr	r3, .L89
 1564 07f2 1B68     		ldr	r3, [r3]
 1565 07f4 0133     		adds	r3, r3, #1
 1566 07f6 6A4A     		ldr	r2, .L89
 1567 07f8 1360     		str	r3, [r2]
 421:main.c        ****                     
 422:main.c        ****                     /*if desired amount of samples have been collected, switch states*/
 423:main.c        ****                     if(data_time >= DATA_TIME * 2){
 1568              		.loc 1 423 0
 1569 07fa 714B     		ldr	r3, .L89+32
 1570 07fc 1B68     		ldr	r3, [r3]
 1571 07fe 42F20F72 		movw	r2, #9999
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 38


 1572 0802 9342     		cmp	r3, r2
 1573 0804 1ADD     		ble	.L68
 424:main.c        ****                         LED2_Write(0);                                          //turn LED off
 1574              		.loc 1 424 0
 1575 0806 0020     		movs	r0, #0
 1576 0808 FFF7FEFF 		bl	LED2_Write
 425:main.c        ****                                                             
 426:main.c        ****                         STATE = WAIT_TO_LAUNCH;                                //Switch to Waiting 
 1577              		.loc 1 426 0
 1578 080c 684B     		ldr	r3, .L89+16
 1579 080e 0122     		movs	r2, #1
 1580 0810 1A70     		strb	r2, [r3]
 427:main.c        ****                         #ifdef LCD
 428:main.c        ****                             setCursor(0,0);
 1581              		.loc 1 428 0
 1582 0812 0020     		movs	r0, #0
 1583 0814 0021     		movs	r1, #0
 1584 0816 FFF7FEFF 		bl	setCursor
 429:main.c        ****                             clear();
 1585              		.loc 1 429 0
 1586 081a FFF7FEFF 		bl	clear
 430:main.c        ****                             LCD_print("STATE: WAIT");  
 1587              		.loc 1 430 0
 1588 081e 6948     		ldr	r0, .L89+36
 1589 0820 FFF7FEFF 		bl	LCD_print
 431:main.c        ****                         #endif
 432:main.c        ****                         id=0;                                                  //reset sample count
 1590              		.loc 1 432 0
 1591 0824 5E4B     		ldr	r3, .L89
 1592 0826 0022     		movs	r2, #0
 1593 0828 1A60     		str	r2, [r3]
 433:main.c        ****                         data_time = 0;
 1594              		.loc 1 433 0
 1595 082a 654B     		ldr	r3, .L89+32
 1596 082c 0022     		movs	r2, #0
 1597 082e 1A60     		str	r2, [r3]
 434:main.c        ****                         sum = 0;                                               //reset sum 
 1598              		.loc 1 434 0
 1599 0830 5C4B     		ldr	r3, .L89+4
 1600 0832 0022     		movs	r2, #0
 1601 0834 1A60     		str	r2, [r3]
 435:main.c        ****                         average = 0;
 1602              		.loc 1 435 0
 1603 0836 5D4B     		ldr	r3, .L89+12
 1604 0838 0022     		movs	r2, #0
 1605 083a 1A80     		strh	r2, [r3]	@ movhi
 1606              	.L68:
 436:main.c        ****                        
 437:main.c        ****                     }
 438:main.c        ****                     collect_flag = 0;
 1607              		.loc 1 438 0
 1608 083c 624B     		ldr	r3, .L89+40
 1609 083e 0022     		movs	r2, #0
 1610 0840 1A70     		strb	r2, [r3]
 439:main.c        ****                 }
 440:main.c        ****                 break;
 1611              		.loc 1 440 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 39


 1612 0842 3EE1     		b	.L58
 1613              	.L59:
 1614              		.loc 1 440 0 is_stmt 0 discriminator 2
 1615 0844 3DE1     		b	.L58
 1616              	.L48:
 441:main.c        ****                 
 442:main.c        ****                 case LANDED:
 443:main.c        ****                     CyDelay(5000u);
 1617              		.loc 1 443 0 is_stmt 1
 1618 0846 41F28830 		movw	r0, #5000
 1619 084a FFF7FEFF 		bl	CyDelay
 444:main.c        ****                     Solenoid_1_Write(1); //turn on solenoid 1
 1620              		.loc 1 444 0
 1621 084e 0120     		movs	r0, #1
 1622 0850 FFF7FEFF 		bl	Solenoid_1_Write
 445:main.c        ****                     #ifdef LCD
 446:main.c        ****                         setCursor(0,0);
 1623              		.loc 1 446 0
 1624 0854 0020     		movs	r0, #0
 1625 0856 0021     		movs	r1, #0
 1626 0858 FFF7FEFF 		bl	setCursor
 447:main.c        ****                         clear();
 1627              		.loc 1 447 0
 1628 085c FFF7FEFF 		bl	clear
 448:main.c        ****                         LCD_print("VACUUMING");  
 1629              		.loc 1 448 0
 1630 0860 5A48     		ldr	r0, .L89+44
 1631 0862 FFF7FEFF 		bl	LCD_print
 449:main.c        ****                     #endif
 450:main.c        ****                     
 451:main.c        ****                     char sdbuf[60] = {};
 1632              		.loc 1 451 0
 1633 0866 3B1D     		adds	r3, r7, #4
 1634 0868 1A46     		mov	r2, r3
 1635 086a 3C23     		movs	r3, #60
 1636 086c 1046     		mov	r0, r2
 1637 086e 0021     		movs	r1, #0
 1638 0870 1A46     		mov	r2, r3
 1639 0872 FFF7FEFF 		bl	memset
 452:main.c        ****                     #ifdef SD
 453:main.c        ****                             memset(sdbuf, 0, 40);
 1640              		.loc 1 453 0
 1641 0876 3B1D     		adds	r3, r7, #4
 1642 0878 1846     		mov	r0, r3
 1643 087a 0021     		movs	r1, #0
 1644 087c 2822     		movs	r2, #40
 1645 087e FFF7FEFF 		bl	memset
 454:main.c        ****                             sprintf(sdbuf, "STATE: VACUUMING ***********\n");
 1646              		.loc 1 454 0
 1647 0882 3B1D     		adds	r3, r7, #4
 1648 0884 524A     		ldr	r2, .L89+48
 1649 0886 1C46     		mov	r4, r3
 1650 0888 1546     		mov	r5, r2
 1651 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1652 088c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1653 088e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1654 0892 07C4     		stmia	r4!, {r0, r1, r2}
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 40


 1655 0894 2380     		strh	r3, [r4]	@ movhi
 455:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1656              		.loc 1 455 0
 1657 0896 494B     		ldr	r3, .L89+28
 1658 0898 1C68     		ldr	r4, [r3]
 1659 089a 3B1D     		adds	r3, r7, #4
 1660 089c 1846     		mov	r0, r3
 1661 089e FFF7FEFF 		bl	strlen
 1662 08a2 0246     		mov	r2, r0
 1663 08a4 3B1D     		adds	r3, r7, #4
 1664 08a6 2046     		mov	r0, r4
 1665 08a8 1946     		mov	r1, r3
 1666 08aa FFF7FEFF 		bl	FS_Write
 456:main.c        ****                     #endif
 457:main.c        ****                     #ifdef BT
 458:main.c        ****                         stateMsgCount = 0;
 1667              		.loc 1 458 0
 1668 08ae 0023     		movs	r3, #0
 1669 08b0 C7F82031 		str	r3, [r7, #288]
 459:main.c        ****                         while (stateMsgCount < VACUUM_LEN){
 1670              		.loc 1 459 0
 1671 08b4 19E0     		b	.L69
 1672              	.L72:
 460:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1673              		.loc 1 460 0
 1674 08b6 11E0     		b	.L70
 1675              	.L71:
 461:main.c        ****                                 UART_PutChar(vacuumbuf[stateMsgCount++]);
 1676              		.loc 1 461 0
 1677 08b8 D7F82031 		ldr	r3, [r7, #288]
 1678 08bc 5A1C     		adds	r2, r3, #1
 1679 08be C7F82021 		str	r2, [r7, #288]
 1680 08c2 07F59472 		add	r2, r7, #296
 1681 08c6 1344     		add	r3, r3, r2
 1682 08c8 13F8B43C 		ldrb	r3, [r3, #-180]	@ zero_extendqisi2
 1683 08cc 1846     		mov	r0, r3
 1684 08ce FFF7FEFF 		bl	UART_PutChar
 462:main.c        ****                                 if (stateMsgCount >= VACUUM_LEN) break;
 1685              		.loc 1 462 0
 1686 08d2 D7F82031 		ldr	r3, [r7, #288]
 1687 08d6 102B     		cmp	r3, #16
 1688 08d8 00DD     		ble	.L70
 1689 08da 06E0     		b	.L69
 1690              	.L70:
 460:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1691              		.loc 1 460 0
 1692 08dc FFF7FEFF 		bl	UART_ReadTxStatus
 1693 08e0 0346     		mov	r3, r0
 1694 08e2 03F00803 		and	r3, r3, #8
 1695 08e6 002B     		cmp	r3, #0
 1696 08e8 E6D1     		bne	.L71
 1697              	.L69:
 459:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1698              		.loc 1 459 0
 1699 08ea D7F82031 		ldr	r3, [r7, #288]
 1700 08ee 102B     		cmp	r3, #16
 1701 08f0 E1DD     		ble	.L72
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 41


 463:main.c        ****                             }
 464:main.c        ****                         }
 465:main.c        ****                     #endif
 466:main.c        ****                     
 467:main.c        ****                     CyDelay(5000u);
 1702              		.loc 1 467 0
 1703 08f2 41F28830 		movw	r0, #5000
 1704 08f6 FFF7FEFF 		bl	CyDelay
 468:main.c        ****                     Solenoid_1_Write(0); //turn off soleniod 1
 1705              		.loc 1 468 0
 1706 08fa 0020     		movs	r0, #0
 1707 08fc FFF7FEFF 		bl	Solenoid_1_Write
 469:main.c        ****                     CyDelay(5000u);
 1708              		.loc 1 469 0
 1709 0900 41F28830 		movw	r0, #5000
 1710 0904 FFF7FEFF 		bl	CyDelay
 470:main.c        ****                     STATE = RESURFACE;
 1711              		.loc 1 470 0
 1712 0908 294B     		ldr	r3, .L89+16
 1713 090a 0422     		movs	r2, #4
 1714 090c 1A70     		strb	r2, [r3]
 471:main.c        ****                     
 472:main.c        ****                     #ifdef LCD
 473:main.c        ****                         setCursor(0,0);
 1715              		.loc 1 473 0
 1716 090e 0020     		movs	r0, #0
 1717 0910 0021     		movs	r1, #0
 1718 0912 FFF7FEFF 		bl	setCursor
 474:main.c        ****                         clear();
 1719              		.loc 1 474 0
 1720 0916 FFF7FEFF 		bl	clear
 475:main.c        ****                         LCD_print("STATE: RESURFACING");  
 1721              		.loc 1 475 0
 1722 091a 2E48     		ldr	r0, .L89+52
 1723 091c FFF7FEFF 		bl	LCD_print
 476:main.c        ****                     #endif
 477:main.c        ****                     #ifdef SD
 478:main.c        ****                         memset(sdbuf, 0, 40);
 1724              		.loc 1 478 0
 1725 0920 3B1D     		adds	r3, r7, #4
 1726 0922 1846     		mov	r0, r3
 1727 0924 0021     		movs	r1, #0
 1728 0926 2822     		movs	r2, #40
 1729 0928 FFF7FEFF 		bl	memset
 479:main.c        ****                         sprintf(sdbuf, "STATE: RESURFACING ***********\n");
 1730              		.loc 1 479 0
 1731 092c 3B1D     		adds	r3, r7, #4
 1732 092e 2A4A     		ldr	r2, .L89+56
 1733 0930 1C46     		mov	r4, r3
 1734 0932 1546     		mov	r5, r2
 1735 0934 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1736 0936 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1737 0938 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1738 093c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 480:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1739              		.loc 1 480 0
 1740 0940 1E4B     		ldr	r3, .L89+28
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 42


 1741 0942 1C68     		ldr	r4, [r3]
 1742 0944 3B1D     		adds	r3, r7, #4
 1743 0946 1846     		mov	r0, r3
 1744 0948 FFF7FEFF 		bl	strlen
 1745 094c 0246     		mov	r2, r0
 1746 094e 3B1D     		adds	r3, r7, #4
 1747 0950 2046     		mov	r0, r4
 1748 0952 1946     		mov	r1, r3
 1749 0954 FFF7FEFF 		bl	FS_Write
 481:main.c        ****                     #endif
 482:main.c        ****                     #ifdef BT
 483:main.c        ****                         stateMsgCount = 0;
 1750              		.loc 1 483 0
 1751 0958 0023     		movs	r3, #0
 1752 095a C7F82031 		str	r3, [r7, #288]
 484:main.c        ****                         while (stateMsgCount < RESURFACE_LEN){
 1753              		.loc 1 484 0
 1754 095e 19E0     		b	.L73
 1755              	.L76:
 485:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1756              		.loc 1 485 0
 1757 0960 11E0     		b	.L74
 1758              	.L75:
 486:main.c        ****                                 UART_PutChar(resurfbuf[stateMsgCount++]);
 1759              		.loc 1 486 0
 1760 0962 D7F82031 		ldr	r3, [r7, #288]
 1761 0966 5A1C     		adds	r2, r3, #1
 1762 0968 C7F82021 		str	r2, [r7, #288]
 1763 096c 07F59472 		add	r2, r7, #296
 1764 0970 1344     		add	r3, r3, r2
 1765 0972 13F8C83C 		ldrb	r3, [r3, #-200]	@ zero_extendqisi2
 1766 0976 1846     		mov	r0, r3
 1767 0978 FFF7FEFF 		bl	UART_PutChar
 487:main.c        ****                                 if (stateMsgCount >= RESURFACE_LEN) break;
 1768              		.loc 1 487 0
 1769 097c D7F82031 		ldr	r3, [r7, #288]
 1770 0980 102B     		cmp	r3, #16
 1771 0982 00DD     		ble	.L74
 1772 0984 06E0     		b	.L73
 1773              	.L74:
 485:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1774              		.loc 1 485 0
 1775 0986 FFF7FEFF 		bl	UART_ReadTxStatus
 1776 098a 0346     		mov	r3, r0
 1777 098c 03F00803 		and	r3, r3, #8
 1778 0990 002B     		cmp	r3, #0
 1779 0992 E6D1     		bne	.L75
 1780              	.L73:
 484:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1781              		.loc 1 484 0
 1782 0994 D7F82031 		ldr	r3, [r7, #288]
 1783 0998 102B     		cmp	r3, #16
 1784 099a E1DD     		ble	.L76
 488:main.c        ****                             }
 489:main.c        ****                         }
 490:main.c        ****                     #endif
 491:main.c        ****                 break;
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 43


 1785              		.loc 1 491 0 discriminator 3
 1786 099c 91E0     		b	.L58
 1787              	.L90:
 1788 099e 00BF     		.align	2
 1789              	.L89:
 1790 09a0 00000000 		.word	id
 1791 09a4 00000000 		.word	sum
 1792 09a8 89888888 		.word	-2004318071
 1793 09ac 00000000 		.word	average
 1794 09b0 00000000 		.word	STATE
 1795 09b4 00010000 		.word	.LC23
 1796 09b8 10010000 		.word	.LC24
 1797 09bc 00000000 		.word	fsfile
 1798 09c0 00000000 		.word	data_time
 1799 09c4 2C010000 		.word	.LC25
 1800 09c8 00000000 		.word	collect_flag
 1801 09cc 38010000 		.word	.LC26
 1802 09d0 44010000 		.word	.LC27
 1803 09d4 64010000 		.word	.LC28
 1804 09d8 78010000 		.word	.LC29
 1805              	.L49:
 492:main.c        ****                 
 493:main.c        ****             case RESURFACE:
 494:main.c        ****                 //CyDelay(4000u);
 495:main.c        ****                 if (PANIC_flag)
 1806              		.loc 1 495 0
 1807 09dc 3A4B     		ldr	r3, .L91
 1808 09de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1809 09e0 002B     		cmp	r3, #0
 1810 09e2 02D0     		beq	.L77
 496:main.c        ****                     LCD_print("WATER DETECTED");
 1811              		.loc 1 496 0
 1812 09e4 3948     		ldr	r0, .L91+4
 1813 09e6 FFF7FEFF 		bl	LCD_print
 1814              	.L77:
 497:main.c        ****                 Solenoid_2_Write(1); //turn on solendiod 2
 1815              		.loc 1 497 0
 1816 09ea 0120     		movs	r0, #1
 1817 09ec FFF7FEFF 		bl	Solenoid_2_Write
 498:main.c        ****                 CyDelay(3000u);
 1818              		.loc 1 498 0
 1819 09f0 40F6B830 		movw	r0, #3000
 1820 09f4 FFF7FEFF 		bl	CyDelay
 499:main.c        ****                 Solenoid_2_Write(0); //turn off solenoid 2
 1821              		.loc 1 499 0
 1822 09f8 0020     		movs	r0, #0
 1823 09fa FFF7FEFF 		bl	Solenoid_2_Write
 500:main.c        ****                 //check pressure sensor to confirm we are at the surface
 501:main.c        ****                 CyDelay(5000u);                                //wait 10 seconds to lift, for testi
 1824              		.loc 1 501 0
 1825 09fe 41F28830 		movw	r0, #5000
 1826 0a02 FFF7FEFF 		bl	CyDelay
 502:main.c        ****                 STATE = TRANSMIT;
 1827              		.loc 1 502 0
 1828 0a06 324B     		ldr	r3, .L91+8
 1829 0a08 0522     		movs	r2, #5
 1830 0a0a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 44


 503:main.c        ****                 #ifdef LCD
 504:main.c        ****                     setCursor(0,0);
 1831              		.loc 1 504 0
 1832 0a0c 0020     		movs	r0, #0
 1833 0a0e 0021     		movs	r1, #0
 1834 0a10 FFF7FEFF 		bl	setCursor
 505:main.c        ****                     clear();
 1835              		.loc 1 505 0
 1836 0a14 FFF7FEFF 		bl	clear
 506:main.c        ****                     LCD_print("TRANSMIT");  
 1837              		.loc 1 506 0
 1838 0a18 2E48     		ldr	r0, .L91+12
 1839 0a1a FFF7FEFF 		bl	LCD_print
 507:main.c        ****                 #endif
 508:main.c        ****                 #ifdef SD
 509:main.c        ****                     memset(sdbuf, 0, 40);
 1840              		.loc 1 509 0
 1841 0a1e 3B1D     		adds	r3, r7, #4
 1842 0a20 1846     		mov	r0, r3
 1843 0a22 0021     		movs	r1, #0
 1844 0a24 2822     		movs	r2, #40
 1845 0a26 FFF7FEFF 		bl	memset
 510:main.c        ****                     sprintf(sdbuf, "STATE: TRANSMIT ***********\n");
 1846              		.loc 1 510 0
 1847 0a2a 3B1D     		adds	r3, r7, #4
 1848 0a2c 2A4A     		ldr	r2, .L91+16
 1849 0a2e 1C46     		mov	r4, r3
 1850 0a30 1546     		mov	r5, r2
 1851 0a32 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1852 0a34 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1853 0a36 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1854 0a3a 07C4     		stmia	r4!, {r0, r1, r2}
 1855 0a3c 2370     		strb	r3, [r4]
 511:main.c        ****                     FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1856              		.loc 1 511 0
 1857 0a3e 274B     		ldr	r3, .L91+20
 1858 0a40 1C68     		ldr	r4, [r3]
 1859 0a42 3B1D     		adds	r3, r7, #4
 1860 0a44 1846     		mov	r0, r3
 1861 0a46 FFF7FEFF 		bl	strlen
 1862 0a4a 0246     		mov	r2, r0
 1863 0a4c 3B1D     		adds	r3, r7, #4
 1864 0a4e 2046     		mov	r0, r4
 1865 0a50 1946     		mov	r1, r3
 1866 0a52 FFF7FEFF 		bl	FS_Write
 512:main.c        ****                 #endif
 513:main.c        ****                 #ifdef BT
 514:main.c        ****                     stateMsgCount = 0;
 1867              		.loc 1 514 0
 1868 0a56 0023     		movs	r3, #0
 1869 0a58 C7F82031 		str	r3, [r7, #288]
 515:main.c        ****                     while (stateMsgCount < TRANSMIT_LEN){
 1870              		.loc 1 515 0
 1871 0a5c 19E0     		b	.L78
 1872              	.L81:
 516:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1873              		.loc 1 516 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 45


 1874 0a5e 11E0     		b	.L79
 1875              	.L80:
 517:main.c        ****                             UART_PutChar(transbuf[stateMsgCount++]);
 1876              		.loc 1 517 0
 1877 0a60 D7F82031 		ldr	r3, [r7, #288]
 1878 0a64 5A1C     		adds	r2, r3, #1
 1879 0a66 C7F82021 		str	r2, [r7, #288]
 1880 0a6a 07F59472 		add	r2, r7, #296
 1881 0a6e 1344     		add	r3, r3, r2
 1882 0a70 13F8D83C 		ldrb	r3, [r3, #-216]	@ zero_extendqisi2
 1883 0a74 1846     		mov	r0, r3
 1884 0a76 FFF7FEFF 		bl	UART_PutChar
 518:main.c        ****                             if (stateMsgCount >= TRANSMIT_LEN) break;
 1885              		.loc 1 518 0
 1886 0a7a D7F82031 		ldr	r3, [r7, #288]
 1887 0a7e 0F2B     		cmp	r3, #15
 1888 0a80 00DD     		ble	.L79
 1889 0a82 06E0     		b	.L78
 1890              	.L79:
 516:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1891              		.loc 1 516 0
 1892 0a84 FFF7FEFF 		bl	UART_ReadTxStatus
 1893 0a88 0346     		mov	r3, r0
 1894 0a8a 03F00803 		and	r3, r3, #8
 1895 0a8e 002B     		cmp	r3, #0
 1896 0a90 E6D1     		bne	.L80
 1897              	.L78:
 515:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1898              		.loc 1 515 0
 1899 0a92 D7F82031 		ldr	r3, [r7, #288]
 1900 0a96 0F2B     		cmp	r3, #15
 1901 0a98 E1DD     		ble	.L81
 519:main.c        ****                         }
 520:main.c        ****                     }
 521:main.c        ****                 #endif
 522:main.c        ****                 break;
 1902              		.loc 1 522 0 discriminator 4
 1903 0a9a 12E0     		b	.L58
 1904              	.L50:
 523:main.c        ****                 
 524:main.c        ****             case TRANSMIT:
 525:main.c        ****                 if (transmit_flag){
 1905              		.loc 1 525 0
 1906 0a9c 104B     		ldr	r3, .L91+24
 1907 0a9e 1B68     		ldr	r3, [r3]
 1908 0aa0 002B     		cmp	r3, #0
 1909 0aa2 0CD0     		beq	.L82
 526:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &t); // Here, the STATE variable only matters,
 1910              		.loc 1 526 0
 1911 0aa4 07F1BC02 		add	r2, r7, #188
 1912 0aa8 07F14803 		add	r3, r7, #72
 1913 0aac 1046     		mov	r0, r2
 1914 0aae 0849     		ldr	r1, .L91+8
 1915 0ab0 0A22     		movs	r2, #10
 1916 0ab2 FFF7FEFF 		bl	BT_Send
 527:main.c        ****                     transmit_flag = 0;
 1917              		.loc 1 527 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 46


 1918 0ab6 0A4B     		ldr	r3, .L91+24
 1919 0ab8 0022     		movs	r2, #0
 1920 0aba 1A60     		str	r2, [r3]
 528:main.c        ****                 }
 529:main.c        ****                 //FS_Read(fsfile, 4);
 530:main.c        **** //                #ifdef SD                                   //close old file, open new one
 531:main.c        **** //                    FS_FClose(fsfile);
 532:main.c        **** //                    sprintf(file, "test%d.txt", ++testnum);
 533:main.c        **** //                    fsfile = FS_FOpen(file, "w");
 534:main.c        **** //                #endif 
 535:main.c        ****                 //CyDelay(15000u);
 536:main.c        ****                 
 537:main.c        ****                 break;
 1921              		.loc 1 537 0
 1922 0abc 01E0     		b	.L58
 1923              	.L82:
 1924              		.loc 1 537 0 is_stmt 0 discriminator 5
 1925 0abe 00E0     		b	.L58
 1926              	.L84:
 538:main.c        ****                 
 539:main.c        ****             default:
 540:main.c        ****                 break;
 1927              		.loc 1 540 0 is_stmt 1
 1928 0ac0 00BF     		nop
 1929              	.L58:
 1930              	.LBE5:
 1931              	.LBE2:
 541:main.c        ****         
 542:main.c        ****         
 543:main.c        ****         }
 544:main.c        ****         
 545:main.c        ****     }
 1932              		.loc 1 545 0 discriminator 1
 1933 0ac2 FFF7AFBB 		b	.L83
 1934              	.L92:
 1935 0ac6 00BF     		.align	2
 1936              	.L91:
 1937 0ac8 00000000 		.word	PANIC_flag
 1938 0acc 98010000 		.word	.LC30
 1939 0ad0 00000000 		.word	STATE
 1940 0ad4 A8010000 		.word	.LC31
 1941 0ad8 B4010000 		.word	.LC32
 1942 0adc 00000000 		.word	fsfile
 1943 0ae0 00000000 		.word	transmit_flag
 1944              		.cfi_endproc
 1945              	.LFE68:
 1946              		.size	main, .-main
 1947 0ae4 AFF30080 		.text
 1948              	.Letext0:
 1949              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1950              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1951              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1952              		.file 5 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 1953              		.file 6 "functions.h"
 1954              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1955              		.file 8 "./mpu6050.h"
 1956              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 47


 1957              	.Ldebug_info0:
 1958 0000 28060000 		.4byte	0x628
 1959 0004 0400     		.2byte	0x4
 1960 0006 00000000 		.4byte	.Ldebug_abbrev0
 1961 000a 04       		.byte	0x4
 1962 000b 01       		.uleb128 0x1
 1963 000c 08010000 		.4byte	.LASF81
 1964 0010 01       		.byte	0x1
 1965 0011 09030000 		.4byte	.LASF82
 1966 0015 97020000 		.4byte	.LASF83
 1967 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1968 001d 00000000 		.4byte	0
 1969 0021 00000000 		.4byte	.Ldebug_line0
 1970 0025 02       		.uleb128 0x2
 1971 0026 01       		.byte	0x1
 1972 0027 06       		.byte	0x6
 1973 0028 0A020000 		.4byte	.LASF0
 1974 002c 03       		.uleb128 0x3
 1975 002d EB030000 		.4byte	.LASF2
 1976 0031 02       		.byte	0x2
 1977 0032 1D       		.byte	0x1d
 1978 0033 37000000 		.4byte	0x37
 1979 0037 02       		.uleb128 0x2
 1980 0038 01       		.byte	0x1
 1981 0039 08       		.byte	0x8
 1982 003a EA010000 		.4byte	.LASF1
 1983 003e 03       		.uleb128 0x3
 1984 003f 5C030000 		.4byte	.LASF3
 1985 0043 02       		.byte	0x2
 1986 0044 29       		.byte	0x29
 1987 0045 49000000 		.4byte	0x49
 1988 0049 02       		.uleb128 0x2
 1989 004a 02       		.byte	0x2
 1990 004b 05       		.byte	0x5
 1991 004c A9000000 		.4byte	.LASF4
 1992 0050 02       		.uleb128 0x2
 1993 0051 02       		.byte	0x2
 1994 0052 07       		.byte	0x7
 1995 0053 5A020000 		.4byte	.LASF5
 1996 0057 03       		.uleb128 0x3
 1997 0058 52030000 		.4byte	.LASF6
 1998 005c 02       		.byte	0x2
 1999 005d 3F       		.byte	0x3f
 2000 005e 62000000 		.4byte	0x62
 2001 0062 02       		.uleb128 0x2
 2002 0063 04       		.byte	0x4
 2003 0064 05       		.byte	0x5
 2004 0065 72020000 		.4byte	.LASF7
 2005 0069 03       		.uleb128 0x3
 2006 006a 3F030000 		.4byte	.LASF8
 2007 006e 02       		.byte	0x2
 2008 006f 41       		.byte	0x41
 2009 0070 74000000 		.4byte	0x74
 2010 0074 02       		.uleb128 0x2
 2011 0075 04       		.byte	0x4
 2012 0076 07       		.byte	0x7
 2013 0077 15030000 		.4byte	.LASF9
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 48


 2014 007b 02       		.uleb128 0x2
 2015 007c 08       		.byte	0x8
 2016 007d 05       		.byte	0x5
 2017 007e E9000000 		.4byte	.LASF10
 2018 0082 02       		.uleb128 0x2
 2019 0083 08       		.byte	0x8
 2020 0084 07       		.byte	0x7
 2021 0085 16020000 		.4byte	.LASF11
 2022 0089 04       		.uleb128 0x4
 2023 008a 04       		.byte	0x4
 2024 008b 05       		.byte	0x5
 2025 008c 696E7400 		.ascii	"int\000"
 2026 0090 02       		.uleb128 0x2
 2027 0091 04       		.byte	0x4
 2028 0092 07       		.byte	0x7
 2029 0093 40020000 		.4byte	.LASF12
 2030 0097 03       		.uleb128 0x3
 2031 0098 BE000000 		.4byte	.LASF13
 2032 009c 03       		.byte	0x3
 2033 009d 15       		.byte	0x15
 2034 009e 2C000000 		.4byte	0x2c
 2035 00a2 03       		.uleb128 0x3
 2036 00a3 83020000 		.4byte	.LASF14
 2037 00a7 03       		.byte	0x3
 2038 00a8 20       		.byte	0x20
 2039 00a9 3E000000 		.4byte	0x3e
 2040 00ad 03       		.uleb128 0x3
 2041 00ae 7B020000 		.4byte	.LASF15
 2042 00b2 03       		.byte	0x3
 2043 00b3 2C       		.byte	0x2c
 2044 00b4 57000000 		.4byte	0x57
 2045 00b8 03       		.uleb128 0x3
 2046 00b9 2D020000 		.4byte	.LASF16
 2047 00bd 03       		.byte	0x3
 2048 00be 2D       		.byte	0x2d
 2049 00bf 69000000 		.4byte	0x69
 2050 00c3 05       		.uleb128 0x5
 2051 00c4 8B020000 		.4byte	.LASF17
 2052 00c8 04       		.byte	0x4
 2053 00c9 9201     		.2byte	0x192
 2054 00cb 37000000 		.4byte	0x37
 2055 00cf 05       		.uleb128 0x5
 2056 00d0 C6000000 		.4byte	.LASF18
 2057 00d4 04       		.byte	0x4
 2058 00d5 9601     		.2byte	0x196
 2059 00d7 49000000 		.4byte	0x49
 2060 00db 02       		.uleb128 0x2
 2061 00dc 04       		.byte	0x4
 2062 00dd 04       		.byte	0x4
 2063 00de D5000000 		.4byte	.LASF19
 2064 00e2 02       		.uleb128 0x2
 2065 00e3 08       		.byte	0x8
 2066 00e4 04       		.byte	0x4
 2067 00e5 38030000 		.4byte	.LASF20
 2068 00e9 02       		.uleb128 0x2
 2069 00ea 01       		.byte	0x1
 2070 00eb 08       		.byte	0x8
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 49


 2071 00ec 6D020000 		.4byte	.LASF21
 2072 00f0 05       		.uleb128 0x5
 2073 00f1 10030000 		.4byte	.LASF22
 2074 00f5 04       		.byte	0x4
 2075 00f6 3C02     		.2byte	0x23c
 2076 00f8 FC000000 		.4byte	0xfc
 2077 00fc 06       		.uleb128 0x6
 2078 00fd C3000000 		.4byte	0xc3
 2079 0101 02       		.uleb128 0x2
 2080 0102 04       		.byte	0x4
 2081 0103 07       		.byte	0x7
 2082 0104 71030000 		.4byte	.LASF23
 2083 0108 03       		.uleb128 0x3
 2084 0109 F8010000 		.4byte	.LASF24
 2085 010d 05       		.byte	0x5
 2086 010e 7E       		.byte	0x7e
 2087 010f 13010000 		.4byte	0x113
 2088 0113 07       		.uleb128 0x7
 2089 0114 F8010000 		.4byte	.LASF24
 2090 0118 08       		.uleb128 0x8
 2091 0119 04       		.byte	0x4
 2092 011a 08010000 		.4byte	0x108
 2093 011e 02       		.uleb128 0x2
 2094 011f 08       		.byte	0x8
 2095 0120 04       		.byte	0x4
 2096 0121 CF010000 		.4byte	.LASF25
 2097 0125 09       		.uleb128 0x9
 2098 0126 36000000 		.4byte	.LASF33
 2099 012a 01       		.byte	0x1
 2100 012b 06       		.byte	0x6
 2101 012c 2A       		.byte	0x2a
 2102 012d 5C010000 		.4byte	0x15c
 2103 0131 0A       		.uleb128 0xa
 2104 0132 29000000 		.4byte	.LASF26
 2105 0136 00       		.sleb128 0
 2106 0137 0A       		.uleb128 0xa
 2107 0138 DB010000 		.4byte	.LASF27
 2108 013c 01       		.sleb128 1
 2109 013d 0A       		.uleb128 0xa
 2110 013e 27030000 		.4byte	.LASF28
 2111 0142 02       		.sleb128 2
 2112 0143 0A       		.uleb128 0xa
 2113 0144 63000000 		.4byte	.LASF29
 2114 0148 03       		.sleb128 3
 2115 0149 0A       		.uleb128 0xa
 2116 014a 00000000 		.4byte	.LASF30
 2117 014e 04       		.sleb128 4
 2118 014f 0A       		.uleb128 0xa
 2119 0150 FF000000 		.4byte	.LASF31
 2120 0154 05       		.sleb128 5
 2121 0155 0A       		.uleb128 0xa
 2122 0156 BC010000 		.4byte	.LASF32
 2123 015a 06       		.sleb128 6
 2124 015b 00       		.byte	0
 2125 015c 03       		.uleb128 0x3
 2126 015d 36000000 		.4byte	.LASF33
 2127 0161 06       		.byte	0x6
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 50


 2128 0162 32       		.byte	0x32
 2129 0163 25010000 		.4byte	0x125
 2130 0167 0B       		.uleb128 0xb
 2131 0168 78000000 		.4byte	.LASF34
 2132 016c 01       		.byte	0x1
 2133 016d 5D       		.byte	0x5d
 2134 016e 00000000 		.4byte	.LFB63
 2135 0172 20000000 		.4byte	.LFE63-.LFB63
 2136 0176 01       		.uleb128 0x1
 2137 0177 9C       		.byte	0x9c
 2138 0178 0C       		.uleb128 0xc
 2139 0179 C7030000 		.4byte	.LASF35
 2140 017d 01       		.byte	0x1
 2141 017e 64       		.byte	0x64
 2142 017f 00000000 		.4byte	.LFB64
 2143 0183 38000000 		.4byte	.LFE64-.LFB64
 2144 0187 01       		.uleb128 0x1
 2145 0188 9C       		.byte	0x9c
 2146 0189 0C       		.uleb128 0xc
 2147 018a F3020000 		.4byte	.LASF36
 2148 018e 01       		.byte	0x1
 2149 018f 6D       		.byte	0x6d
 2150 0190 00000000 		.4byte	.LFB65
 2151 0194 74000000 		.4byte	.LFE65-.LFB65
 2152 0198 01       		.uleb128 0x1
 2153 0199 9C       		.byte	0x9c
 2154 019a 0B       		.uleb128 0xb
 2155 019b A3030000 		.4byte	.LASF37
 2156 019f 01       		.byte	0x1
 2157 01a0 7E       		.byte	0x7e
 2158 01a1 00000000 		.4byte	.LFB66
 2159 01a5 50000000 		.4byte	.LFE66-.LFB66
 2160 01a9 01       		.uleb128 0x1
 2161 01aa 9C       		.byte	0x9c
 2162 01ab 0C       		.uleb128 0xc
 2163 01ac 80030000 		.4byte	.LASF38
 2164 01b0 01       		.byte	0x1
 2165 01b1 88       		.byte	0x88
 2166 01b2 00000000 		.4byte	.LFB67
 2167 01b6 3C000000 		.4byte	.LFE67-.LFB67
 2168 01ba 01       		.uleb128 0x1
 2169 01bb 9C       		.byte	0x9c
 2170 01bc 0D       		.uleb128 0xd
 2171 01bd 73000000 		.4byte	.LASF84
 2172 01c1 01       		.byte	0x1
 2173 01c2 90       		.byte	0x90
 2174 01c3 89000000 		.4byte	0x89
 2175 01c7 00000000 		.4byte	.LFB68
 2176 01cb E40A0000 		.4byte	.LFE68-.LFB68
 2177 01cf 01       		.uleb128 0x1
 2178 01d0 9C       		.byte	0x9c
 2179 01d1 A9030000 		.4byte	0x3a9
 2180 01d5 0E       		.uleb128 0xe
 2181 01d6 6E756D00 		.ascii	"num\000"
 2182 01da 01       		.byte	0x1
 2183 01db 92       		.byte	0x92
 2184 01dc 89000000 		.4byte	0x89
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 51


 2185 01e0 02       		.uleb128 0x2
 2186 01e1 91       		.byte	0x91
 2187 01e2 64       		.sleb128 -28
 2188 01e3 0F       		.uleb128 0xf
 2189 01e4 CC000000 		.4byte	.LASF39
 2190 01e8 01       		.byte	0x1
 2191 01e9 92       		.byte	0x92
 2192 01ea 89000000 		.4byte	0x89
 2193 01ee 02       		.uleb128 0x2
 2194 01ef 91       		.byte	0x91
 2195 01f0 60       		.sleb128 -32
 2196 01f1 0F       		.uleb128 0xf
 2197 01f2 9B010000 		.4byte	.LASF40
 2198 01f6 01       		.byte	0x1
 2199 01f7 93       		.byte	0x93
 2200 01f8 DB000000 		.4byte	0xdb
 2201 01fc 02       		.uleb128 0x2
 2202 01fd 91       		.byte	0x91
 2203 01fe 5C       		.sleb128 -36
 2204 01ff 0F       		.uleb128 0xf
 2205 0200 4D020000 		.4byte	.LASF41
 2206 0204 01       		.byte	0x1
 2207 0205 93       		.byte	0x93
 2208 0206 DB000000 		.4byte	0xdb
 2209 020a 02       		.uleb128 0x2
 2210 020b 91       		.byte	0x91
 2211 020c 58       		.sleb128 -40
 2212 020d 0F       		.uleb128 0xf
 2213 020e 8F030000 		.4byte	.LASF42
 2214 0212 01       		.byte	0x1
 2215 0213 93       		.byte	0x93
 2216 0214 DB000000 		.4byte	0xdb
 2217 0218 02       		.uleb128 0x2
 2218 0219 91       		.byte	0x91
 2219 021a 54       		.sleb128 -44
 2220 021b 0F       		.uleb128 0xf
 2221 021c 9C000000 		.4byte	.LASF43
 2222 0220 01       		.byte	0x1
 2223 0221 93       		.byte	0x93
 2224 0222 DB000000 		.4byte	0xdb
 2225 0226 02       		.uleb128 0x2
 2226 0227 91       		.byte	0x91
 2227 0228 6C       		.sleb128 -20
 2228 0229 0E       		.uleb128 0xe
 2229 022a 62756600 		.ascii	"buf\000"
 2230 022e 01       		.byte	0x1
 2231 022f 94       		.byte	0x94
 2232 0230 A9030000 		.4byte	0x3a9
 2233 0234 03       		.uleb128 0x3
 2234 0235 91       		.byte	0x91
 2235 0236 987F     		.sleb128 -104
 2236 0238 0F       		.uleb128 0xf
 2237 0239 4A030000 		.4byte	.LASF44
 2238 023d 01       		.byte	0x1
 2239 023e 94       		.byte	0x94
 2240 023f B9030000 		.4byte	0x3b9
 2241 0243 03       		.uleb128 0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 52


 2242 0244 91       		.byte	0x91
 2243 0245 847F     		.sleb128 -124
 2244 0247 0F       		.uleb128 0xf
 2245 0248 C9020000 		.4byte	.LASF45
 2246 024c 01       		.byte	0x1
 2247 024d 94       		.byte	0x94
 2248 024e C9030000 		.4byte	0x3c9
 2249 0252 03       		.uleb128 0x3
 2250 0253 91       		.byte	0x91
 2251 0254 F47E     		.sleb128 -140
 2252 0256 0F       		.uleb128 0xf
 2253 0257 66030000 		.4byte	.LASF46
 2254 025b 01       		.byte	0x1
 2255 025c 95       		.byte	0x95
 2256 025d D9030000 		.4byte	0x3d9
 2257 0261 03       		.uleb128 0x3
 2258 0262 91       		.byte	0x91
 2259 0263 E07E     		.sleb128 -160
 2260 0265 0F       		.uleb128 0xf
 2261 0266 E1030000 		.4byte	.LASF47
 2262 026a 01       		.byte	0x1
 2263 026b 96       		.byte	0x96
 2264 026c C9030000 		.4byte	0x3c9
 2265 0270 03       		.uleb128 0x3
 2266 0271 91       		.byte	0x91
 2267 0272 D07E     		.sleb128 -176
 2268 0274 0F       		.uleb128 0xf
 2269 0275 8D000000 		.4byte	.LASF48
 2270 0279 01       		.byte	0x1
 2271 027a 97       		.byte	0x97
 2272 027b E9030000 		.4byte	0x3e9
 2273 027f 03       		.uleb128 0x3
 2274 0280 91       		.byte	0x91
 2275 0281 BC7E     		.sleb128 -196
 2276 0283 0F       		.uleb128 0xf
 2277 0284 DB020000 		.4byte	.LASF49
 2278 0288 01       		.byte	0x1
 2279 0289 98       		.byte	0x98
 2280 028a E9030000 		.4byte	0x3e9
 2281 028e 03       		.uleb128 0x3
 2282 028f 91       		.byte	0x91
 2283 0290 A87E     		.sleb128 -216
 2284 0292 0F       		.uleb128 0xf
 2285 0293 B3010000 		.4byte	.LASF50
 2286 0297 01       		.byte	0x1
 2287 0298 99       		.byte	0x99
 2288 0299 F9030000 		.4byte	0x3f9
 2289 029d 03       		.uleb128 0x3
 2290 029e 91       		.byte	0x91
 2291 029f 987E     		.sleb128 -232
 2292 02a1 0F       		.uleb128 0xf
 2293 02a2 DB000000 		.4byte	.LASF51
 2294 02a6 01       		.byte	0x1
 2295 02a7 9A       		.byte	0x9a
 2296 02a8 89000000 		.4byte	0x89
 2297 02ac 02       		.uleb128 0x2
 2298 02ad 91       		.byte	0x91
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 53


 2299 02ae 68       		.sleb128 -24
 2300 02af 10       		.uleb128 0x10
 2301 02b0 617800   		.ascii	"ax\000"
 2302 02b3 01       		.byte	0x1
 2303 02b4 9C       		.byte	0x9c
 2304 02b5 A2000000 		.4byte	0xa2
 2305 02b9 10       		.uleb128 0x10
 2306 02ba 617900   		.ascii	"ay\000"
 2307 02bd 01       		.byte	0x1
 2308 02be 9C       		.byte	0x9c
 2309 02bf A2000000 		.4byte	0xa2
 2310 02c3 0E       		.uleb128 0xe
 2311 02c4 617A00   		.ascii	"az\000"
 2312 02c7 01       		.byte	0x1
 2313 02c8 9C       		.byte	0x9c
 2314 02c9 A2000000 		.4byte	0xa2
 2315 02cd 02       		.uleb128 0x2
 2316 02ce 91       		.byte	0x91
 2317 02cf 4A       		.sleb128 -54
 2318 02d0 10       		.uleb128 0x10
 2319 02d1 6900     		.ascii	"i\000"
 2320 02d3 01       		.byte	0x1
 2321 02d4 9C       		.byte	0x9c
 2322 02d5 A2000000 		.4byte	0xa2
 2323 02d9 10       		.uleb128 0x10
 2324 02da 677800   		.ascii	"gx\000"
 2325 02dd 01       		.byte	0x1
 2326 02de 9D       		.byte	0x9d
 2327 02df A2000000 		.4byte	0xa2
 2328 02e3 10       		.uleb128 0x10
 2329 02e4 677900   		.ascii	"gy\000"
 2330 02e7 01       		.byte	0x1
 2331 02e8 9D       		.byte	0x9d
 2332 02e9 A2000000 		.4byte	0xa2
 2333 02ed 10       		.uleb128 0x10
 2334 02ee 677A00   		.ascii	"gz\000"
 2335 02f1 01       		.byte	0x1
 2336 02f2 9D       		.byte	0x9d
 2337 02f3 A2000000 		.4byte	0xa2
 2338 02f7 0F       		.uleb128 0xf
 2339 02f8 D2020000 		.4byte	.LASF52
 2340 02fc 01       		.byte	0x1
 2341 02fd 9E       		.byte	0x9e
 2342 02fe A2000000 		.4byte	0xa2
 2343 0302 02       		.uleb128 0x2
 2344 0303 91       		.byte	0x91
 2345 0304 52       		.sleb128 -46
 2346 0305 0F       		.uleb128 0xf
 2347 0306 96010000 		.4byte	.LASF53
 2348 030a 01       		.byte	0x1
 2349 030b 9F       		.byte	0x9f
 2350 030c 89000000 		.4byte	0x89
 2351 0310 03       		.uleb128 0x3
 2352 0311 91       		.byte	0x91
 2353 0312 947E     		.sleb128 -236
 2354 0314 0F       		.uleb128 0xf
 2355 0315 5E000000 		.4byte	.LASF54
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 54


 2356 0319 01       		.byte	0x1
 2357 031a 9F       		.byte	0x9f
 2358 031b 89000000 		.4byte	0x89
 2359 031f 02       		.uleb128 0x2
 2360 0320 91       		.byte	0x91
 2361 0321 4C       		.sleb128 -52
 2362 0322 11       		.uleb128 0x11
 2363 0323 24020000 		.4byte	.LBB2
 2364 0327 9E080000 		.4byte	.LBE2-.LBB2
 2365 032b 12       		.uleb128 0x12
 2366 032c 7400     		.ascii	"t\000"
 2367 032e 01       		.byte	0x1
 2368 032f 4A01     		.2byte	0x14a
 2369 0331 89000000 		.4byte	0x89
 2370 0335 03       		.uleb128 0x3
 2371 0336 91       		.byte	0x91
 2372 0337 907E     		.sleb128 -240
 2373 0339 13       		.uleb128 0x13
 2374 033a 58030000 		.4byte	.LBB3
 2375 033e 9C000000 		.4byte	.LBE3-.LBB3
 2376 0342 57030000 		.4byte	0x357
 2377 0346 14       		.uleb128 0x14
 2378 0347 3D000000 		.4byte	.LASF55
 2379 034b 01       		.byte	0x1
 2380 034c 1401     		.2byte	0x114
 2381 034e 09040000 		.4byte	0x409
 2382 0352 03       		.uleb128 0x3
 2383 0353 91       		.byte	0x91
 2384 0354 CC7D     		.sleb128 -308
 2385 0356 00       		.byte	0
 2386 0357 13       		.uleb128 0x13
 2387 0358 0C040000 		.4byte	.LBB4
 2388 035c 58000000 		.4byte	.LBE4-.LBB4
 2389 0360 73030000 		.4byte	0x373
 2390 0364 12       		.uleb128 0x12
 2391 0365 7400     		.ascii	"t\000"
 2392 0367 01       		.byte	0x1
 2393 0368 2601     		.2byte	0x126
 2394 036a 19040000 		.4byte	0x419
 2395 036e 03       		.uleb128 0x3
 2396 036f 91       		.byte	0x91
 2397 0370 887E     		.sleb128 -248
 2398 0372 00       		.byte	0
 2399 0373 11       		.uleb128 0x11
 2400 0374 4C050000 		.4byte	.LBB5
 2401 0378 76050000 		.4byte	.LBE5-.LBB5
 2402 037c 14       		.uleb128 0x14
 2403 037d 3D000000 		.4byte	.LASF55
 2404 0381 01       		.byte	0x1
 2405 0382 C301     		.2byte	0x1c3
 2406 0384 09040000 		.4byte	0x409
 2407 0388 03       		.uleb128 0x3
 2408 0389 91       		.byte	0x91
 2409 038a CC7D     		.sleb128 -308
 2410 038c 11       		.uleb128 0x11
 2411 038d 3A070000 		.4byte	.LBB6
 2412 0391 B6000000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 55


 2413 0395 14       		.uleb128 0x14
 2414 0396 3D000000 		.4byte	.LASF55
 2415 039a 01       		.byte	0x1
 2416 039b 9101     		.2byte	0x191
 2417 039d 09040000 		.4byte	0x409
 2418 03a1 03       		.uleb128 0x3
 2419 03a2 91       		.byte	0x91
 2420 03a3 CC7D     		.sleb128 -308
 2421 03a5 00       		.byte	0
 2422 03a6 00       		.byte	0
 2423 03a7 00       		.byte	0
 2424 03a8 00       		.byte	0
 2425 03a9 15       		.uleb128 0x15
 2426 03aa E9000000 		.4byte	0xe9
 2427 03ae B9030000 		.4byte	0x3b9
 2428 03b2 16       		.uleb128 0x16
 2429 03b3 01010000 		.4byte	0x101
 2430 03b7 31       		.byte	0x31
 2431 03b8 00       		.byte	0
 2432 03b9 15       		.uleb128 0x15
 2433 03ba E9000000 		.4byte	0xe9
 2434 03be C9030000 		.4byte	0x3c9
 2435 03c2 16       		.uleb128 0x16
 2436 03c3 01010000 		.4byte	0x101
 2437 03c7 13       		.byte	0x13
 2438 03c8 00       		.byte	0
 2439 03c9 15       		.uleb128 0x15
 2440 03ca E9000000 		.4byte	0xe9
 2441 03ce D9030000 		.4byte	0x3d9
 2442 03d2 16       		.uleb128 0x16
 2443 03d3 01010000 		.4byte	0x101
 2444 03d7 0D       		.byte	0xd
 2445 03d8 00       		.byte	0
 2446 03d9 15       		.uleb128 0x15
 2447 03da E9000000 		.4byte	0xe9
 2448 03de E9030000 		.4byte	0x3e9
 2449 03e2 16       		.uleb128 0x16
 2450 03e3 01010000 		.4byte	0x101
 2451 03e7 11       		.byte	0x11
 2452 03e8 00       		.byte	0
 2453 03e9 15       		.uleb128 0x15
 2454 03ea E9000000 		.4byte	0xe9
 2455 03ee F9030000 		.4byte	0x3f9
 2456 03f2 16       		.uleb128 0x16
 2457 03f3 01010000 		.4byte	0x101
 2458 03f7 10       		.byte	0x10
 2459 03f8 00       		.byte	0
 2460 03f9 15       		.uleb128 0x15
 2461 03fa E9000000 		.4byte	0xe9
 2462 03fe 09040000 		.4byte	0x409
 2463 0402 16       		.uleb128 0x16
 2464 0403 01010000 		.4byte	0x101
 2465 0407 0F       		.byte	0xf
 2466 0408 00       		.byte	0
 2467 0409 15       		.uleb128 0x15
 2468 040a E9000000 		.4byte	0xe9
 2469 040e 19040000 		.4byte	0x419
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 56


 2470 0412 16       		.uleb128 0x16
 2471 0413 01010000 		.4byte	0x101
 2472 0417 3B       		.byte	0x3b
 2473 0418 00       		.byte	0
 2474 0419 15       		.uleb128 0x15
 2475 041a E9000000 		.4byte	0xe9
 2476 041e 29040000 		.4byte	0x429
 2477 0422 16       		.uleb128 0x16
 2478 0423 01010000 		.4byte	0x101
 2479 0427 04       		.byte	0x4
 2480 0428 00       		.byte	0
 2481 0429 17       		.uleb128 0x17
 2482 042a B0030000 		.4byte	.LASF56
 2483 042e 07       		.byte	0x7
 2484 042f 9606     		.2byte	0x696
 2485 0431 35040000 		.4byte	0x435
 2486 0435 06       		.uleb128 0x6
 2487 0436 AD000000 		.4byte	0xad
 2488 043a 18       		.uleb128 0x18
 2489 043b 48000000 		.4byte	.LASF57
 2490 043f 08       		.byte	0x8
 2491 0440 9101     		.2byte	0x191
 2492 0442 97000000 		.4byte	0x97
 2493 0446 05       		.uleb128 0x5
 2494 0447 03       		.byte	0x3
 2495 0448 00000000 		.4byte	devAddr
 2496 044c 15       		.uleb128 0x15
 2497 044d 97000000 		.4byte	0x97
 2498 0451 5C040000 		.4byte	0x45c
 2499 0455 16       		.uleb128 0x16
 2500 0456 01010000 		.4byte	0x101
 2501 045a 15       		.byte	0x15
 2502 045b 00       		.byte	0
 2503 045c 18       		.uleb128 0x18
 2504 045d EC020000 		.4byte	.LASF58
 2505 0461 08       		.byte	0x8
 2506 0462 9201     		.2byte	0x192
 2507 0464 4C040000 		.4byte	0x44c
 2508 0468 05       		.uleb128 0x5
 2509 0469 03       		.byte	0x3
 2510 046a 00000000 		.4byte	buffer
 2511 046e 19       		.uleb128 0x19
 2512 046f 43000000 		.4byte	.LASF59
 2513 0473 01       		.byte	0x1
 2514 0474 32       		.byte	0x32
 2515 0475 B8000000 		.4byte	0xb8
 2516 0479 05       		.uleb128 0x5
 2517 047a 03       		.byte	0x3
 2518 047b 00000000 		.4byte	Addr
 2519 047f 1A       		.uleb128 0x1a
 2520 0480 696400   		.ascii	"id\000"
 2521 0483 01       		.byte	0x1
 2522 0484 33       		.byte	0x33
 2523 0485 62000000 		.4byte	0x62
 2524 0489 05       		.uleb128 0x5
 2525 048a 03       		.byte	0x3
 2526 048b 00000000 		.4byte	id
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 57


 2527 048f 19       		.uleb128 0x19
 2528 0490 AA010000 		.4byte	.LASF60
 2529 0494 01       		.byte	0x1
 2530 0495 33       		.byte	0x33
 2531 0496 62000000 		.4byte	0x62
 2532 049a 05       		.uleb128 0x5
 2533 049b 03       		.byte	0x3
 2534 049c 00000000 		.4byte	press_id
 2535 04a0 19       		.uleb128 0x19
 2536 04a1 36020000 		.4byte	.LASF61
 2537 04a5 01       		.byte	0x1
 2538 04a6 34       		.byte	0x34
 2539 04a7 62000000 		.4byte	0x62
 2540 04ab 05       		.uleb128 0x5
 2541 04ac 03       		.byte	0x3
 2542 04ad 00000000 		.4byte	data_time
 2543 04b1 1A       		.uleb128 0x1a
 2544 04b2 73756D00 		.ascii	"sum\000"
 2545 04b6 01       		.byte	0x1
 2546 04b7 36       		.byte	0x36
 2547 04b8 62000000 		.4byte	0x62
 2548 04bc 05       		.uleb128 0x5
 2549 04bd 03       		.byte	0x3
 2550 04be 00000000 		.4byte	sum
 2551 04c2 19       		.uleb128 0x19
 2552 04c3 C2010000 		.4byte	.LASF62
 2553 04c7 01       		.byte	0x1
 2554 04c8 37       		.byte	0x37
 2555 04c9 DB000000 		.4byte	0xdb
 2556 04cd 05       		.uleb128 0x5
 2557 04ce 03       		.byte	0x3
 2558 04cf 00000000 		.4byte	pressure_sum
 2559 04d3 19       		.uleb128 0x19
 2560 04d4 F7000000 		.4byte	.LASF63
 2561 04d8 01       		.byte	0x1
 2562 04d9 38       		.byte	0x38
 2563 04da A2000000 		.4byte	0xa2
 2564 04de 05       		.uleb128 0x5
 2565 04df 03       		.byte	0x3
 2566 04e0 00000000 		.4byte	average
 2567 04e4 19       		.uleb128 0x19
 2568 04e5 96030000 		.4byte	.LASF64
 2569 04e9 01       		.byte	0x1
 2570 04ea 39       		.byte	0x39
 2571 04eb F5040000 		.4byte	0x4f5
 2572 04ef 05       		.uleb128 0x5
 2573 04f0 03       		.byte	0x3
 2574 04f1 00000000 		.4byte	collect_flag
 2575 04f5 02       		.uleb128 0x2
 2576 04f6 01       		.byte	0x1
 2577 04f7 02       		.byte	0x2
 2578 04f8 91020000 		.4byte	.LASF65
 2579 04fc 19       		.uleb128 0x19
 2580 04fd BD030000 		.4byte	.LASF66
 2581 0501 01       		.byte	0x1
 2582 0502 3A       		.byte	0x3a
 2583 0503 F5040000 		.4byte	0x4f5
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 58


 2584 0507 05       		.uleb128 0x5
 2585 0508 03       		.byte	0x3
 2586 0509 00000000 		.4byte	wait_flag
 2587 050d 19       		.uleb128 0x19
 2588 050e B3000000 		.4byte	.LASF67
 2589 0512 01       		.byte	0x1
 2590 0513 3B       		.byte	0x3b
 2591 0514 F5040000 		.4byte	0x4f5
 2592 0518 05       		.uleb128 0x5
 2593 0519 03       		.byte	0x3
 2594 051a 00000000 		.4byte	PANIC_flag
 2595 051e 19       		.uleb128 0x19
 2596 051f 7A030000 		.4byte	.LASF68
 2597 0523 01       		.byte	0x1
 2598 0524 3D       		.byte	0x3d
 2599 0525 5C010000 		.4byte	0x15c
 2600 0529 05       		.uleb128 0x5
 2601 052a 03       		.byte	0x3
 2602 052b 00000000 		.4byte	STATE
 2603 052f 19       		.uleb128 0x19
 2604 0530 52020000 		.4byte	.LASF69
 2605 0534 01       		.byte	0x1
 2606 0535 3E       		.byte	0x3e
 2607 0536 97000000 		.4byte	0x97
 2608 053a 05       		.uleb128 0x5
 2609 053b 03       		.byte	0x3
 2610 053c 00000000 		.4byte	testnum
 2611 0540 19       		.uleb128 0x19
 2612 0541 00020000 		.4byte	.LASF70
 2613 0545 01       		.byte	0x1
 2614 0546 3E       		.byte	0x3e
 2615 0547 97000000 		.4byte	0x97
 2616 054b 05       		.uleb128 0x5
 2617 054c 03       		.byte	0x3
 2618 054d 00000000 		.4byte	countdown
 2619 0551 19       		.uleb128 0x19
 2620 0552 14000000 		.4byte	.LASF71
 2621 0556 01       		.byte	0x1
 2622 0557 3E       		.byte	0x3e
 2623 0558 97000000 		.4byte	0x97
 2624 055c 05       		.uleb128 0x5
 2625 055d 03       		.byte	0x3
 2626 055e 00000000 		.4byte	update_Data
 2627 0562 15       		.uleb128 0x15
 2628 0563 97000000 		.4byte	0x97
 2629 0567 72050000 		.4byte	0x572
 2630 056b 16       		.uleb128 0x16
 2631 056c 01010000 		.4byte	0x101
 2632 0570 3F       		.byte	0x3f
 2633 0571 00       		.byte	0
 2634 0572 19       		.uleb128 0x19
 2635 0573 20000000 		.4byte	.LASF72
 2636 0577 01       		.byte	0x1
 2637 0578 3F       		.byte	0x3f
 2638 0579 62050000 		.4byte	0x562
 2639 057d 05       		.uleb128 0x5
 2640 057e 03       		.byte	0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 59


 2641 057f 00000000 		.4byte	RxBuffer
 2642 0583 19       		.uleb128 0x19
 2643 0584 0A000000 		.4byte	.LASF73
 2644 0588 01       		.byte	0x1
 2645 0589 40       		.byte	0x40
 2646 058a 89000000 		.4byte	0x89
 2647 058e 05       		.uleb128 0x5
 2648 058f 03       		.byte	0x3
 2649 0590 00000000 		.4byte	msg_count
 2650 0594 19       		.uleb128 0x19
 2651 0595 E5020000 		.4byte	.LASF74
 2652 0599 01       		.byte	0x1
 2653 059a 40       		.byte	0x40
 2654 059b 89000000 		.4byte	0x89
 2655 059f 05       		.uleb128 0x5
 2656 05a0 03       		.byte	0x3
 2657 05a1 00000000 		.4byte	rxflag
 2658 05a5 19       		.uleb128 0x19
 2659 05a6 32030000 		.4byte	.LASF75
 2660 05aa 01       		.byte	0x1
 2661 05ab 40       		.byte	0x40
 2662 05ac 89000000 		.4byte	0x89
 2663 05b0 05       		.uleb128 0x5
 2664 05b1 03       		.byte	0x3
 2665 05b2 00000000 		.4byte	bytes
 2666 05b6 19       		.uleb128 0x19
 2667 05b7 6A000000 		.4byte	.LASF76
 2668 05bb 01       		.byte	0x1
 2669 05bc 40       		.byte	0x40
 2670 05bd 89000000 		.4byte	0x89
 2671 05c1 05       		.uleb128 0x5
 2672 05c2 03       		.byte	0x3
 2673 05c3 00000000 		.4byte	dataflag
 2674 05c7 19       		.uleb128 0x19
 2675 05c8 50000000 		.4byte	.LASF77
 2676 05cc 01       		.byte	0x1
 2677 05cd 40       		.byte	0x40
 2678 05ce 89000000 		.4byte	0x89
 2679 05d2 05       		.uleb128 0x5
 2680 05d3 03       		.byte	0x3
 2681 05d4 00000000 		.4byte	transmit_flag
 2682 05d8 15       		.uleb128 0x15
 2683 05d9 E9000000 		.4byte	0xe9
 2684 05dd E8050000 		.4byte	0x5e8
 2685 05e1 16       		.uleb128 0x16
 2686 05e2 01010000 		.4byte	0x101
 2687 05e6 0A       		.byte	0xa
 2688 05e7 00       		.byte	0
 2689 05e8 19       		.uleb128 0x19
 2690 05e9 97000000 		.4byte	.LASF78
 2691 05ed 01       		.byte	0x1
 2692 05ee 41       		.byte	0x41
 2693 05ef D8050000 		.4byte	0x5d8
 2694 05f3 05       		.uleb128 0x5
 2695 05f4 03       		.byte	0x3
 2696 05f5 00000000 		.4byte	file
 2697 05f9 15       		.uleb128 0x15
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 60


 2698 05fa E9000000 		.4byte	0xe9
 2699 05fe 09060000 		.4byte	0x609
 2700 0602 16       		.uleb128 0x16
 2701 0603 01010000 		.4byte	0x101
 2702 0607 09       		.byte	0x9
 2703 0608 00       		.byte	0
 2704 0609 19       		.uleb128 0x19
 2705 060a A3010000 		.4byte	.LASF79
 2706 060e 01       		.byte	0x1
 2707 060f 42       		.byte	0x42
 2708 0610 F9050000 		.4byte	0x5f9
 2709 0614 05       		.uleb128 0x5
 2710 0615 03       		.byte	0x3
 2711 0616 00000000 		.4byte	volume
 2712 061a 19       		.uleb128 0x19
 2713 061b DA030000 		.4byte	.LASF80
 2714 061f 01       		.byte	0x1
 2715 0620 43       		.byte	0x43
 2716 0621 18010000 		.4byte	0x118
 2717 0625 05       		.uleb128 0x5
 2718 0626 03       		.byte	0x3
 2719 0627 00000000 		.4byte	fsfile
 2720 062b 00       		.byte	0
 2721              		.section	.debug_abbrev,"",%progbits
 2722              	.Ldebug_abbrev0:
 2723 0000 01       		.uleb128 0x1
 2724 0001 11       		.uleb128 0x11
 2725 0002 01       		.byte	0x1
 2726 0003 25       		.uleb128 0x25
 2727 0004 0E       		.uleb128 0xe
 2728 0005 13       		.uleb128 0x13
 2729 0006 0B       		.uleb128 0xb
 2730 0007 03       		.uleb128 0x3
 2731 0008 0E       		.uleb128 0xe
 2732 0009 1B       		.uleb128 0x1b
 2733 000a 0E       		.uleb128 0xe
 2734 000b 55       		.uleb128 0x55
 2735 000c 17       		.uleb128 0x17
 2736 000d 11       		.uleb128 0x11
 2737 000e 01       		.uleb128 0x1
 2738 000f 10       		.uleb128 0x10
 2739 0010 17       		.uleb128 0x17
 2740 0011 00       		.byte	0
 2741 0012 00       		.byte	0
 2742 0013 02       		.uleb128 0x2
 2743 0014 24       		.uleb128 0x24
 2744 0015 00       		.byte	0
 2745 0016 0B       		.uleb128 0xb
 2746 0017 0B       		.uleb128 0xb
 2747 0018 3E       		.uleb128 0x3e
 2748 0019 0B       		.uleb128 0xb
 2749 001a 03       		.uleb128 0x3
 2750 001b 0E       		.uleb128 0xe
 2751 001c 00       		.byte	0
 2752 001d 00       		.byte	0
 2753 001e 03       		.uleb128 0x3
 2754 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 61


 2755 0020 00       		.byte	0
 2756 0021 03       		.uleb128 0x3
 2757 0022 0E       		.uleb128 0xe
 2758 0023 3A       		.uleb128 0x3a
 2759 0024 0B       		.uleb128 0xb
 2760 0025 3B       		.uleb128 0x3b
 2761 0026 0B       		.uleb128 0xb
 2762 0027 49       		.uleb128 0x49
 2763 0028 13       		.uleb128 0x13
 2764 0029 00       		.byte	0
 2765 002a 00       		.byte	0
 2766 002b 04       		.uleb128 0x4
 2767 002c 24       		.uleb128 0x24
 2768 002d 00       		.byte	0
 2769 002e 0B       		.uleb128 0xb
 2770 002f 0B       		.uleb128 0xb
 2771 0030 3E       		.uleb128 0x3e
 2772 0031 0B       		.uleb128 0xb
 2773 0032 03       		.uleb128 0x3
 2774 0033 08       		.uleb128 0x8
 2775 0034 00       		.byte	0
 2776 0035 00       		.byte	0
 2777 0036 05       		.uleb128 0x5
 2778 0037 16       		.uleb128 0x16
 2779 0038 00       		.byte	0
 2780 0039 03       		.uleb128 0x3
 2781 003a 0E       		.uleb128 0xe
 2782 003b 3A       		.uleb128 0x3a
 2783 003c 0B       		.uleb128 0xb
 2784 003d 3B       		.uleb128 0x3b
 2785 003e 05       		.uleb128 0x5
 2786 003f 49       		.uleb128 0x49
 2787 0040 13       		.uleb128 0x13
 2788 0041 00       		.byte	0
 2789 0042 00       		.byte	0
 2790 0043 06       		.uleb128 0x6
 2791 0044 35       		.uleb128 0x35
 2792 0045 00       		.byte	0
 2793 0046 49       		.uleb128 0x49
 2794 0047 13       		.uleb128 0x13
 2795 0048 00       		.byte	0
 2796 0049 00       		.byte	0
 2797 004a 07       		.uleb128 0x7
 2798 004b 13       		.uleb128 0x13
 2799 004c 00       		.byte	0
 2800 004d 03       		.uleb128 0x3
 2801 004e 0E       		.uleb128 0xe
 2802 004f 3C       		.uleb128 0x3c
 2803 0050 19       		.uleb128 0x19
 2804 0051 00       		.byte	0
 2805 0052 00       		.byte	0
 2806 0053 08       		.uleb128 0x8
 2807 0054 0F       		.uleb128 0xf
 2808 0055 00       		.byte	0
 2809 0056 0B       		.uleb128 0xb
 2810 0057 0B       		.uleb128 0xb
 2811 0058 49       		.uleb128 0x49
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 62


 2812 0059 13       		.uleb128 0x13
 2813 005a 00       		.byte	0
 2814 005b 00       		.byte	0
 2815 005c 09       		.uleb128 0x9
 2816 005d 04       		.uleb128 0x4
 2817 005e 01       		.byte	0x1
 2818 005f 03       		.uleb128 0x3
 2819 0060 0E       		.uleb128 0xe
 2820 0061 0B       		.uleb128 0xb
 2821 0062 0B       		.uleb128 0xb
 2822 0063 3A       		.uleb128 0x3a
 2823 0064 0B       		.uleb128 0xb
 2824 0065 3B       		.uleb128 0x3b
 2825 0066 0B       		.uleb128 0xb
 2826 0067 01       		.uleb128 0x1
 2827 0068 13       		.uleb128 0x13
 2828 0069 00       		.byte	0
 2829 006a 00       		.byte	0
 2830 006b 0A       		.uleb128 0xa
 2831 006c 28       		.uleb128 0x28
 2832 006d 00       		.byte	0
 2833 006e 03       		.uleb128 0x3
 2834 006f 0E       		.uleb128 0xe
 2835 0070 1C       		.uleb128 0x1c
 2836 0071 0D       		.uleb128 0xd
 2837 0072 00       		.byte	0
 2838 0073 00       		.byte	0
 2839 0074 0B       		.uleb128 0xb
 2840 0075 2E       		.uleb128 0x2e
 2841 0076 00       		.byte	0
 2842 0077 3F       		.uleb128 0x3f
 2843 0078 19       		.uleb128 0x19
 2844 0079 03       		.uleb128 0x3
 2845 007a 0E       		.uleb128 0xe
 2846 007b 3A       		.uleb128 0x3a
 2847 007c 0B       		.uleb128 0xb
 2848 007d 3B       		.uleb128 0x3b
 2849 007e 0B       		.uleb128 0xb
 2850 007f 27       		.uleb128 0x27
 2851 0080 19       		.uleb128 0x19
 2852 0081 11       		.uleb128 0x11
 2853 0082 01       		.uleb128 0x1
 2854 0083 12       		.uleb128 0x12
 2855 0084 06       		.uleb128 0x6
 2856 0085 40       		.uleb128 0x40
 2857 0086 18       		.uleb128 0x18
 2858 0087 9642     		.uleb128 0x2116
 2859 0089 19       		.uleb128 0x19
 2860 008a 00       		.byte	0
 2861 008b 00       		.byte	0
 2862 008c 0C       		.uleb128 0xc
 2863 008d 2E       		.uleb128 0x2e
 2864 008e 00       		.byte	0
 2865 008f 3F       		.uleb128 0x3f
 2866 0090 19       		.uleb128 0x19
 2867 0091 03       		.uleb128 0x3
 2868 0092 0E       		.uleb128 0xe
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 63


 2869 0093 3A       		.uleb128 0x3a
 2870 0094 0B       		.uleb128 0xb
 2871 0095 3B       		.uleb128 0x3b
 2872 0096 0B       		.uleb128 0xb
 2873 0097 27       		.uleb128 0x27
 2874 0098 19       		.uleb128 0x19
 2875 0099 11       		.uleb128 0x11
 2876 009a 01       		.uleb128 0x1
 2877 009b 12       		.uleb128 0x12
 2878 009c 06       		.uleb128 0x6
 2879 009d 40       		.uleb128 0x40
 2880 009e 18       		.uleb128 0x18
 2881 009f 9742     		.uleb128 0x2117
 2882 00a1 19       		.uleb128 0x19
 2883 00a2 00       		.byte	0
 2884 00a3 00       		.byte	0
 2885 00a4 0D       		.uleb128 0xd
 2886 00a5 2E       		.uleb128 0x2e
 2887 00a6 01       		.byte	0x1
 2888 00a7 3F       		.uleb128 0x3f
 2889 00a8 19       		.uleb128 0x19
 2890 00a9 03       		.uleb128 0x3
 2891 00aa 0E       		.uleb128 0xe
 2892 00ab 3A       		.uleb128 0x3a
 2893 00ac 0B       		.uleb128 0xb
 2894 00ad 3B       		.uleb128 0x3b
 2895 00ae 0B       		.uleb128 0xb
 2896 00af 49       		.uleb128 0x49
 2897 00b0 13       		.uleb128 0x13
 2898 00b1 11       		.uleb128 0x11
 2899 00b2 01       		.uleb128 0x1
 2900 00b3 12       		.uleb128 0x12
 2901 00b4 06       		.uleb128 0x6
 2902 00b5 40       		.uleb128 0x40
 2903 00b6 18       		.uleb128 0x18
 2904 00b7 9642     		.uleb128 0x2116
 2905 00b9 19       		.uleb128 0x19
 2906 00ba 01       		.uleb128 0x1
 2907 00bb 13       		.uleb128 0x13
 2908 00bc 00       		.byte	0
 2909 00bd 00       		.byte	0
 2910 00be 0E       		.uleb128 0xe
 2911 00bf 34       		.uleb128 0x34
 2912 00c0 00       		.byte	0
 2913 00c1 03       		.uleb128 0x3
 2914 00c2 08       		.uleb128 0x8
 2915 00c3 3A       		.uleb128 0x3a
 2916 00c4 0B       		.uleb128 0xb
 2917 00c5 3B       		.uleb128 0x3b
 2918 00c6 0B       		.uleb128 0xb
 2919 00c7 49       		.uleb128 0x49
 2920 00c8 13       		.uleb128 0x13
 2921 00c9 02       		.uleb128 0x2
 2922 00ca 18       		.uleb128 0x18
 2923 00cb 00       		.byte	0
 2924 00cc 00       		.byte	0
 2925 00cd 0F       		.uleb128 0xf
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 64


 2926 00ce 34       		.uleb128 0x34
 2927 00cf 00       		.byte	0
 2928 00d0 03       		.uleb128 0x3
 2929 00d1 0E       		.uleb128 0xe
 2930 00d2 3A       		.uleb128 0x3a
 2931 00d3 0B       		.uleb128 0xb
 2932 00d4 3B       		.uleb128 0x3b
 2933 00d5 0B       		.uleb128 0xb
 2934 00d6 49       		.uleb128 0x49
 2935 00d7 13       		.uleb128 0x13
 2936 00d8 02       		.uleb128 0x2
 2937 00d9 18       		.uleb128 0x18
 2938 00da 00       		.byte	0
 2939 00db 00       		.byte	0
 2940 00dc 10       		.uleb128 0x10
 2941 00dd 34       		.uleb128 0x34
 2942 00de 00       		.byte	0
 2943 00df 03       		.uleb128 0x3
 2944 00e0 08       		.uleb128 0x8
 2945 00e1 3A       		.uleb128 0x3a
 2946 00e2 0B       		.uleb128 0xb
 2947 00e3 3B       		.uleb128 0x3b
 2948 00e4 0B       		.uleb128 0xb
 2949 00e5 49       		.uleb128 0x49
 2950 00e6 13       		.uleb128 0x13
 2951 00e7 00       		.byte	0
 2952 00e8 00       		.byte	0
 2953 00e9 11       		.uleb128 0x11
 2954 00ea 0B       		.uleb128 0xb
 2955 00eb 01       		.byte	0x1
 2956 00ec 11       		.uleb128 0x11
 2957 00ed 01       		.uleb128 0x1
 2958 00ee 12       		.uleb128 0x12
 2959 00ef 06       		.uleb128 0x6
 2960 00f0 00       		.byte	0
 2961 00f1 00       		.byte	0
 2962 00f2 12       		.uleb128 0x12
 2963 00f3 34       		.uleb128 0x34
 2964 00f4 00       		.byte	0
 2965 00f5 03       		.uleb128 0x3
 2966 00f6 08       		.uleb128 0x8
 2967 00f7 3A       		.uleb128 0x3a
 2968 00f8 0B       		.uleb128 0xb
 2969 00f9 3B       		.uleb128 0x3b
 2970 00fa 05       		.uleb128 0x5
 2971 00fb 49       		.uleb128 0x49
 2972 00fc 13       		.uleb128 0x13
 2973 00fd 02       		.uleb128 0x2
 2974 00fe 18       		.uleb128 0x18
 2975 00ff 00       		.byte	0
 2976 0100 00       		.byte	0
 2977 0101 13       		.uleb128 0x13
 2978 0102 0B       		.uleb128 0xb
 2979 0103 01       		.byte	0x1
 2980 0104 11       		.uleb128 0x11
 2981 0105 01       		.uleb128 0x1
 2982 0106 12       		.uleb128 0x12
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 65


 2983 0107 06       		.uleb128 0x6
 2984 0108 01       		.uleb128 0x1
 2985 0109 13       		.uleb128 0x13
 2986 010a 00       		.byte	0
 2987 010b 00       		.byte	0
 2988 010c 14       		.uleb128 0x14
 2989 010d 34       		.uleb128 0x34
 2990 010e 00       		.byte	0
 2991 010f 03       		.uleb128 0x3
 2992 0110 0E       		.uleb128 0xe
 2993 0111 3A       		.uleb128 0x3a
 2994 0112 0B       		.uleb128 0xb
 2995 0113 3B       		.uleb128 0x3b
 2996 0114 05       		.uleb128 0x5
 2997 0115 49       		.uleb128 0x49
 2998 0116 13       		.uleb128 0x13
 2999 0117 02       		.uleb128 0x2
 3000 0118 18       		.uleb128 0x18
 3001 0119 00       		.byte	0
 3002 011a 00       		.byte	0
 3003 011b 15       		.uleb128 0x15
 3004 011c 01       		.uleb128 0x1
 3005 011d 01       		.byte	0x1
 3006 011e 49       		.uleb128 0x49
 3007 011f 13       		.uleb128 0x13
 3008 0120 01       		.uleb128 0x1
 3009 0121 13       		.uleb128 0x13
 3010 0122 00       		.byte	0
 3011 0123 00       		.byte	0
 3012 0124 16       		.uleb128 0x16
 3013 0125 21       		.uleb128 0x21
 3014 0126 00       		.byte	0
 3015 0127 49       		.uleb128 0x49
 3016 0128 13       		.uleb128 0x13
 3017 0129 2F       		.uleb128 0x2f
 3018 012a 0B       		.uleb128 0xb
 3019 012b 00       		.byte	0
 3020 012c 00       		.byte	0
 3021 012d 17       		.uleb128 0x17
 3022 012e 34       		.uleb128 0x34
 3023 012f 00       		.byte	0
 3024 0130 03       		.uleb128 0x3
 3025 0131 0E       		.uleb128 0xe
 3026 0132 3A       		.uleb128 0x3a
 3027 0133 0B       		.uleb128 0xb
 3028 0134 3B       		.uleb128 0x3b
 3029 0135 05       		.uleb128 0x5
 3030 0136 49       		.uleb128 0x49
 3031 0137 13       		.uleb128 0x13
 3032 0138 3F       		.uleb128 0x3f
 3033 0139 19       		.uleb128 0x19
 3034 013a 3C       		.uleb128 0x3c
 3035 013b 19       		.uleb128 0x19
 3036 013c 00       		.byte	0
 3037 013d 00       		.byte	0
 3038 013e 18       		.uleb128 0x18
 3039 013f 34       		.uleb128 0x34
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 66


 3040 0140 00       		.byte	0
 3041 0141 03       		.uleb128 0x3
 3042 0142 0E       		.uleb128 0xe
 3043 0143 3A       		.uleb128 0x3a
 3044 0144 0B       		.uleb128 0xb
 3045 0145 3B       		.uleb128 0x3b
 3046 0146 05       		.uleb128 0x5
 3047 0147 49       		.uleb128 0x49
 3048 0148 13       		.uleb128 0x13
 3049 0149 3F       		.uleb128 0x3f
 3050 014a 19       		.uleb128 0x19
 3051 014b 02       		.uleb128 0x2
 3052 014c 18       		.uleb128 0x18
 3053 014d 00       		.byte	0
 3054 014e 00       		.byte	0
 3055 014f 19       		.uleb128 0x19
 3056 0150 34       		.uleb128 0x34
 3057 0151 00       		.byte	0
 3058 0152 03       		.uleb128 0x3
 3059 0153 0E       		.uleb128 0xe
 3060 0154 3A       		.uleb128 0x3a
 3061 0155 0B       		.uleb128 0xb
 3062 0156 3B       		.uleb128 0x3b
 3063 0157 0B       		.uleb128 0xb
 3064 0158 49       		.uleb128 0x49
 3065 0159 13       		.uleb128 0x13
 3066 015a 3F       		.uleb128 0x3f
 3067 015b 19       		.uleb128 0x19
 3068 015c 02       		.uleb128 0x2
 3069 015d 18       		.uleb128 0x18
 3070 015e 00       		.byte	0
 3071 015f 00       		.byte	0
 3072 0160 1A       		.uleb128 0x1a
 3073 0161 34       		.uleb128 0x34
 3074 0162 00       		.byte	0
 3075 0163 03       		.uleb128 0x3
 3076 0164 08       		.uleb128 0x8
 3077 0165 3A       		.uleb128 0x3a
 3078 0166 0B       		.uleb128 0xb
 3079 0167 3B       		.uleb128 0x3b
 3080 0168 0B       		.uleb128 0xb
 3081 0169 49       		.uleb128 0x49
 3082 016a 13       		.uleb128 0x13
 3083 016b 3F       		.uleb128 0x3f
 3084 016c 19       		.uleb128 0x19
 3085 016d 02       		.uleb128 0x2
 3086 016e 18       		.uleb128 0x18
 3087 016f 00       		.byte	0
 3088 0170 00       		.byte	0
 3089 0171 00       		.byte	0
 3090              		.section	.debug_aranges,"",%progbits
 3091 0000 44000000 		.4byte	0x44
 3092 0004 0200     		.2byte	0x2
 3093 0006 00000000 		.4byte	.Ldebug_info0
 3094 000a 04       		.byte	0x4
 3095 000b 00       		.byte	0
 3096 000c 0000     		.2byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 67


 3097 000e 0000     		.2byte	0
 3098 0010 00000000 		.4byte	.LFB63
 3099 0014 20000000 		.4byte	.LFE63-.LFB63
 3100 0018 00000000 		.4byte	.LFB64
 3101 001c 38000000 		.4byte	.LFE64-.LFB64
 3102 0020 00000000 		.4byte	.LFB65
 3103 0024 74000000 		.4byte	.LFE65-.LFB65
 3104 0028 00000000 		.4byte	.LFB66
 3105 002c 50000000 		.4byte	.LFE66-.LFB66
 3106 0030 00000000 		.4byte	.LFB67
 3107 0034 3C000000 		.4byte	.LFE67-.LFB67
 3108 0038 00000000 		.4byte	.LFB68
 3109 003c E40A0000 		.4byte	.LFE68-.LFB68
 3110 0040 00000000 		.4byte	0
 3111 0044 00000000 		.4byte	0
 3112              		.section	.debug_ranges,"",%progbits
 3113              	.Ldebug_ranges0:
 3114 0000 00000000 		.4byte	.LFB63
 3115 0004 20000000 		.4byte	.LFE63
 3116 0008 00000000 		.4byte	.LFB64
 3117 000c 38000000 		.4byte	.LFE64
 3118 0010 00000000 		.4byte	.LFB65
 3119 0014 74000000 		.4byte	.LFE65
 3120 0018 00000000 		.4byte	.LFB66
 3121 001c 50000000 		.4byte	.LFE66
 3122 0020 00000000 		.4byte	.LFB67
 3123 0024 3C000000 		.4byte	.LFE67
 3124 0028 00000000 		.4byte	.LFB68
 3125 002c E40A0000 		.4byte	.LFE68
 3126 0030 00000000 		.4byte	0
 3127 0034 00000000 		.4byte	0
 3128              		.section	.debug_line,"",%progbits
 3129              	.Ldebug_line0:
 3130 0000 3F030000 		.section	.debug_str,"MS",%progbits,1
 3130      02009501 
 3130      00000201 
 3130      FB0E0D00 
 3130      01010101 
 3131              	.LASF30:
 3132 0000 52455355 		.ascii	"RESURFACE\000"
 3132      52464143 
 3132      4500
 3133              	.LASF73:
 3134 000a 6D73675F 		.ascii	"msg_count\000"
 3134      636F756E 
 3134      7400
 3135              	.LASF71:
 3136 0014 75706461 		.ascii	"update_Data\000"
 3136      74655F44 
 3136      61746100 
 3137              	.LASF72:
 3138 0020 52784275 		.ascii	"RxBuffer\000"
 3138      66666572 
 3138      00
 3139              	.LASF26:
 3140 0029 53595354 		.ascii	"SYSTEM_CHECK\000"
 3140      454D5F43 
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 68


 3140      4845434B 
 3140      00
 3141              	.LASF33:
 3142 0036 53544154 		.ascii	"STATES\000"
 3142      455300
 3143              	.LASF55:
 3144 003d 73646275 		.ascii	"sdbuf\000"
 3144      6600
 3145              	.LASF59:
 3146 0043 41646472 		.ascii	"Addr\000"
 3146      00
 3147              	.LASF57:
 3148 0048 64657641 		.ascii	"devAddr\000"
 3148      64647200 
 3149              	.LASF77:
 3150 0050 7472616E 		.ascii	"transmit_flag\000"
 3150      736D6974 
 3150      5F666C61 
 3150      6700
 3151              	.LASF54:
 3152 005e 6F6E6573 		.ascii	"ones\000"
 3152      00
 3153              	.LASF29:
 3154 0063 4C414E44 		.ascii	"LANDED\000"
 3154      454400
 3155              	.LASF76:
 3156 006a 64617461 		.ascii	"dataflag\000"
 3156      666C6167 
 3156      00
 3157              	.LASF84:
 3158 0073 6D61696E 		.ascii	"main\000"
 3158      00
 3159              	.LASF34:
 3160 0078 4D6F6973 		.ascii	"Moisture_ISR_Handler\000"
 3160      74757265 
 3160      5F495352 
 3160      5F48616E 
 3160      646C6572 
 3161              	.LASF48:
 3162 008d 76616375 		.ascii	"vacuumbuf\000"
 3162      756D6275 
 3162      6600
 3163              	.LASF78:
 3164 0097 66696C65 		.ascii	"file\000"
 3164      00
 3165              	.LASF43:
 3166 009c 70726573 		.ascii	"pressure_avg\000"
 3166      73757265 
 3166      5F617667 
 3166      00
 3167              	.LASF4:
 3168 00a9 73686F72 		.ascii	"short int\000"
 3168      7420696E 
 3168      7400
 3169              	.LASF67:
 3170 00b3 50414E49 		.ascii	"PANIC_flag\000"
 3170      435F666C 
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 69


 3170      616700
 3171              	.LASF13:
 3172 00be 75696E74 		.ascii	"uint8_t\000"
 3172      385F7400 
 3173              	.LASF18:
 3174 00c6 696E7431 		.ascii	"int16\000"
 3174      3600
 3175              	.LASF39:
 3176 00cc 64656369 		.ascii	"decimals\000"
 3176      6D616C73 
 3176      00
 3177              	.LASF19:
 3178 00d5 666C6F61 		.ascii	"float\000"
 3178      7400
 3179              	.LASF51:
 3180 00db 73746174 		.ascii	"stateMsgCount\000"
 3180      654D7367 
 3180      436F756E 
 3180      7400
 3181              	.LASF10:
 3182 00e9 6C6F6E67 		.ascii	"long long int\000"
 3182      206C6F6E 
 3182      6720696E 
 3182      7400
 3183              	.LASF63:
 3184 00f7 61766572 		.ascii	"average\000"
 3184      61676500 
 3185              	.LASF31:
 3186 00ff 5452414E 		.ascii	"TRANSMIT\000"
 3186      534D4954 
 3186      00
 3187              	.LASF81:
 3188 0108 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3188      4320342E 
 3188      392E3320 
 3188      32303135 
 3188      30333033 
 3189 013b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3189      20726576 
 3189      6973696F 
 3189      6E203232 
 3189      31323230 
 3190 016e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3190      66756E63 
 3190      74696F6E 
 3190      2D736563 
 3190      74696F6E 
 3191              	.LASF53:
 3192 0196 74656E73 		.ascii	"tens\000"
 3192      00
 3193              	.LASF40:
 3194 019b 766F6C74 		.ascii	"voltage\000"
 3194      61676500 
 3195              	.LASF79:
 3196 01a3 766F6C75 		.ascii	"volume\000"
 3196      6D6500
 3197              	.LASF60:
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 70


 3198 01aa 70726573 		.ascii	"press_id\000"
 3198      735F6964 
 3198      00
 3199              	.LASF50:
 3200 01b3 7472616E 		.ascii	"transbuf\000"
 3200      73627566 
 3200      00
 3201              	.LASF32:
 3202 01bc 4552524F 		.ascii	"ERROR\000"
 3202      5200
 3203              	.LASF62:
 3204 01c2 70726573 		.ascii	"pressure_sum\000"
 3204      73757265 
 3204      5F73756D 
 3204      00
 3205              	.LASF25:
 3206 01cf 6C6F6E67 		.ascii	"long double\000"
 3206      20646F75 
 3206      626C6500 
 3207              	.LASF27:
 3208 01db 57414954 		.ascii	"WAIT_TO_LAUNCH\000"
 3208      5F544F5F 
 3208      4C41554E 
 3208      434800
 3209              	.LASF1:
 3210 01ea 756E7369 		.ascii	"unsigned char\000"
 3210      676E6564 
 3210      20636861 
 3210      7200
 3211              	.LASF24:
 3212 01f8 46535F46 		.ascii	"FS_FILE\000"
 3212      494C4500 
 3213              	.LASF70:
 3214 0200 636F756E 		.ascii	"countdown\000"
 3214      74646F77 
 3214      6E00
 3215              	.LASF0:
 3216 020a 7369676E 		.ascii	"signed char\000"
 3216      65642063 
 3216      68617200 
 3217              	.LASF11:
 3218 0216 6C6F6E67 		.ascii	"long long unsigned int\000"
 3218      206C6F6E 
 3218      6720756E 
 3218      7369676E 
 3218      65642069 
 3219              	.LASF16:
 3220 022d 75696E74 		.ascii	"uint32_t\000"
 3220      33325F74 
 3220      00
 3221              	.LASF61:
 3222 0236 64617461 		.ascii	"data_time\000"
 3222      5F74696D 
 3222      6500
 3223              	.LASF12:
 3224 0240 756E7369 		.ascii	"unsigned int\000"
 3224      676E6564 
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 71


 3224      20696E74 
 3224      00
 3225              	.LASF41:
 3226 024d 74656D70 		.ascii	"temp\000"
 3226      00
 3227              	.LASF69:
 3228 0252 74657374 		.ascii	"testnum\000"
 3228      6E756D00 
 3229              	.LASF5:
 3230 025a 73686F72 		.ascii	"short unsigned int\000"
 3230      7420756E 
 3230      7369676E 
 3230      65642069 
 3230      6E7400
 3231              	.LASF21:
 3232 026d 63686172 		.ascii	"char\000"
 3232      00
 3233              	.LASF7:
 3234 0272 6C6F6E67 		.ascii	"long int\000"
 3234      20696E74 
 3234      00
 3235              	.LASF15:
 3236 027b 696E7433 		.ascii	"int32_t\000"
 3236      325F7400 
 3237              	.LASF14:
 3238 0283 696E7431 		.ascii	"int16_t\000"
 3238      365F7400 
 3239              	.LASF17:
 3240 028b 75696E74 		.ascii	"uint8\000"
 3240      3800
 3241              	.LASF65:
 3242 0291 5F426F6F 		.ascii	"_Bool\000"
 3242      6C00
 3243              	.LASF83:
 3244 0297 433A5C55 		.ascii	"C:\\Users\\gding\\Documents\\Project_O-Vac\\OVac.cy"
 3244      73657273 
 3244      5C676469 
 3244      6E675C44 
 3244      6F63756D 
 3245 02c5 64736E00 		.ascii	"dsn\000"
 3246              	.LASF45:
 3247 02c9 63757253 		.ascii	"curState\000"
 3247      74617465 
 3247      00
 3248              	.LASF52:
 3249 02d2 7A5F6F66 		.ascii	"z_offset\000"
 3249      66736574 
 3249      00
 3250              	.LASF49:
 3251 02db 72657375 		.ascii	"resurfbuf\000"
 3251      72666275 
 3251      6600
 3252              	.LASF74:
 3253 02e5 7278666C 		.ascii	"rxflag\000"
 3253      616700
 3254              	.LASF58:
 3255 02ec 62756666 		.ascii	"buffer\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 72


 3255      657200
 3256              	.LASF36:
 3257 02f3 436F756E 		.ascii	"Countdown_ISR_Handler\000"
 3257      74646F77 
 3257      6E5F4953 
 3257      525F4861 
 3257      6E646C65 
 3258              	.LASF82:
 3259 0309 6D61696E 		.ascii	"main.c\000"
 3259      2E6300
 3260              	.LASF22:
 3261 0310 72656738 		.ascii	"reg8\000"
 3261      00
 3262              	.LASF9:
 3263 0315 6C6F6E67 		.ascii	"long unsigned int\000"
 3263      20756E73 
 3263      69676E65 
 3263      6420696E 
 3263      7400
 3264              	.LASF28:
 3265 0327 44455343 		.ascii	"DESCENDING\000"
 3265      454E4449 
 3265      4E4700
 3266              	.LASF75:
 3267 0332 62797465 		.ascii	"bytes\000"
 3267      7300
 3268              	.LASF20:
 3269 0338 646F7562 		.ascii	"double\000"
 3269      6C6500
 3270              	.LASF8:
 3271 033f 5F5F7569 		.ascii	"__uint32_t\000"
 3271      6E743332 
 3271      5F7400
 3272              	.LASF44:
 3273 034a 74656D70 		.ascii	"tempbuf\000"
 3273      62756600 
 3274              	.LASF6:
 3275 0352 5F5F696E 		.ascii	"__int32_t\000"
 3275      7433325F 
 3275      7400
 3276              	.LASF3:
 3277 035c 5F5F696E 		.ascii	"__int16_t\000"
 3277      7431365F 
 3277      7400
 3278              	.LASF46:
 3279 0366 64657363 		.ascii	"descendbuf\000"
 3279      656E6462 
 3279      756600
 3280              	.LASF23:
 3281 0371 73697A65 		.ascii	"sizetype\000"
 3281      74797065 
 3281      00
 3282              	.LASF68:
 3283 037a 53544154 		.ascii	"STATE\000"
 3283      4500
 3284              	.LASF38:
 3285 0380 74656D70 		.ascii	"temp_interrupt\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\cc6v5fgn.s 			page 73


 3285      5F696E74 
 3285      65727275 
 3285      707400
 3286              	.LASF42:
 3287 038f 6F757470 		.ascii	"output\000"
 3287      757400
 3288              	.LASF64:
 3289 0396 636F6C6C 		.ascii	"collect_flag\000"
 3289      6563745F 
 3289      666C6167 
 3289      00
 3290              	.LASF37:
 3291 03a3 72785F69 		.ascii	"rx_interrupt\000"
 3291      6E746572 
 3291      72757074 
 3291      00
 3292              	.LASF56:
 3293 03b0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3293      52784275 
 3293      66666572 
 3293      00
 3294              	.LASF66:
 3295 03bd 77616974 		.ascii	"wait_flag\000"
 3295      5F666C61 
 3295      6700
 3296              	.LASF35:
 3297 03c7 53616D70 		.ascii	"Sample_ISR_Handler\000"
 3297      6C655F49 
 3297      53525F48 
 3297      616E646C 
 3297      657200
 3298              	.LASF80:
 3299 03da 66736669 		.ascii	"fsfile\000"
 3299      6C6500
 3300              	.LASF47:
 3301 03e1 6C616E64 		.ascii	"landedbuf\000"
 3301      65646275 
 3301      6600
 3302              	.LASF2:
 3303 03eb 5F5F7569 		.ascii	"__uint8_t\000"
 3303      6E74385F 
 3303      7400
 3304              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
