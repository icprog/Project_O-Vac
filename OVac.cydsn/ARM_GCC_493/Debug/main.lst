ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	devAddr,1,1
  19              		.comm	buffer,22,4
  20              		.global	Addr
  21              		.data
  22              		.align	2
  23              		.type	Addr, %object
  24              		.size	Addr, 4
  25              	Addr:
  26 0000 3F000000 		.word	63
  27              		.global	id
  28              		.align	2
  29              		.type	id, %object
  30              		.size	id, 4
  31              	id:
  32 0004 01000000 		.word	1
  33              		.global	press_id
  34              		.align	2
  35              		.type	press_id, %object
  36              		.size	press_id, 4
  37              	press_id:
  38 0008 01000000 		.word	1
  39              		.global	data_time
  40              		.bss
  41              		.align	2
  42              		.type	data_time, %object
  43              		.size	data_time, 4
  44              	data_time:
  45 0000 00000000 		.space	4
  46              		.global	sum
  47              		.align	2
  48              		.type	sum, %object
  49              		.size	sum, 4
  50              	sum:
  51 0004 00000000 		.space	4
  52              		.global	pressure_sum
  53              		.align	2
  54              		.type	pressure_sum, %object
  55              		.size	pressure_sum, 4
  56              	pressure_sum:
  57 0008 00000000 		.space	4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 2


  58              		.global	average
  59              		.align	1
  60              		.type	average, %object
  61              		.size	average, 2
  62              	average:
  63 000c 0000     		.space	2
  64              		.global	collect_flag
  65              		.type	collect_flag, %object
  66              		.size	collect_flag, 1
  67              	collect_flag:
  68 000e 00       		.space	1
  69              		.global	wait_flag
  70              		.type	wait_flag, %object
  71              		.size	wait_flag, 1
  72              	wait_flag:
  73 000f 00       		.space	1
  74              		.global	PANIC_flag
  75              		.type	PANIC_flag, %object
  76              		.size	PANIC_flag, 1
  77              	PANIC_flag:
  78 0010 00       		.space	1
  79              		.global	STATE
  80              		.data
  81              		.type	STATE, %object
  82              		.size	STATE, 1
  83              	STATE:
  84 000c 01       		.byte	1
  85              		.global	testnum
  86              		.type	testnum, %object
  87              		.size	testnum, 1
  88              	testnum:
  89 000d 01       		.byte	1
  90              		.global	countdown
  91              		.bss
  92              		.type	countdown, %object
  93              		.size	countdown, 1
  94              	countdown:
  95 0011 00       		.space	1
  96              		.global	update_Data
  97              		.type	update_Data, %object
  98              		.size	update_Data, 1
  99              	update_Data:
 100 0012 00       		.space	1
 101              		.global	RxBuffer
 102 0013 00       		.align	2
 103              		.type	RxBuffer, %object
 104              		.size	RxBuffer, 64
 105              	RxBuffer:
 106 0014 00000000 		.space	64
 106      00000000 
 106      00000000 
 106      00000000 
 106      00000000 
 107              		.global	msg_count
 108              		.align	2
 109              		.type	msg_count, %object
 110              		.size	msg_count, 4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 3


 111              	msg_count:
 112 0054 00000000 		.space	4
 113              		.global	rxflag
 114              		.align	2
 115              		.type	rxflag, %object
 116              		.size	rxflag, 4
 117              	rxflag:
 118 0058 00000000 		.space	4
 119              		.global	bytes
 120              		.align	2
 121              		.type	bytes, %object
 122              		.size	bytes, 4
 123              	bytes:
 124 005c 00000000 		.space	4
 125              		.global	dataflag
 126              		.align	2
 127              		.type	dataflag, %object
 128              		.size	dataflag, 4
 129              	dataflag:
 130 0060 00000000 		.space	4
 131              		.global	transmit_flag
 132              		.align	2
 133              		.type	transmit_flag, %object
 134              		.size	transmit_flag, 4
 135              	transmit_flag:
 136 0064 00000000 		.space	4
 137              		.global	file
 138              		.data
 139 000e 0000     		.align	2
 140              		.type	file, %object
 141              		.size	file, 11
 142              	file:
 143 0010 74657374 		.ascii	"test_1.txt\000"
 143      5F312E74 
 143      787400
 144              		.global	volume
 145 001b 00       		.bss
 146              		.align	2
 147              		.type	volume, %object
 148              		.size	volume, 10
 149              	volume:
 150 0068 00000000 		.space	10
 150      00000000 
 150      0000
 151              		.comm	fsfile,4,4
 152 0072 0000     		.section	.text.Moisture_ISR_Handler,"ax",%progbits
 153              		.align	2
 154              		.global	Moisture_ISR_Handler
 155              		.thumb
 156              		.thumb_func
 157              		.type	Moisture_ISR_Handler, %function
 158              	Moisture_ISR_Handler:
 159              	.LFB63:
 160              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 4


   4:main.c        **** * Version: 2.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   This is a source code for example project of ADC single ended mode.
   8:main.c        **** *
   9:main.c        **** *   Variable resistor(pot) is connected to +ve input of ADC using the I/O pin.
  10:main.c        **** *   P0.0. When voltage to positive terminal of ADC is 0, the output displayed
  11:main.c        **** *   on the LCD pannel is 0x0000. As voltage on positive terminal goes on
  12:main.c        **** *   increasing, the  converted value goes on increasing from 0x0000 and reaches
  13:main.c        **** *   0xFFFF when voltage becomes 1.024V. Futher increase in voltage value,
  14:main.c        **** *   doesn't cause any changes to values displayed in the LCD.
  15:main.c        **** *
  16:main.c        **** * Hardware Connections: 
  17:main.c        **** *  Connect analog input from Variable resistor to port P0[0] of DVK1 board.
  18:main.c        **** *
  19:main.c        **** ********************************************************************************
  20:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  21:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  22:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  23:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  24:main.c        **** * accompanying the software package from which you obtained this software.
  25:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  27:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  28:main.c        **** *******************************************************************************/
  29:main.c        **** 
  30:main.c        **** #include <project.h>
  31:main.c        **** #include <mpu6050.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include <string.h>
  34:main.c        **** #include <FS.h>
  35:main.c        **** #include "LiquidCrystal_I2C.h"
  36:main.c        **** #include "functions.h"
  37:main.c        **** 
  38:main.c        **** #define MPU6050 
  39:main.c        **** #define LCD
  40:main.c        **** #define SD
  41:main.c        **** //#define BT
  42:main.c        **** 
  43:main.c        **** #define MA_WINDOW 15                    // Number of samples in the moving average window.
  44:main.c        **** #define BOT_THRESHOLD 20000             // Z-Aacceleration threshold for transition into LANDED sta
  45:main.c        **** #define WAIT_TIME 1000                  // Number of ISR calls until transition into DESCENDING sta
  46:main.c        **** #define DATA_TIME 5000                  // Number of ISR calls until transition into WAIT_TO_LAUNCH
  47:main.c        **** #define BUFFER_LEN  64u                 // Buffer length for UART rx
  48:main.c        **** 
  49:main.c        **** 
  50:main.c        **** uint32_t Addr = 0x3F;                       // I2C address of LCD.
  51:main.c        **** long id = 1, press_id = 1;                 // Interrupt count.
  52:main.c        **** long data_time = 0;                        // data point num
  53:main.c        **** 
  54:main.c        **** long sum = 0;                               // Sum of accelerometer values
  55:main.c        **** float pressure_sum = 0;                     // Sum of pressure values. 
  56:main.c        **** int16_t average = 0;                        // Moving average variable, accelerometer.
  57:main.c        **** bool collect_flag = 0;                      // flag indicating when to record acceleration sample.
  58:main.c        **** bool wait_flag = 0;                         // flag indicating when to increment interrupt counter.
  59:main.c        **** bool PANIC_flag = 0;                        // flag indicating water is present in housing.
  60:main.c        **** //bool first_test = 1;                        // flag indicating first test(longer countdown)
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 5


  61:main.c        **** STATES STATE = WAIT_TO_LAUNCH;                  // Set initial state. 
  62:main.c        **** uint8_t testnum = 1, countdown = 0, update_Data = 0;
  63:main.c        **** uint8_t RxBuffer[BUFFER_LEN] = {};            // Rx Buffer
  64:main.c        **** int msg_count = 0, rxflag = 0, bytes = 0, dataflag = 0, transmit_flag = 0;    // UART variables
  65:main.c        **** char file[11] = "test_1.txt";
  66:main.c        **** char volume[10] = {};
  67:main.c        **** FS_FILE *fsfile;
  68:main.c        **** 
  69:main.c        **** /*******************************************************************************
  70:main.c        **** * Function Name: main
  71:main.c        **** ********************************************************************************
  72:main.c        **** *
  73:main.c        **** * Summary:
  74:main.c        **** *  main() performs following functions:
  75:main.c        **** *  1: Initializes the LCD.
  76:main.c        **** *  2: Initializes timer module and sampling interrupt.
  77:main.c        **** *  3: Initializes MPU6050 Accelerometer/Gyroscope module.
  78:main.c        **** *  4: Samples Z-axis acceleration data from module @ 500hz.
  79:main.c        **** *  5: Computes moving average of Z-axis acceleration values.
  80:main.c        **** *  6: Transitions from DESCENDING to LANDED state when sudden acceleration occurs
  81:main.c        **** *     (ie. moving average > 200000).
  82:main.c        **** *
  83:main.c        **** * Parameters:
  84:main.c        **** *  None.
  85:main.c        **** *
  86:main.c        **** * Return:
  87:main.c        **** *  None.
  88:main.c        **** *
  89:main.c        **** *******************************************************************************/
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** /* Moisture sensor ISR */
  93:main.c        **** CY_ISR (Moisture_ISR_Handler){
 161              		.loc 1 93 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
  94:main.c        ****     PANIC_flag = 1;                             // Set flag to indicate water
 171              		.loc 1 94 0
 172 0004 044B     		ldr	r3, .L2
 173 0006 0122     		movs	r2, #1
 174 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     STATE = RESURFACE;                          // Go to surface
 175              		.loc 1 95 0
 176 000a 044B     		ldr	r3, .L2+4
 177 000c 0422     		movs	r2, #4
 178 000e 1A70     		strb	r2, [r3]
  96:main.c        ****     Comp_Stop();                                // Stop comparator for interrupt
 179              		.loc 1 96 0
 180 0010 FFF7FEFF 		bl	Comp_Stop
  97:main.c        **** }
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 6


 181              		.loc 1 97 0
 182 0014 80BD     		pop	{r7, pc}
 183              	.L3:
 184 0016 00BF     		.align	2
 185              	.L2:
 186 0018 00000000 		.word	PANIC_flag
 187 001c 00000000 		.word	STATE
 188              		.cfi_endproc
 189              	.LFE63:
 190              		.size	Moisture_ISR_Handler, .-Moisture_ISR_Handler
 191              		.section	.text.Sample_ISR_Handler,"ax",%progbits
 192              		.align	2
 193              		.global	Sample_ISR_Handler
 194              		.thumb
 195              		.thumb_func
 196              		.type	Sample_ISR_Handler, %function
 197              	Sample_ISR_Handler:
 198              	.LFB64:
  98:main.c        **** 
  99:main.c        **** /* Sampling ISR */
 100:main.c        **** CY_ISR (Sample_ISR_Handler){
 199              		.loc 1 100 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 101:main.c        ****     Sample_Timer_STATUS;                        // Clears interrupt by accessing timer status regis
 209              		.loc 1 101 0
 210 0004 084B     		ldr	r3, .L6
 211 0006 1B78     		ldrb	r3, [r3]
 102:main.c        ****     if (STATE == DESCENDING){ 
 212              		.loc 1 102 0
 213 0008 084B     		ldr	r3, .L6+4
 214 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 215 000c 022B     		cmp	r3, #2
 216 000e 07D1     		bne	.L4
 103:main.c        ****         collect_flag = 1;
 217              		.loc 1 103 0
 218 0010 074B     		ldr	r3, .L6+8
 219 0012 0122     		movs	r2, #1
 220 0014 1A70     		strb	r2, [r3]
 104:main.c        ****         data_time++;
 221              		.loc 1 104 0
 222 0016 074B     		ldr	r3, .L6+12
 223 0018 1B68     		ldr	r3, [r3]
 224 001a 0133     		adds	r3, r3, #1
 225 001c 054A     		ldr	r2, .L6+12
 226 001e 1360     		str	r3, [r2]
 227              	.L4:
 105:main.c        ****     }
 106:main.c        **** }
 228              		.loc 1 106 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 7


 229 0020 BD46     		mov	sp, r7
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
 232 0022 5DF8047B 		ldr	r7, [sp], #4
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 0026 7047     		bx	lr
 236              	.L7:
 237              		.align	2
 238              	.L6:
 239 0028 034F0040 		.word	1073762051
 240 002c 00000000 		.word	STATE
 241 0030 00000000 		.word	collect_flag
 242 0034 00000000 		.word	data_time
 243              		.cfi_endproc
 244              	.LFE64:
 245              		.size	Sample_ISR_Handler, .-Sample_ISR_Handler
 246              		.section	.text.Countdown_ISR_Handler,"ax",%progbits
 247              		.align	2
 248              		.global	Countdown_ISR_Handler
 249              		.thumb
 250              		.thumb_func
 251              		.type	Countdown_ISR_Handler, %function
 252              	Countdown_ISR_Handler:
 253              	.LFB65:
 107:main.c        **** 
 108:main.c        **** /* Countdown ISR*/
 109:main.c        **** CY_ISR (Countdown_ISR_Handler){
 254              		.loc 1 109 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259 0000 80B4     		push	{r7}
 260              		.cfi_def_cfa_offset 4
 261              		.cfi_offset 7, -4
 262 0002 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 110:main.c        ****     Countdown_timer_STATUS;                        // Clears interrupt by accessing timer status re
 264              		.loc 1 110 0
 265 0004 0A4B     		ldr	r3, .L11
 266 0006 1B78     		ldrb	r3, [r3]
 111:main.c        ****     if (STATE == DESCENDING || STATE == LANDED || STATE == RESURFACE){
 267              		.loc 1 111 0
 268 0008 0A4B     		ldr	r3, .L11+4
 269 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 000c 022B     		cmp	r3, #2
 271 000e 07D0     		beq	.L9
 272              		.loc 1 111 0 is_stmt 0 discriminator 1
 273 0010 084B     		ldr	r3, .L11+4
 274 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0014 032B     		cmp	r3, #3
 276 0016 03D0     		beq	.L9
 277              		.loc 1 111 0 discriminator 2
 278 0018 064B     		ldr	r3, .L11+4
 279 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 001c 042B     		cmp	r3, #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 8


 281 001e 02D1     		bne	.L8
 282              	.L9:
 112:main.c        ****         wait_flag = 1;
 283              		.loc 1 112 0 is_stmt 1
 284 0020 054B     		ldr	r3, .L11+8
 285 0022 0122     		movs	r2, #1
 286 0024 1A70     		strb	r2, [r3]
 287              	.L8:
 113:main.c        ****     }
 114:main.c        ****     #ifdef BT
 115:main.c        ****         if (STATE == TRANSMIT || STATE == WAIT_TO_LAUNCH){
 116:main.c        ****             update_Data++;
 117:main.c        ****             if (update_Data == 100){
 118:main.c        ****                 transmit_flag = 1;
 119:main.c        ****                 update_Data = 0;
 120:main.c        ****             }
 121:main.c        ****         }
 122:main.c        ****             
 123:main.c        ****     #endif
 124:main.c        **** }
 288              		.loc 1 124 0
 289 0026 BD46     		mov	sp, r7
 290              		.cfi_def_cfa_register 13
 291              		@ sp needed
 292 0028 5DF8047B 		ldr	r7, [sp], #4
 293              		.cfi_restore 7
 294              		.cfi_def_cfa_offset 0
 295 002c 7047     		bx	lr
 296              	.L12:
 297 002e 00BF     		.align	2
 298              	.L11:
 299 0030 6D640040 		.word	1073767533
 300 0034 00000000 		.word	STATE
 301 0038 00000000 		.word	wait_flag
 302              		.cfi_endproc
 303              	.LFE65:
 304              		.size	Countdown_ISR_Handler, .-Countdown_ISR_Handler
 305              		.section	.text.rx_interrupt,"ax",%progbits
 306              		.align	2
 307              		.global	rx_interrupt
 308              		.thumb
 309              		.thumb_func
 310              		.type	rx_interrupt, %function
 311              	rx_interrupt:
 312              	.LFB66:
 125:main.c        **** 
 126:main.c        **** CY_ISR(rx_interrupt){
 313              		.loc 1 126 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318 0000 80B4     		push	{r7}
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 9


 127:main.c        ****     #ifdef BT
 128:main.c        ****     while (UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 129:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 130:main.c        ****         if ((msg_count - 3) == bytes)
 131:main.c        ****             rxflag = 1;
 132:main.c        ****     }
 133:main.c        ****     #endif
 134:main.c        **** }
 323              		.loc 1 134 0
 324 0004 BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0006 5DF8047B 		ldr	r7, [sp], #4
 328              		.cfi_restore 7
 329              		.cfi_def_cfa_offset 0
 330 000a 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE66:
 333              		.size	rx_interrupt, .-rx_interrupt
 334              		.section	.text.temp_interrupt,"ax",%progbits
 335              		.align	2
 336              		.global	temp_interrupt
 337              		.thumb
 338              		.thumb_func
 339              		.type	temp_interrupt, %function
 340              	temp_interrupt:
 341              	.LFB67:
 135:main.c        **** 
 136:main.c        **** CY_ISR(temp_interrupt){
 342              		.loc 1 136 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347 0000 80B4     		push	{r7}
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 137:main.c        ****     adjust_timer_STATUS;
 352              		.loc 1 137 0
 353 0004 094B     		ldr	r3, .L16
 354 0006 1B78     		ldrb	r3, [r3]
 138:main.c        ****     if (STATE == WAIT_TO_LAUNCH){ 
 355              		.loc 1 138 0
 356 0008 094B     		ldr	r3, .L16+4
 357 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 358 000c 012B     		cmp	r3, #1
 359 000e 08D1     		bne	.L14
 139:main.c        ****         wait_flag = 1;
 360              		.loc 1 139 0
 361 0010 084B     		ldr	r3, .L16+8
 362 0012 0122     		movs	r2, #1
 363 0014 1A70     		strb	r2, [r3]
 140:main.c        ****         countdown++;
 364              		.loc 1 140 0
 365 0016 084B     		ldr	r3, .L16+12
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 10


 366 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367 001a 0133     		adds	r3, r3, #1
 368 001c DAB2     		uxtb	r2, r3
 369 001e 064B     		ldr	r3, .L16+12
 370 0020 1A70     		strb	r2, [r3]
 371              	.L14:
 141:main.c        ****     }
 142:main.c        **** }
 372              		.loc 1 142 0
 373 0022 BD46     		mov	sp, r7
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 0024 5DF8047B 		ldr	r7, [sp], #4
 377              		.cfi_restore 7
 378              		.cfi_def_cfa_offset 0
 379 0028 7047     		bx	lr
 380              	.L17:
 381 002a 00BF     		.align	2
 382              	.L16:
 383 002c 67650040 		.word	1073767783
 384 0030 00000000 		.word	STATE
 385 0034 00000000 		.word	wait_flag
 386 0038 00000000 		.word	countdown
 387              		.cfi_endproc
 388              	.LFE67:
 389              		.size	temp_interrupt, .-temp_interrupt
 390              		.section	.rodata
 391              		.align	2
 392              	.LC1:
 393 0000 50536F43 		.ascii	"PSoC 5LP: O-Vac\000"
 393      20354C50 
 393      3A204F2D 
 393      56616300 
 394              		.align	2
 395              	.LC2:
 396 0010 49324320 		.ascii	"I2C Working\000"
 396      576F726B 
 396      696E6700 
 397              		.align	2
 398              	.LC3:
 399 001c 53642076 		.ascii	"Sd vol succeed\000"
 399      6F6C2073 
 399      75636365 
 399      656400
 400 002b 00       		.align	2
 401              	.LC4:
 402 002c 53642076 		.ascii	"Sd vol failed\000"
 402      6F6C2066 
 402      61696C65 
 402      6400
 403 003a 0000     		.align	2
 404              	.LC5:
 405 003c 666F726D 		.ascii	"format Succeeded\000"
 405      61742053 
 405      75636365 
 405      65646564 
 405      00
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 11


 406 004d 000000   		.align	2
 407              	.LC6:
 408 0050 666F726D 		.ascii	"format Failed\000"
 408      61742046 
 408      61696C65 
 408      6400
 409 005e 0000     		.align	2
 410              	.LC7:
 411 0060 7700     		.ascii	"w\000"
 412 0062 0000     		.align	2
 413              	.LC8:
 414 0064 46696C65 		.ascii	"File \000"
 414      2000
 415 006a 0000     		.align	2
 416              	.LC9:
 417 006c 77617320 		.ascii	"was opened\000"
 417      6F70656E 
 417      656400
 418 0077 00       		.align	2
 419              	.LC10:
 420 0078 77726974 		.ascii	"written to file\000"
 420      74656E20 
 420      746F2066 
 420      696C6500 
 421              		.align	2
 422              	.LC11:
 423 0088 4661696C 		.ascii	"Failed to write\000"
 423      65642074 
 423      6F207772 
 423      69746500 
 424              		.align	2
 425              	.LC12:
 426 0098 66696C65 		.ascii	"file not created\000"
 426      206E6F74 
 426      20637265 
 426      61746564 
 426      00
 427 00a9 000000   		.align	2
 428              	.LC13:
 429 00ac 0A2D2D2D 		.ascii	"\012------------\012\000"
 429      2D2D2D2D 
 429      2D2D2D2D 
 429      2D0A00
 430              		.global	__aeabi_i2f
 431              		.global	__aeabi_f2d
 432              		.global	__aeabi_dmul
 433              		.global	__aeabi_d2f
 434              		.global	__aeabi_fadd
 435              		.global	__aeabi_fdiv
 436              		.global	__aeabi_f2iz
 437              		.global	__aeabi_fsub
 438              		.global	__aeabi_fmul
 439 00bb 00       		.align	2
 440              	.LC14:
 441 00bc 70726573 		.ascii	"pressure: %d.%04d, %d\012\000"
 441      73757265 
 441      3A202564 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 12


 441      2E253034 
 441      642C2025 
 442 00d3 00       		.align	2
 443              	.LC15:
 444 00d4 542D6D69 		.ascii	"T-minus %d seconds\012\000"
 444      6E757320 
 444      25642073 
 444      65636F6E 
 444      64730A00 
 445              		.align	2
 446              	.LC16:
 447 00e8 53544154 		.ascii	"STATE: DESCENT\000"
 447      453A2044 
 447      45534345 
 447      4E5400
 448 00f7 00       		.align	2
 449              	.LC17:
 450 00f8 53544154 		.ascii	"STATE: LANDED\000"
 450      453A204C 
 450      414E4445 
 450      4400
 451 0106 0000     		.align	2
 452              	.LC18:
 453 0108 53544154 		.ascii	"STATE: LANDED ***********\012\000"
 453      453A204C 
 453      414E4445 
 453      44202A2A 
 453      2A2A2A2A 
 454 0123 00       		.align	2
 455              	.LC19:
 456 0124 53544154 		.ascii	"STATE: WAIT\000"
 456      453A2057 
 456      41495400 
 457              		.align	2
 458              	.LC20:
 459 0130 56414355 		.ascii	"VACUUMING\000"
 459      554D494E 
 459      4700
 460 013a 0000     		.align	2
 461              	.LC21:
 462 013c 53544154 		.ascii	"STATE: VACUUMING ***********\012\000"
 462      453A2056 
 462      41435555 
 462      4D494E47 
 462      202A2A2A 
 463 015a 0000     		.align	2
 464              	.LC22:
 465 015c 53544154 		.ascii	"STATE: RESURFACING\000"
 465      453A2052 
 465      45535552 
 465      46414349 
 465      4E4700
 466 016f 00       		.align	2
 467              	.LC23:
 468 0170 53544154 		.ascii	"STATE: RESURFACING ***********\012\000"
 468      453A2052 
 468      45535552 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 13


 468      46414349 
 468      4E47202A 
 469              		.align	2
 470              	.LC24:
 471 0190 57415445 		.ascii	"WATER DETECTED\000"
 471      52204445 
 471      54454354 
 471      454400
 472 019f 00       		.align	2
 473              	.LC25:
 474 01a0 5452414E 		.ascii	"TRANSMIT\000"
 474      534D4954 
 474      00
 475 01a9 000000   		.align	2
 476              	.LC26:
 477 01ac 53544154 		.ascii	"STATE: TRANSMIT ***********\012\000"
 477      453A2054 
 477      52414E53 
 477      4D495420 
 477      2A2A2A2A 
 478 01c9 000000   		.align	2
 479              	.LC0:
 480 01cc 53595354 		.ascii	"SYSTEM_CHECK\000"
 480      454D5F43 
 480      4845434B 
 480      00
 481 01d9 00       		.space	1
 482 01da 0000     		.section	.text.main,"ax",%progbits
 483              		.align	2
 484              		.global	main
 485              		.thumb
 486              		.thumb_func
 487              		.type	main, %function
 488              	main:
 489              	.LFB68:
 143:main.c        **** 
 144:main.c        **** int main()
 145:main.c        **** {
 490              		.loc 1 145 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 192
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494 0000 B0B5     		push	{r4, r5, r7, lr}
 495              		.cfi_def_cfa_offset 16
 496              		.cfi_offset 4, -16
 497              		.cfi_offset 5, -12
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 B2B0     		sub	sp, sp, #200
 501              		.cfi_def_cfa_offset 216
 502 0004 02AF     		add	r7, sp, #8
 503              		.cfi_def_cfa 7, 208
 146:main.c        ****     int num = 0, decimals = 0;                                       // ADC Voltage conversion plac
 504              		.loc 1 146 0
 505 0006 0023     		movs	r3, #0
 506 0008 C7F8BC30 		str	r3, [r7, #188]
 507 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 14


 508 000e C7F8B830 		str	r3, [r7, #184]
 147:main.c        ****     float voltage = 0, temp = 0, output = 0, pressure_avg = 0;       // ADC Voltage conversion vari
 509              		.loc 1 147 0
 510 0012 4FF00003 		mov	r3, #0
 511 0016 C7F8AC30 		str	r3, [r7, #172]	@ float
 512 001a 4FF00003 		mov	r3, #0
 513 001e C7F8A830 		str	r3, [r7, #168]	@ float
 514 0022 4FF00003 		mov	r3, #0
 515 0026 C7F8B430 		str	r3, [r7, #180]	@ float
 516 002a 4FF00003 		mov	r3, #0
 517 002e C7F8B030 		str	r3, [r7, #176]	@ float
 148:main.c        ****     char buf[50], tempbuf[20] = {}, curState[14] = "SYSTEM_CHECK";  // buffers, UART and initial st
 518              		.loc 1 148 0
 519 0032 07F15803 		add	r3, r7, #88
 520 0036 0022     		movs	r2, #0
 521 0038 1A60     		str	r2, [r3]
 522 003a 0433     		adds	r3, r3, #4
 523 003c 0022     		movs	r2, #0
 524 003e 1A60     		str	r2, [r3]
 525 0040 0433     		adds	r3, r3, #4
 526 0042 0022     		movs	r2, #0
 527 0044 1A60     		str	r2, [r3]
 528 0046 0433     		adds	r3, r3, #4
 529 0048 0022     		movs	r2, #0
 530 004a 1A60     		str	r2, [r3]
 531 004c 0433     		adds	r3, r3, #4
 532 004e 0022     		movs	r2, #0
 533 0050 1A60     		str	r2, [r3]
 534 0052 0433     		adds	r3, r3, #4
 535 0054 C24B     		ldr	r3, .L53+8
 536 0056 07F14804 		add	r4, r7, #72
 537 005a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 538 005c 07C4     		stmia	r4!, {r0, r1, r2}
 539 005e 2370     		strb	r3, [r4]
 540 0060 0023     		movs	r3, #0
 541 0062 87F85530 		strb	r3, [r7, #85]
 149:main.c        ****     
 150:main.c        ****     int16_t ax, ay, az, i;
 151:main.c        ****     int16_t gx, gy, gz;
 152:main.c        ****     int16_t z_offset = 0;
 542              		.loc 1 152 0
 543 0066 0023     		movs	r3, #0
 544 0068 A7F8A630 		strh	r3, [r7, #166]	@ movhi
 153:main.c        ****     int tens = 0, ones = 0;                     // digit place variables for message len of bluetoo
 545              		.loc 1 153 0
 546 006c 0023     		movs	r3, #0
 547 006e 7B64     		str	r3, [r7, #68]
 548 0070 0023     		movs	r3, #0
 549 0072 C7F8A030 		str	r3, [r7, #160]
 154:main.c        ****     
 155:main.c        ****     /* Start the components */
 156:main.c        ****     CYGlobalIntEnable;                          // enable global interrupts
 550              		.loc 1 156 0
 551              	@ 156 "main.c" 1
 552 0076 62B6     		CPSIE   i
 553              	@ 0 "" 2
 157:main.c        ****     I2C_Master_Start(); 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 15


 554              		.loc 1 157 0
 555              		.thumb
 556 0078 FFF7FEFF 		bl	I2C_Master_Start
 158:main.c        ****     ADC_Start();
 557              		.loc 1 158 0
 558 007c FFF7FEFF 		bl	ADC_Start
 159:main.c        ****     Sample_Timer_Start();                       // start timer module
 559              		.loc 1 159 0
 560 0080 FFF7FEFF 		bl	Sample_Timer_Start
 160:main.c        ****     Sample_ISR_StartEx(Sample_ISR_Handler);     // reference ISR function
 561              		.loc 1 160 0
 562 0084 B748     		ldr	r0, .L53+12
 563 0086 FFF7FEFF 		bl	Sample_ISR_StartEx
 161:main.c        ****     rx_interrupt_StartEx(rx_interrupt);
 564              		.loc 1 161 0
 565 008a B748     		ldr	r0, .L53+16
 566 008c FFF7FEFF 		bl	rx_interrupt_StartEx
 162:main.c        ****     //moisture_isr_StartEx(Moisture_ISR_Handler); // moisture isr start
 163:main.c        ****     //Comp_Start();                               // comparator for moisture start
 164:main.c        ****     UART_Start();
 567              		.loc 1 164 0
 568 0090 FFF7FEFF 		bl	UART_Start
 165:main.c        ****     
 166:main.c        ****     
 167:main.c        ****     #ifdef LCD
 168:main.c        ****         LiquidCrystal_I2C_init(Addr,16,2,0);        // initialize I2C communication with LCD
 569              		.loc 1 168 0
 570 0094 B54B     		ldr	r3, .L53+20
 571 0096 1B68     		ldr	r3, [r3]
 572 0098 DBB2     		uxtb	r3, r3
 573 009a 1846     		mov	r0, r3
 574 009c 1021     		movs	r1, #16
 575 009e 0222     		movs	r2, #2
 576 00a0 0023     		movs	r3, #0
 577 00a2 FFF7FEFF 		bl	LiquidCrystal_I2C_init
 169:main.c        ****         begin(); 
 578              		.loc 1 169 0
 579 00a6 FFF7FEFF 		bl	begin
 170:main.c        ****     
 171:main.c        ****     #endif
 172:main.c        ****    
 173:main.c        ****     /* initialize MPU6050 */
 174:main.c        ****     #ifdef MPU6050
 175:main.c        ****         MPU6050_init();    
 580              		.loc 1 175 0
 581 00aa FFF7FEFF 		bl	MPU6050_init
 176:main.c        **** 	    MPU6050_initialize(); 
 582              		.loc 1 176 0
 583 00ae FFF7FEFF 		bl	MPU6050_initialize
 177:main.c        ****     #endif
 178:main.c        ****         
 179:main.c        ****     #ifdef LCD
 180:main.c        ****         /* Startup Display */
 181:main.c        ****         LCD_print("PSoC 5LP: O-Vac");
 584              		.loc 1 181 0
 585 00b2 AF48     		ldr	r0, .L53+24
 586 00b4 FFF7FEFF 		bl	LCD_print
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 16


 182:main.c        ****         setCursor(0,1);
 587              		.loc 1 182 0
 588 00b8 0020     		movs	r0, #0
 589 00ba 0121     		movs	r1, #1
 590 00bc FFF7FEFF 		bl	setCursor
 183:main.c        ****         LCD_print("I2C Working");
 591              		.loc 1 183 0
 592 00c0 AC48     		ldr	r0, .L53+28
 593 00c2 FFF7FEFF 		bl	LCD_print
 184:main.c        ****         
 185:main.c        ****         CyDelay(1000u);   
 594              		.loc 1 185 0
 595 00c6 4FF47A70 		mov	r0, #1000
 596 00ca FFF7FEFF 		bl	CyDelay
 186:main.c        ****         clear();
 597              		.loc 1 186 0
 598 00ce FFF7FEFF 		bl	clear
 187:main.c        ****     #endif
 188:main.c        ****     
 189:main.c        ****     /* Start the ADC conversion */
 190:main.c        ****     ADC_StartConvert();
 599              		.loc 1 190 0
 600 00d2 FFF7FEFF 		bl	ADC_StartConvert
 191:main.c        **** 
 192:main.c        ****     /* Start SD card*/
 193:main.c        ****     #ifdef SD
 194:main.c        ****         {
 195:main.c        ****             FS_Init();
 601              		.loc 1 195 0
 602 00d6 FFF7FEFF 		bl	FS_Init
 196:main.c        ****             FS_Mount(volume);
 603              		.loc 1 196 0
 604 00da A748     		ldr	r0, .L53+32
 605 00dc FFF7FEFF 		bl	FS_Mount
 197:main.c        ****             if(0 != FS_GetVolumeName(0u, volume, 9u))
 606              		.loc 1 197 0
 607 00e0 0020     		movs	r0, #0
 608 00e2 A549     		ldr	r1, .L53+32
 609 00e4 0922     		movs	r2, #9
 610 00e6 FFF7FEFF 		bl	FS_GetVolumeName
 611 00ea 0346     		mov	r3, r0
 612 00ec 002B     		cmp	r3, #0
 613 00ee 03D0     		beq	.L19
 198:main.c        ****                 /* Getting volume name succeeded so prompt it on the LCD */
 199:main.c        ****                 LCD_print("Sd vol succeed");
 614              		.loc 1 199 0
 615 00f0 A248     		ldr	r0, .L53+36
 616 00f2 FFF7FEFF 		bl	LCD_print
 617 00f6 02E0     		b	.L20
 618              	.L19:
 200:main.c        ****             else
 201:main.c        ****                 LCD_print("Sd vol failed");
 619              		.loc 1 201 0
 620 00f8 A148     		ldr	r0, .L53+40
 621 00fa FFF7FEFF 		bl	LCD_print
 622              	.L20:
 202:main.c        ****                 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 17


 203:main.c        ****             CyDelay(500u);
 623              		.loc 1 203 0
 624 00fe 4FF4FA70 		mov	r0, #500
 625 0102 FFF7FEFF 		bl	CyDelay
 204:main.c        ****             clear();
 626              		.loc 1 204 0
 627 0106 FFF7FEFF 		bl	clear
 205:main.c        ****             if(0 == FS_FormatSD(volume))
 628              		.loc 1 205 0
 629 010a 9B48     		ldr	r0, .L53+32
 630 010c FFF7FEFF 		bl	FS_FormatSD
 631 0110 0346     		mov	r3, r0
 632 0112 002B     		cmp	r3, #0
 633 0114 03D1     		bne	.L21
 206:main.c        ****                 LCD_print("format Succeeded");
 634              		.loc 1 206 0
 635 0116 9B48     		ldr	r0, .L53+44
 636 0118 FFF7FEFF 		bl	LCD_print
 637 011c 02E0     		b	.L22
 638              	.L21:
 207:main.c        ****             else
 208:main.c        ****                 LCD_print("format Failed");
 639              		.loc 1 208 0
 640 011e 9A48     		ldr	r0, .L53+48
 641 0120 FFF7FEFF 		bl	LCD_print
 642              	.L22:
 209:main.c        ****           
 210:main.c        ****             CyDelay(500u);
 643              		.loc 1 210 0
 644 0124 4FF4FA70 		mov	r0, #500
 645 0128 FFF7FEFF 		bl	CyDelay
 211:main.c        ****             clear();
 646              		.loc 1 211 0
 647 012c FFF7FEFF 		bl	clear
 212:main.c        ****             
 213:main.c        ****             fsfile = FS_FOpen(file, "w");
 648              		.loc 1 213 0
 649 0130 9648     		ldr	r0, .L53+52
 650 0132 9749     		ldr	r1, .L53+56
 651 0134 FFF7FEFF 		bl	FS_FOpen
 652 0138 0246     		mov	r2, r0
 653 013a 964B     		ldr	r3, .L53+60
 654 013c 1A60     		str	r2, [r3]
 214:main.c        ****             if(fsfile)
 655              		.loc 1 214 0
 656 013e 954B     		ldr	r3, .L53+60
 657 0140 1B68     		ldr	r3, [r3]
 658 0142 002B     		cmp	r3, #0
 659 0144 27D0     		beq	.L23
 215:main.c        ****             {
 216:main.c        ****                 /* Indicate successful file creation message */
 217:main.c        ****                 LCD_print("File ");
 660              		.loc 1 217 0
 661 0146 9448     		ldr	r0, .L53+64
 662 0148 FFF7FEFF 		bl	LCD_print
 218:main.c        ****                 LCD_print("was opened");
 663              		.loc 1 218 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 18


 664 014c 9348     		ldr	r0, .L53+68
 665 014e FFF7FEFF 		bl	LCD_print
 219:main.c        ****                 /* Need some delay to indicate output on the LCD */
 220:main.c        ****                 CyDelay(500u);
 666              		.loc 1 220 0
 667 0152 4FF4FA70 		mov	r0, #500
 668 0156 FFF7FEFF 		bl	CyDelay
 221:main.c        ****                 clear();
 669              		.loc 1 221 0
 670 015a FFF7FEFF 		bl	clear
 222:main.c        ****                 
 223:main.c        ****                 if(0 != FS_Write(fsfile, file, strlen(file))) 
 671              		.loc 1 223 0
 672 015e 8D4B     		ldr	r3, .L53+60
 673 0160 1C68     		ldr	r4, [r3]
 674 0162 8A48     		ldr	r0, .L53+52
 675 0164 FFF7FEFF 		bl	strlen
 676 0168 0346     		mov	r3, r0
 677 016a 2046     		mov	r0, r4
 678 016c 8749     		ldr	r1, .L53+52
 679 016e 1A46     		mov	r2, r3
 680 0170 FFF7FEFF 		bl	FS_Write
 681 0174 0346     		mov	r3, r0
 682 0176 002B     		cmp	r3, #0
 683 0178 03D0     		beq	.L24
 224:main.c        ****                     /* Inditate that data was written to a file */
 225:main.c        ****                     LCD_print("written to file");
 684              		.loc 1 225 0
 685 017a 8948     		ldr	r0, .L53+72
 686 017c FFF7FEFF 		bl	LCD_print
 687 0180 02E0     		b	.L25
 688              	.L24:
 226:main.c        ****                 else
 227:main.c        ****                     LCD_print("Failed to write");
 689              		.loc 1 227 0
 690 0182 8848     		ldr	r0, .L53+76
 691 0184 FFF7FEFF 		bl	LCD_print
 692              	.L25:
 228:main.c        ****                     clear();
 693              		.loc 1 228 0
 694 0188 FFF7FEFF 		bl	clear
 229:main.c        ****                 CyDelay(500u);
 695              		.loc 1 229 0
 696 018c 4FF4FA70 		mov	r0, #500
 697 0190 FFF7FEFF 		bl	CyDelay
 698 0194 02E0     		b	.L26
 699              	.L23:
 230:main.c        ****             }
 231:main.c        ****             else
 232:main.c        ****                 LCD_print("file not created");
 700              		.loc 1 232 0
 701 0196 8448     		ldr	r0, .L53+80
 702 0198 FFF7FEFF 		bl	LCD_print
 703              	.L26:
 233:main.c        ****         }
 234:main.c        ****         FS_Write(fsfile, "\n------------\n", 14);
 704              		.loc 1 234 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 19


 705 019c 7D4B     		ldr	r3, .L53+60
 706 019e 1B68     		ldr	r3, [r3]
 707 01a0 1846     		mov	r0, r3
 708 01a2 8249     		ldr	r1, .L53+84
 709 01a4 0E22     		movs	r2, #14
 710 01a6 FFF7FEFF 		bl	FS_Write
 235:main.c        ****     #endif
 236:main.c        ****     
 237:main.c        ****     #ifdef LCD
 238:main.c        ****         /* Display the current State */
 239:main.c        ****         setCursor(0,0);    
 711              		.loc 1 239 0
 712 01aa 0020     		movs	r0, #0
 713 01ac 0021     		movs	r1, #0
 714 01ae FFF7FEFF 		bl	setCursor
 240:main.c        ****         LCD_print(curState);
 715              		.loc 1 240 0
 716 01b2 07F14803 		add	r3, r7, #72
 717 01b6 1846     		mov	r0, r3
 718 01b8 FFF7FEFF 		bl	LCD_print
 241:main.c        ****     #endif
 242:main.c        ****     STATE = WAIT_TO_LAUNCH;
 719              		.loc 1 242 0
 720 01bc 7C4B     		ldr	r3, .L53+88
 721 01be 0122     		movs	r2, #1
 722 01c0 1A70     		strb	r2, [r3]
 243:main.c        ****     
 244:main.c        ****     Countdown_timer_Start();
 723              		.loc 1 244 0
 724 01c2 FFF7FEFF 		bl	Countdown_timer_Start
 245:main.c        ****     adjust_timer_Start();
 725              		.loc 1 245 0
 726 01c6 FFF7FEFF 		bl	adjust_timer_Start
 246:main.c        ****     countdown_StartEx(Countdown_ISR_Handler);
 727              		.loc 1 246 0
 728 01ca 7A48     		ldr	r0, .L53+92
 729 01cc FFF7FEFF 		bl	countdown_StartEx
 247:main.c        ****     temp_isr_StartEx(temp_interrupt);
 730              		.loc 1 247 0
 731 01d0 7948     		ldr	r0, .L53+96
 732 01d2 FFF7FEFF 		bl	temp_isr_StartEx
 733              	.L51:
 734              	.LBB2:
 248:main.c        ****     
 249:main.c        ****     for(;;)
 250:main.c        ****     {
 251:main.c        ****         
 252:main.c        ****         if(ADC_IsEndConversion(ADC_RETURN_STATUS))
 735              		.loc 1 252 0
 736 01d6 0120     		movs	r0, #1
 737 01d8 FFF7FEFF 		bl	ADC_IsEndConversion
 738 01dc 0346     		mov	r3, r0
 739 01de 002B     		cmp	r3, #0
 740 01e0 00F0A080 		beq	.L27
 253:main.c        ****         {
 254:main.c        ****             output = ADC_GetResult32();
 741              		.loc 1 254 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 20


 742 01e4 FFF7FEFF 		bl	ADC_GetResult32
 743 01e8 0346     		mov	r3, r0
 744 01ea 1846     		mov	r0, r3
 745 01ec FFF7FEFF 		bl	__aeabi_i2f
 746 01f0 0346     		mov	r3, r0
 747 01f2 C7F8B430 		str	r3, [r7, #180]	@ float
 255:main.c        **** 
 256:main.c        ****             voltage = output * (3.32 / 4096);
 748              		.loc 1 256 0
 749 01f6 D7F8B400 		ldr	r0, [r7, #180]	@ float
 750 01fa FFF7FEFF 		bl	__aeabi_f2d
 751 01fe 0246     		mov	r2, r0
 752 0200 0B46     		mov	r3, r1
 753 0202 1046     		mov	r0, r2
 754 0204 1946     		mov	r1, r3
 755 0206 54A3     		adr	r3, .L53
 756 0208 D3E90023 		ldrd	r2, [r3]
 757 020c FFF7FEFF 		bl	__aeabi_dmul
 758 0210 0246     		mov	r2, r0
 759 0212 0B46     		mov	r3, r1
 760 0214 1046     		mov	r0, r2
 761 0216 1946     		mov	r1, r3
 762 0218 FFF7FEFF 		bl	__aeabi_d2f
 763 021c 0346     		mov	r3, r0
 764 021e C7F8AC30 		str	r3, [r7, #172]	@ float
 257:main.c        ****             if(wait_flag == 1){
 765              		.loc 1 257 0
 766 0222 664B     		ldr	r3, .L53+100
 767 0224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 768 0226 002B     		cmp	r3, #0
 769 0228 7CD0     		beq	.L27
 258:main.c        ****                 if (press_id < MA_WINDOW){
 770              		.loc 1 258 0
 771 022a 654B     		ldr	r3, .L53+104
 772 022c 1B68     		ldr	r3, [r3]
 773 022e 0E2B     		cmp	r3, #14
 774 0230 0BDC     		bgt	.L28
 259:main.c        ****                     pressure_sum += voltage;     
 775              		.loc 1 259 0
 776 0232 644B     		ldr	r3, .L53+108
 777 0234 1B68     		ldr	r3, [r3]	@ float
 778 0236 1846     		mov	r0, r3
 779 0238 D7F8AC10 		ldr	r1, [r7, #172]	@ float
 780 023c FFF7FEFF 		bl	__aeabi_fadd
 781 0240 0346     		mov	r3, r0
 782 0242 1A46     		mov	r2, r3
 783 0244 5F4B     		ldr	r3, .L53+108
 784 0246 1A60     		str	r2, [r3]	@ float
 785 0248 64E0     		b	.L29
 786              	.L28:
 260:main.c        ****                 }
 261:main.c        ****                 else if(press_id == MA_WINDOW){
 787              		.loc 1 261 0
 788 024a 5D4B     		ldr	r3, .L53+104
 789 024c 1B68     		ldr	r3, [r3]
 790 024e 0F2B     		cmp	r3, #15
 791 0250 14D1     		bne	.L30
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 21


 262:main.c        ****                     pressure_sum += voltage;
 792              		.loc 1 262 0
 793 0252 5C4B     		ldr	r3, .L53+108
 794 0254 1B68     		ldr	r3, [r3]	@ float
 795 0256 1846     		mov	r0, r3
 796 0258 D7F8AC10 		ldr	r1, [r7, #172]	@ float
 797 025c FFF7FEFF 		bl	__aeabi_fadd
 798 0260 0346     		mov	r3, r0
 799 0262 1A46     		mov	r2, r3
 800 0264 574B     		ldr	r3, .L53+108
 801 0266 1A60     		str	r2, [r3]	@ float
 263:main.c        ****                     pressure_avg = pressure_sum/MA_WINDOW;                            // compute ba
 802              		.loc 1 263 0
 803 0268 564B     		ldr	r3, .L53+108
 804 026a 1B68     		ldr	r3, [r3]	@ float
 805 026c 1846     		mov	r0, r3
 806 026e 5649     		ldr	r1, .L53+112
 807 0270 FFF7FEFF 		bl	__aeabi_fdiv
 808 0274 0346     		mov	r3, r0
 809 0276 C7F8B030 		str	r3, [r7, #176]	@ float
 810 027a 4BE0     		b	.L29
 811              	.L30:
 812              	.LBB3:
 264:main.c        ****                 }
 265:main.c        ****                 else{
 266:main.c        ****                     pressure_avg = ComputeMA(pressure_avg, MA_WINDOW, voltage);
 813              		.loc 1 266 0
 814 027c D7F8B000 		ldr	r0, [r7, #176]	@ float
 815 0280 0F21     		movs	r1, #15
 816 0282 D7F8AC20 		ldr	r2, [r7, #172]	@ float
 817 0286 FFF7FEFF 		bl	ComputeMA
 818 028a C7F8B000 		str	r0, [r7, #176]	@ float
 267:main.c        ****                     num = pressure_avg;
 819              		.loc 1 267 0
 820 028e D7F8B000 		ldr	r0, [r7, #176]	@ float
 821 0292 FFF7FEFF 		bl	__aeabi_f2iz
 822 0296 0346     		mov	r3, r0
 823 0298 C7F8BC30 		str	r3, [r7, #188]
 268:main.c        ****                     temp = pressure_avg - num;
 824              		.loc 1 268 0
 825 029c D7F8BC00 		ldr	r0, [r7, #188]
 826 02a0 FFF7FEFF 		bl	__aeabi_i2f
 827 02a4 0346     		mov	r3, r0
 828 02a6 D7F8B000 		ldr	r0, [r7, #176]	@ float
 829 02aa 1946     		mov	r1, r3
 830 02ac FFF7FEFF 		bl	__aeabi_fsub
 831 02b0 0346     		mov	r3, r0
 832 02b2 C7F8A830 		str	r3, [r7, #168]	@ float
 269:main.c        ****                     decimals = temp * 10000;
 833              		.loc 1 269 0
 834 02b6 D7F8A800 		ldr	r0, [r7, #168]	@ float
 835 02ba 4449     		ldr	r1, .L53+116
 836 02bc FFF7FEFF 		bl	__aeabi_fmul
 837 02c0 0346     		mov	r3, r0
 838 02c2 1846     		mov	r0, r3
 839 02c4 FFF7FEFF 		bl	__aeabi_f2iz
 840 02c8 0346     		mov	r3, r0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 22


 841 02ca C7F8B830 		str	r3, [r7, #184]
 270:main.c        ****                     char sdbuf[60] = {};
 842              		.loc 1 270 0
 843 02ce 3B1D     		adds	r3, r7, #4
 844 02d0 3C22     		movs	r2, #60
 845 02d2 1846     		mov	r0, r3
 846 02d4 0021     		movs	r1, #0
 847 02d6 FFF7FEFF 		bl	memset
 271:main.c        ****                     #ifdef SD
 272:main.c        ****                         sprintf(sdbuf, "pressure: %d.%04d, %d\n", num, decimals, (int16)output); //
 848              		.loc 1 272 0
 849 02da D7F8B400 		ldr	r0, [r7, #180]	@ float
 850 02de FFF7FEFF 		bl	__aeabi_f2iz
 851 02e2 0346     		mov	r3, r0
 852 02e4 9BB2     		uxth	r3, r3
 853 02e6 1BB2     		sxth	r3, r3
 854 02e8 3A1D     		adds	r2, r7, #4
 855 02ea 0093     		str	r3, [sp]
 856 02ec 1046     		mov	r0, r2
 857 02ee 3849     		ldr	r1, .L53+120
 858 02f0 D7F8BC20 		ldr	r2, [r7, #188]
 859 02f4 D7F8B830 		ldr	r3, [r7, #184]
 860 02f8 FFF7FEFF 		bl	sprintf
 273:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));                           
 861              		.loc 1 273 0
 862 02fc 254B     		ldr	r3, .L53+60
 863 02fe 1C68     		ldr	r4, [r3]
 864 0300 3B1D     		adds	r3, r7, #4
 865 0302 1846     		mov	r0, r3
 866 0304 FFF7FEFF 		bl	strlen
 867 0308 0246     		mov	r2, r0
 868 030a 3B1D     		adds	r3, r7, #4
 869 030c 2046     		mov	r0, r4
 870 030e 1946     		mov	r1, r3
 871 0310 FFF7FEFF 		bl	FS_Write
 872              	.L29:
 873              	.LBE3:
 274:main.c        ****                     #endif 
 275:main.c        ****                 }
 276:main.c        ****                 wait_flag = 0;
 874              		.loc 1 276 0
 875 0314 294B     		ldr	r3, .L53+100
 876 0316 0022     		movs	r2, #0
 877 0318 1A70     		strb	r2, [r3]
 277:main.c        ****                 press_id++;
 878              		.loc 1 277 0
 879 031a 294B     		ldr	r3, .L53+104
 880 031c 1B68     		ldr	r3, [r3]
 881 031e 0133     		adds	r3, r3, #1
 882 0320 274A     		ldr	r2, .L53+104
 883 0322 1360     		str	r3, [r2]
 884              	.L27:
 278:main.c        ****             }
 279:main.c        ****             
 280:main.c        ****         }
 281:main.c        ****         
 282:main.c        ****     /* Bluetooth message response*/
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 23


 283:main.c        ****     #ifdef BT
 284:main.c        ****         if (msg_count == 2){
 285:main.c        ****             tens = RxBuffer[0] - 48;
 286:main.c        ****             ones = RxBuffer[1] - 48;
 287:main.c        ****             bytes = (tens * 10) + ones;
 288:main.c        ****         } 
 289:main.c        ****         
 290:main.c        ****         if(rxflag) {
 291:main.c        ****             uint8_to_char(RxBuffer, &tempbuf[0], 20);
 292:main.c        ****             BT_Process(&tempbuf[3], &STATE, bytes, &dataflag);
 293:main.c        ****             msg_count = 0; bytes = 0;
 294:main.c        ****             memset(RxBuffer, 0, BUFFER_LEN);
 295:main.c        ****             rxflag = 0;
 296:main.c        ****         }
 297:main.c        ****     #endif
 298:main.c        ****     
 299:main.c        ****         /* Display Z-Acceleration */
 300:main.c        **** 
 301:main.c        ****         az = MPU6050_getAccelerationZ();
 885              		.loc 1 301 0
 886 0324 FFF7FEFF 		bl	MPU6050_getAccelerationZ
 887 0328 0346     		mov	r3, r0
 888 032a A7F89E30 		strh	r3, [r7, #158]	@ movhi
 302:main.c        **** 
 303:main.c        ****         int t = 1;
 889              		.loc 1 303 0
 890 032e 0123     		movs	r3, #1
 891 0330 3B64     		str	r3, [r7, #64]
 304:main.c        ****         /* State Machine */
 305:main.c        ****         switch (STATE){
 892              		.loc 1 305 0
 893 0332 1F4B     		ldr	r3, .L53+88
 894 0334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0336 013B     		subs	r3, r3, #1
 896 0338 042B     		cmp	r3, #4
 897 033a 00F25B82 		bhi	.L52
 898 033e 01A2     		adr	r2, .L33
 899 0340 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 900              		.p2align 2
 901              	.L33:
 902 0344 D5030000 		.word	.L32+1
 903 0348 8F040000 		.word	.L34+1
 904 034c 89060000 		.word	.L35+1
 905 0350 55070000 		.word	.L36+1
 906 0354 D1070000 		.word	.L37+1
 907              		.p2align 1
 908              	.L54:
 909              		.align	3
 910              	.L53:
 911 0358 8FC2F528 		.word	687194767
 912 035c 5C8F4A3F 		.word	1061850972
 913 0360 CC010000 		.word	.LC0
 914 0364 00000000 		.word	Sample_ISR_Handler
 915 0368 00000000 		.word	rx_interrupt
 916 036c 00000000 		.word	Addr
 917 0370 00000000 		.word	.LC1
 918 0374 10000000 		.word	.LC2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 24


 919 0378 00000000 		.word	volume
 920 037c 1C000000 		.word	.LC3
 921 0380 2C000000 		.word	.LC4
 922 0384 3C000000 		.word	.LC5
 923 0388 50000000 		.word	.LC6
 924 038c 00000000 		.word	file
 925 0390 60000000 		.word	.LC7
 926 0394 00000000 		.word	fsfile
 927 0398 64000000 		.word	.LC8
 928 039c 6C000000 		.word	.LC9
 929 03a0 78000000 		.word	.LC10
 930 03a4 88000000 		.word	.LC11
 931 03a8 98000000 		.word	.LC12
 932 03ac AC000000 		.word	.LC13
 933 03b0 00000000 		.word	STATE
 934 03b4 00000000 		.word	Countdown_ISR_Handler
 935 03b8 00000000 		.word	temp_interrupt
 936 03bc 00000000 		.word	wait_flag
 937 03c0 00000000 		.word	press_id
 938 03c4 00000000 		.word	pressure_sum
 939 03c8 00007041 		.word	1097859072
 940 03cc 00401C46 		.word	1176256512
 941 03d0 BC000000 		.word	.LC14
 942              	.L32:
 943              	.LBB4:
 306:main.c        ****     
 307:main.c        ****             case WAIT_TO_LAUNCH:
 308:main.c        ****                 id = 1;                                // Interrupt count.
 944              		.loc 1 308 0
 945 03d4 994B     		ldr	r3, .L55
 946 03d6 0122     		movs	r2, #1
 947 03d8 1A60     		str	r2, [r3]
 309:main.c        ****                 data_time = 0;                        // data point num
 948              		.loc 1 309 0
 949 03da 994B     		ldr	r3, .L55+4
 950 03dc 0022     		movs	r2, #0
 951 03de 1A60     		str	r2, [r3]
 310:main.c        ****                 sum = 0;                               // Sum of accelerometer values. 
 952              		.loc 1 310 0
 953 03e0 984B     		ldr	r3, .L55+8
 954 03e2 0022     		movs	r2, #0
 955 03e4 1A60     		str	r2, [r3]
 311:main.c        ****                 average = 0;                        // Moving average variable.
 956              		.loc 1 311 0
 957 03e6 984B     		ldr	r3, .L55+12
 958 03e8 0022     		movs	r2, #0
 959 03ea 1A80     		strh	r2, [r3]	@ movhi
 312:main.c        ****                 collect_flag = 0;                      // flag indicating when to record accelerati
 960              		.loc 1 312 0
 961 03ec 974B     		ldr	r3, .L55+16
 962 03ee 0022     		movs	r2, #0
 963 03f0 1A70     		strb	r2, [r3]
 313:main.c        ****                 //wait_flag = 0;                         // flag indicating when to increment inter
 314:main.c        ****                 PANIC_flag = 0;                        // flag indicating water is present in housi
 964              		.loc 1 314 0
 965 03f2 974B     		ldr	r3, .L55+20
 966 03f4 0022     		movs	r2, #0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 25


 967 03f6 1A70     		strb	r2, [r3]
 315:main.c        ****                 //bool first_test = 1;                        // flag indicating first test(longer 
 316:main.c        ****                 testnum = 1; //countdown = 0;
 968              		.loc 1 316 0
 969 03f8 964B     		ldr	r3, .L55+24
 970 03fa 0122     		movs	r2, #1
 971 03fc 1A70     		strb	r2, [r3]
 317:main.c        ****             
 318:main.c        ****                 if (transmit_flag){
 972              		.loc 1 318 0
 973 03fe 964B     		ldr	r3, .L55+28
 974 0400 1B68     		ldr	r3, [r3]
 975 0402 002B     		cmp	r3, #0
 976 0404 0BD0     		beq	.L38
 319:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &tens); // Here, the STATE variable only matte
 977              		.loc 1 319 0
 978 0406 07F15802 		add	r2, r7, #88
 979 040a 07F14403 		add	r3, r7, #68
 980 040e 1046     		mov	r0, r2
 981 0410 9249     		ldr	r1, .L55+32
 982 0412 0A22     		movs	r2, #10
 983 0414 FFF7FEFF 		bl	BT_Send
 320:main.c        ****                     transmit_flag = 0;
 984              		.loc 1 320 0
 985 0418 8F4B     		ldr	r3, .L55+28
 986 041a 0022     		movs	r2, #0
 987 041c 1A60     		str	r2, [r3]
 988              	.L38:
 321:main.c        ****                 }
 322:main.c        ****                 if(wait_flag == 1){
 989              		.loc 1 322 0
 990 041e 904B     		ldr	r3, .L55+36
 991 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 0422 002B     		cmp	r3, #0
 993 0424 32D0     		beq	.L39
 323:main.c        ****                     #ifdef LCD
 324:main.c        ****                         setCursor(0,0);
 994              		.loc 1 324 0
 995 0426 0020     		movs	r0, #0
 996 0428 0021     		movs	r1, #0
 997 042a FFF7FEFF 		bl	setCursor
 325:main.c        ****                         clear();
 998              		.loc 1 325 0
 999 042e FFF7FEFF 		bl	clear
 326:main.c        ****                         
 327:main.c        ****                         sprintf(buf, "T-minus %d seconds\n", (15 - countdown)); // countdown
 1000              		.loc 1 327 0
 1001 0432 8C4B     		ldr	r3, .L55+40
 1002 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 0436 C3F10F03 		rsb	r3, r3, #15
 1004 043a 07F16C02 		add	r2, r7, #108
 1005 043e 1046     		mov	r0, r2
 1006 0440 8949     		ldr	r1, .L55+44
 1007 0442 1A46     		mov	r2, r3
 1008 0444 FFF7FEFF 		bl	sprintf
 328:main.c        ****                         LCD_print(buf);
 1009              		.loc 1 328 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 26


 1010 0448 07F16C03 		add	r3, r7, #108
 1011 044c 1846     		mov	r0, r3
 1012 044e FFF7FEFF 		bl	LCD_print
 329:main.c        ****                     #endif
 330:main.c        ****                     if(countdown == 15){
 1013              		.loc 1 330 0
 1014 0452 844B     		ldr	r3, .L55+40
 1015 0454 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 0456 0F2B     		cmp	r3, #15
 1017 0458 14D1     		bne	.L40
 331:main.c        ****                         STATE = DESCENDING;
 1018              		.loc 1 331 0
 1019 045a 804B     		ldr	r3, .L55+32
 1020 045c 0222     		movs	r2, #2
 1021 045e 1A70     		strb	r2, [r3]
 332:main.c        ****                         #ifdef LCD
 333:main.c        ****                             setCursor(0,0);
 1022              		.loc 1 333 0
 1023 0460 0020     		movs	r0, #0
 1024 0462 0021     		movs	r1, #0
 1025 0464 FFF7FEFF 		bl	setCursor
 334:main.c        ****                             clear();
 1026              		.loc 1 334 0
 1027 0468 FFF7FEFF 		bl	clear
 335:main.c        ****                             LCD_print("STATE: DESCENT");
 1028              		.loc 1 335 0
 1029 046c 7F48     		ldr	r0, .L55+48
 1030 046e FFF7FEFF 		bl	LCD_print
 336:main.c        ****                         #endif           
 337:main.c        ****                         id=0;
 1031              		.loc 1 337 0
 1032 0472 724B     		ldr	r3, .L55
 1033 0474 0022     		movs	r2, #0
 1034 0476 1A60     		str	r2, [r3]
 338:main.c        ****                         data_time = 0;
 1035              		.loc 1 338 0
 1036 0478 714B     		ldr	r3, .L55+4
 1037 047a 0022     		movs	r2, #0
 1038 047c 1A60     		str	r2, [r3]
 339:main.c        ****                         countdown = 9; 
 1039              		.loc 1 339 0
 1040 047e 794B     		ldr	r3, .L55+40
 1041 0480 0922     		movs	r2, #9
 1042 0482 1A70     		strb	r2, [r3]
 1043              	.L40:
 340:main.c        ****                     }
 341:main.c        ****                     wait_flag = 0; 
 1044              		.loc 1 341 0
 1045 0484 764B     		ldr	r3, .L55+36
 1046 0486 0022     		movs	r2, #0
 1047 0488 1A70     		strb	r2, [r3]
 342:main.c        ****                 }
 343:main.c        ****                 break;
 1048              		.loc 1 343 0
 1049 048a B4E1     		b	.L41
 1050              	.L39:
 1051 048c B3E1     		b	.L41
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 27


 1052              	.L34:
 344:main.c        ****                 
 345:main.c        ****             case DESCENDING:
 346:main.c        ****                 if(collect_flag == 1){
 1053              		.loc 1 346 0
 1054 048e 6F4B     		ldr	r3, .L55+16
 1055 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1056 0492 002B     		cmp	r3, #0
 1057 0494 00F0A680 		beq	.L42
 347:main.c        ****                     if (id < MA_WINDOW){
 1058              		.loc 1 347 0
 1059 0498 684B     		ldr	r3, .L55
 1060 049a 1B68     		ldr	r3, [r3]
 1061 049c 0E2B     		cmp	r3, #14
 1062 049e 07DC     		bgt	.L43
 348:main.c        ****                         sum += az;     
 1063              		.loc 1 348 0
 1064 04a0 B7F99E20 		ldrsh	r2, [r7, #158]
 1065 04a4 674B     		ldr	r3, .L55+8
 1066 04a6 1B68     		ldr	r3, [r3]
 1067 04a8 1344     		add	r3, r3, r2
 1068 04aa 664A     		ldr	r2, .L55+8
 1069 04ac 1360     		str	r3, [r2]
 1070 04ae 31E0     		b	.L44
 1071              	.L43:
 349:main.c        ****                     }
 350:main.c        ****                     else if(id == MA_WINDOW){
 1072              		.loc 1 350 0
 1073 04b0 624B     		ldr	r3, .L55
 1074 04b2 1B68     		ldr	r3, [r3]
 1075 04b4 0F2B     		cmp	r3, #15
 1076 04b6 13D1     		bne	.L45
 351:main.c        ****                         sum += az;
 1077              		.loc 1 351 0
 1078 04b8 B7F99E20 		ldrsh	r2, [r7, #158]
 1079 04bc 614B     		ldr	r3, .L55+8
 1080 04be 1B68     		ldr	r3, [r3]
 1081 04c0 1344     		add	r3, r3, r2
 1082 04c2 604A     		ldr	r2, .L55+8
 1083 04c4 1360     		str	r3, [r2]
 352:main.c        ****                         average = sum/MA_WINDOW;                            //compute baseline aver
 1084              		.loc 1 352 0
 1085 04c6 5F4B     		ldr	r3, .L55+8
 1086 04c8 1B68     		ldr	r3, [r3]
 1087 04ca 694A     		ldr	r2, .L55+52
 1088 04cc 82FB0312 		smull	r1, r2, r2, r3
 1089 04d0 1A44     		add	r2, r2, r3
 1090 04d2 D210     		asrs	r2, r2, #3
 1091 04d4 DB17     		asrs	r3, r3, #31
 1092 04d6 D31A     		subs	r3, r2, r3
 1093 04d8 9AB2     		uxth	r2, r3
 1094 04da 5B4B     		ldr	r3, .L55+12
 1095 04dc 1A80     		strh	r2, [r3]	@ movhi
 1096 04de 19E0     		b	.L44
 1097              	.L45:
 353:main.c        ****                     }
 354:main.c        ****                     else{
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 28


 355:main.c        ****                         average = ComputeMA(average, MA_WINDOW, az);
 1098              		.loc 1 355 0
 1099 04e0 594B     		ldr	r3, .L55+12
 1100 04e2 1B88     		ldrh	r3, [r3]
 1101 04e4 1BB2     		sxth	r3, r3
 1102 04e6 1846     		mov	r0, r3
 1103 04e8 FFF7FEFF 		bl	__aeabi_i2f
 1104 04ec 0446     		mov	r4, r0
 1105 04ee B7F99E30 		ldrsh	r3, [r7, #158]
 1106 04f2 1846     		mov	r0, r3
 1107 04f4 FFF7FEFF 		bl	__aeabi_i2f
 1108 04f8 0346     		mov	r3, r0
 1109 04fa 2046     		mov	r0, r4
 1110 04fc 0F21     		movs	r1, #15
 1111 04fe 1A46     		mov	r2, r3
 1112 0500 FFF7FEFF 		bl	ComputeMA
 1113 0504 0346     		mov	r3, r0
 1114 0506 1846     		mov	r0, r3
 1115 0508 FFF7FEFF 		bl	__aeabi_f2iz
 1116 050c 0346     		mov	r3, r0
 1117 050e 9AB2     		uxth	r2, r3
 1118 0510 4D4B     		ldr	r3, .L55+12
 1119 0512 1A80     		strh	r2, [r3]	@ movhi
 1120              	.L44:
 356:main.c        ****                     }
 357:main.c        ****                     
 358:main.c        ****                     if(average > BOT_THRESHOLD){                        
 1121              		.loc 1 358 0
 1122 0514 4C4B     		ldr	r3, .L55+12
 1123 0516 1B88     		ldrh	r3, [r3]
 1124 0518 1BB2     		sxth	r3, r3
 1125 051a 44F62062 		movw	r2, #20000
 1126 051e 9342     		cmp	r3, r2
 1127 0520 36DD     		ble	.L46
 1128              	.LBB5:
 359:main.c        ****                         STATE = LANDED;                                     //Switch to LANDED stat
 1129              		.loc 1 359 0
 1130 0522 4E4B     		ldr	r3, .L55+32
 1131 0524 0322     		movs	r2, #3
 1132 0526 1A70     		strb	r2, [r3]
 360:main.c        ****                         #ifdef LCD
 361:main.c        ****                             setCursor(0,0);
 1133              		.loc 1 361 0
 1134 0528 0020     		movs	r0, #0
 1135 052a 0021     		movs	r1, #0
 1136 052c FFF7FEFF 		bl	setCursor
 362:main.c        ****                             clear();
 1137              		.loc 1 362 0
 1138 0530 FFF7FEFF 		bl	clear
 363:main.c        ****                             LCD_print("STATE: LANDED");  
 1139              		.loc 1 363 0
 1140 0534 4F48     		ldr	r0, .L55+56
 1141 0536 FFF7FEFF 		bl	LCD_print
 364:main.c        ****                         #endif
 365:main.c        ****                         char sdbuf[60] = {};
 1142              		.loc 1 365 0
 1143 053a 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 29


 1144 053c 3C22     		movs	r2, #60
 1145 053e 1846     		mov	r0, r3
 1146 0540 0021     		movs	r1, #0
 1147 0542 FFF7FEFF 		bl	memset
 366:main.c        ****                         #ifdef SD
 367:main.c        ****                             sprintf(sdbuf, "STATE: LANDED ***********\n");
 1148              		.loc 1 367 0
 1149 0546 3B1D     		adds	r3, r7, #4
 1150 0548 4B4A     		ldr	r2, .L55+60
 1151 054a 1C46     		mov	r4, r3
 1152 054c 1546     		mov	r5, r2
 1153 054e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1154 0550 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1155 0552 95E80700 		ldmia	r5, {r0, r1, r2}
 1156 0556 03C4     		stmia	r4!, {r0, r1}
 1157 0558 2280     		strh	r2, [r4]	@ movhi
 1158 055a 0234     		adds	r4, r4, #2
 1159 055c 130C     		lsrs	r3, r2, #16
 1160 055e 2370     		strb	r3, [r4]
 368:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1161              		.loc 1 368 0
 1162 0560 464B     		ldr	r3, .L55+64
 1163 0562 1C68     		ldr	r4, [r3]
 1164 0564 3B1D     		adds	r3, r7, #4
 1165 0566 1846     		mov	r0, r3
 1166 0568 FFF7FEFF 		bl	strlen
 1167 056c 0246     		mov	r2, r0
 1168 056e 3B1D     		adds	r3, r7, #4
 1169 0570 2046     		mov	r0, r4
 1170 0572 1946     		mov	r1, r3
 1171 0574 FFF7FEFF 		bl	FS_Write
 369:main.c        ****                         #endif
 370:main.c        ****                         id=0;                                                   //reset sample coun
 1172              		.loc 1 370 0
 1173 0578 304B     		ldr	r3, .L55
 1174 057a 0022     		movs	r2, #0
 1175 057c 1A60     		str	r2, [r3]
 371:main.c        ****                         data_time = 0;
 1176              		.loc 1 371 0
 1177 057e 304B     		ldr	r3, .L55+4
 1178 0580 0022     		movs	r2, #0
 1179 0582 1A60     		str	r2, [r3]
 372:main.c        ****                         sum = 0;
 1180              		.loc 1 372 0
 1181 0584 2F4B     		ldr	r3, .L55+8
 1182 0586 0022     		movs	r2, #0
 1183 0588 1A60     		str	r2, [r3]
 373:main.c        ****                         average = 0;                
 1184              		.loc 1 373 0
 1185 058a 2F4B     		ldr	r3, .L55+12
 1186 058c 0022     		movs	r2, #0
 1187 058e 1A80     		strh	r2, [r3]	@ movhi
 1188              	.L46:
 1189              	.LBE5:
 374:main.c        ****                     }
 375:main.c        ****                     id++;     
 1190              		.loc 1 375 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 30


 1191 0590 2A4B     		ldr	r3, .L55
 1192 0592 1B68     		ldr	r3, [r3]
 1193 0594 0133     		adds	r3, r3, #1
 1194 0596 294A     		ldr	r2, .L55
 1195 0598 1360     		str	r3, [r2]
 376:main.c        ****                     
 377:main.c        ****                     /*if desired amount of samples have been collected, switch states*/
 378:main.c        ****                     if(data_time >= DATA_TIME){
 1196              		.loc 1 378 0
 1197 059a 294B     		ldr	r3, .L55+4
 1198 059c 1B68     		ldr	r3, [r3]
 1199 059e 41F28732 		movw	r2, #4999
 1200 05a2 9342     		cmp	r3, r2
 1201 05a4 1ADD     		ble	.L47
 379:main.c        ****                         LED2_Write(0);                                          //turn LED off
 1202              		.loc 1 379 0
 1203 05a6 0020     		movs	r0, #0
 1204 05a8 FFF7FEFF 		bl	LED2_Write
 380:main.c        ****                                                             
 381:main.c        ****                         STATE = WAIT_TO_LAUNCH;                                //Switch to Waiting 
 1205              		.loc 1 381 0
 1206 05ac 2B4B     		ldr	r3, .L55+32
 1207 05ae 0122     		movs	r2, #1
 1208 05b0 1A70     		strb	r2, [r3]
 382:main.c        ****                         #ifdef LCD
 383:main.c        ****                             setCursor(0,0);
 1209              		.loc 1 383 0
 1210 05b2 0020     		movs	r0, #0
 1211 05b4 0021     		movs	r1, #0
 1212 05b6 FFF7FEFF 		bl	setCursor
 384:main.c        ****                             clear();
 1213              		.loc 1 384 0
 1214 05ba FFF7FEFF 		bl	clear
 385:main.c        ****                             LCD_print("STATE: WAIT");  
 1215              		.loc 1 385 0
 1216 05be 3048     		ldr	r0, .L55+68
 1217 05c0 FFF7FEFF 		bl	LCD_print
 386:main.c        ****                         #endif
 387:main.c        ****                         id=0;                                                  //reset sample count
 1218              		.loc 1 387 0
 1219 05c4 1D4B     		ldr	r3, .L55
 1220 05c6 0022     		movs	r2, #0
 1221 05c8 1A60     		str	r2, [r3]
 388:main.c        ****                         data_time = 0;
 1222              		.loc 1 388 0
 1223 05ca 1D4B     		ldr	r3, .L55+4
 1224 05cc 0022     		movs	r2, #0
 1225 05ce 1A60     		str	r2, [r3]
 389:main.c        ****                         sum = 0;                                               //reset sum 
 1226              		.loc 1 389 0
 1227 05d0 1C4B     		ldr	r3, .L55+8
 1228 05d2 0022     		movs	r2, #0
 1229 05d4 1A60     		str	r2, [r3]
 390:main.c        ****                         average = 0;
 1230              		.loc 1 390 0
 1231 05d6 1C4B     		ldr	r3, .L55+12
 1232 05d8 0022     		movs	r2, #0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 31


 1233 05da 1A80     		strh	r2, [r3]	@ movhi
 1234              	.L47:
 391:main.c        ****                        
 392:main.c        ****                     }
 393:main.c        ****                     collect_flag = 0;
 1235              		.loc 1 393 0
 1236 05dc 1B4B     		ldr	r3, .L55+16
 1237 05de 0022     		movs	r2, #0
 1238 05e0 1A70     		strb	r2, [r3]
 1239 05e2 2AE0     		b	.L48
 1240              	.L42:
 394:main.c        ****                 }
 395:main.c        ****                 else if(wait_flag == 1){
 1241              		.loc 1 395 0
 1242 05e4 1E4B     		ldr	r3, .L55+36
 1243 05e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1244 05e8 002B     		cmp	r3, #0
 1245 05ea 26D0     		beq	.L48
 1246              	.LBB6:
 396:main.c        ****                        char sdbuf[60] = {};
 1247              		.loc 1 396 0
 1248 05ec 3B1D     		adds	r3, r7, #4
 1249 05ee 3C22     		movs	r2, #60
 1250 05f0 1846     		mov	r0, r3
 1251 05f2 0021     		movs	r1, #0
 1252 05f4 FFF7FEFF 		bl	memset
 397:main.c        ****                         #ifdef SD
 398:main.c        ****                             sprintf(sdbuf, "pressure: %d.%04d, %d\n", num, decimals, (int16)output)
 1253              		.loc 1 398 0
 1254 05f8 D7F8B400 		ldr	r0, [r7, #180]	@ float
 1255 05fc FFF7FEFF 		bl	__aeabi_f2iz
 1256 0600 0346     		mov	r3, r0
 1257 0602 9BB2     		uxth	r3, r3
 1258 0604 1BB2     		sxth	r3, r3
 1259 0606 3A1D     		adds	r2, r7, #4
 1260 0608 0093     		str	r3, [sp]
 1261 060a 1046     		mov	r0, r2
 1262 060c 1D49     		ldr	r1, .L55+72
 1263 060e D7F8BC20 		ldr	r2, [r7, #188]
 1264 0612 D7F8B830 		ldr	r3, [r7, #184]
 1265 0616 FFF7FEFF 		bl	sprintf
 399:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));                           
 1266              		.loc 1 399 0
 1267 061a 184B     		ldr	r3, .L55+64
 1268 061c 1C68     		ldr	r4, [r3]
 1269 061e 3B1D     		adds	r3, r7, #4
 1270 0620 1846     		mov	r0, r3
 1271 0622 FFF7FEFF 		bl	strlen
 1272 0626 0246     		mov	r2, r0
 1273 0628 3B1D     		adds	r3, r7, #4
 1274 062a 2046     		mov	r0, r4
 1275 062c 1946     		mov	r1, r3
 1276 062e FFF7FEFF 		bl	FS_Write
 400:main.c        ****                         #endif 
 401:main.c        ****                         wait_flag = 0;
 1277              		.loc 1 401 0
 1278 0632 0B4B     		ldr	r3, .L55+36
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 32


 1279 0634 0022     		movs	r2, #0
 1280 0636 1A70     		strb	r2, [r3]
 1281              	.LBE6:
 402:main.c        ****                 }
 403:main.c        ****                 break;
 1282              		.loc 1 403 0
 1283 0638 DDE0     		b	.L41
 1284              	.L48:
 1285              		.loc 1 403 0 is_stmt 0 discriminator 2
 1286 063a DCE0     		b	.L41
 1287              	.L56:
 1288              		.align	2
 1289              	.L55:
 1290 063c 00000000 		.word	id
 1291 0640 00000000 		.word	data_time
 1292 0644 00000000 		.word	sum
 1293 0648 00000000 		.word	average
 1294 064c 00000000 		.word	collect_flag
 1295 0650 00000000 		.word	PANIC_flag
 1296 0654 00000000 		.word	testnum
 1297 0658 00000000 		.word	transmit_flag
 1298 065c 00000000 		.word	STATE
 1299 0660 00000000 		.word	wait_flag
 1300 0664 00000000 		.word	countdown
 1301 0668 D4000000 		.word	.LC15
 1302 066c E8000000 		.word	.LC16
 1303 0670 89888888 		.word	-2004318071
 1304 0674 F8000000 		.word	.LC17
 1305 0678 08010000 		.word	.LC18
 1306 067c 00000000 		.word	fsfile
 1307 0680 24010000 		.word	.LC19
 1308 0684 BC000000 		.word	.LC14
 1309              	.L35:
 404:main.c        ****                 
 405:main.c        ****                 case LANDED:
 406:main.c        ****                     CyDelay(5000u);
 1310              		.loc 1 406 0 is_stmt 1
 1311 0688 41F28830 		movw	r0, #5000
 1312 068c FFF7FEFF 		bl	CyDelay
 407:main.c        ****                     Solenoid_1_Write(1); //turn on solenoid 1
 1313              		.loc 1 407 0
 1314 0690 0120     		movs	r0, #1
 1315 0692 FFF7FEFF 		bl	Solenoid_1_Write
 408:main.c        ****                     #ifdef LCD
 409:main.c        ****                         setCursor(0,0);
 1316              		.loc 1 409 0
 1317 0696 0020     		movs	r0, #0
 1318 0698 0021     		movs	r1, #0
 1319 069a FFF7FEFF 		bl	setCursor
 410:main.c        ****                         clear();
 1320              		.loc 1 410 0
 1321 069e FFF7FEFF 		bl	clear
 411:main.c        ****                         LCD_print("VACUUMING");  
 1322              		.loc 1 411 0
 1323 06a2 5548     		ldr	r0, .L57
 1324 06a4 FFF7FEFF 		bl	LCD_print
 412:main.c        ****                     #endif
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 33


 413:main.c        ****                     
 414:main.c        ****                     char sdbuf[60] = {};
 1325              		.loc 1 414 0
 1326 06a8 3B1D     		adds	r3, r7, #4
 1327 06aa 3C22     		movs	r2, #60
 1328 06ac 1846     		mov	r0, r3
 1329 06ae 0021     		movs	r1, #0
 1330 06b0 FFF7FEFF 		bl	memset
 415:main.c        ****                     #ifdef SD
 416:main.c        ****                             memset(sdbuf, 0, 40);
 1331              		.loc 1 416 0
 1332 06b4 3B1D     		adds	r3, r7, #4
 1333 06b6 1846     		mov	r0, r3
 1334 06b8 0021     		movs	r1, #0
 1335 06ba 2822     		movs	r2, #40
 1336 06bc FFF7FEFF 		bl	memset
 417:main.c        ****                             sprintf(sdbuf, "STATE: VACUUMING ***********\n");
 1337              		.loc 1 417 0
 1338 06c0 3B1D     		adds	r3, r7, #4
 1339 06c2 4E4A     		ldr	r2, .L57+4
 1340 06c4 1C46     		mov	r4, r3
 1341 06c6 1546     		mov	r5, r2
 1342 06c8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1343 06ca 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1344 06cc 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1345 06d0 07C4     		stmia	r4!, {r0, r1, r2}
 1346 06d2 2380     		strh	r3, [r4]	@ movhi
 418:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1347              		.loc 1 418 0
 1348 06d4 4A4B     		ldr	r3, .L57+8
 1349 06d6 1C68     		ldr	r4, [r3]
 1350 06d8 3B1D     		adds	r3, r7, #4
 1351 06da 1846     		mov	r0, r3
 1352 06dc FFF7FEFF 		bl	strlen
 1353 06e0 0246     		mov	r2, r0
 1354 06e2 3B1D     		adds	r3, r7, #4
 1355 06e4 2046     		mov	r0, r4
 1356 06e6 1946     		mov	r1, r3
 1357 06e8 FFF7FEFF 		bl	FS_Write
 419:main.c        ****                     #endif
 420:main.c        ****                     
 421:main.c        ****                     CyDelay(5000u);
 1358              		.loc 1 421 0
 1359 06ec 41F28830 		movw	r0, #5000
 1360 06f0 FFF7FEFF 		bl	CyDelay
 422:main.c        ****                     Solenoid_1_Write(0); //turn off soleniod 1
 1361              		.loc 1 422 0
 1362 06f4 0020     		movs	r0, #0
 1363 06f6 FFF7FEFF 		bl	Solenoid_1_Write
 423:main.c        ****                     CyDelay(5000u);
 1364              		.loc 1 423 0
 1365 06fa 41F28830 		movw	r0, #5000
 1366 06fe FFF7FEFF 		bl	CyDelay
 424:main.c        ****                     STATE = RESURFACE;
 1367              		.loc 1 424 0
 1368 0702 404B     		ldr	r3, .L57+12
 1369 0704 0422     		movs	r2, #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 34


 1370 0706 1A70     		strb	r2, [r3]
 425:main.c        ****                     
 426:main.c        ****                     #ifdef LCD
 427:main.c        ****                         setCursor(0,0);
 1371              		.loc 1 427 0
 1372 0708 0020     		movs	r0, #0
 1373 070a 0021     		movs	r1, #0
 1374 070c FFF7FEFF 		bl	setCursor
 428:main.c        ****                         clear();
 1375              		.loc 1 428 0
 1376 0710 FFF7FEFF 		bl	clear
 429:main.c        ****                         LCD_print("STATE: RESURFACING");  
 1377              		.loc 1 429 0
 1378 0714 3C48     		ldr	r0, .L57+16
 1379 0716 FFF7FEFF 		bl	LCD_print
 430:main.c        ****                     #endif
 431:main.c        ****                     #ifdef SD
 432:main.c        ****                         memset(sdbuf, 0, 40);
 1380              		.loc 1 432 0
 1381 071a 3B1D     		adds	r3, r7, #4
 1382 071c 1846     		mov	r0, r3
 1383 071e 0021     		movs	r1, #0
 1384 0720 2822     		movs	r2, #40
 1385 0722 FFF7FEFF 		bl	memset
 433:main.c        ****                         sprintf(sdbuf, "STATE: RESURFACING ***********\n");
 1386              		.loc 1 433 0
 1387 0726 3B1D     		adds	r3, r7, #4
 1388 0728 384A     		ldr	r2, .L57+20
 1389 072a 1C46     		mov	r4, r3
 1390 072c 1546     		mov	r5, r2
 1391 072e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1392 0730 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1393 0732 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1394 0736 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 434:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1395              		.loc 1 434 0
 1396 073a 314B     		ldr	r3, .L57+8
 1397 073c 1C68     		ldr	r4, [r3]
 1398 073e 3B1D     		adds	r3, r7, #4
 1399 0740 1846     		mov	r0, r3
 1400 0742 FFF7FEFF 		bl	strlen
 1401 0746 0246     		mov	r2, r0
 1402 0748 3B1D     		adds	r3, r7, #4
 1403 074a 2046     		mov	r0, r4
 1404 074c 1946     		mov	r1, r3
 1405 074e FFF7FEFF 		bl	FS_Write
 435:main.c        ****                     #endif
 436:main.c        ****                 break;
 1406              		.loc 1 436 0
 1407 0752 50E0     		b	.L41
 1408              	.L36:
 437:main.c        ****                 
 438:main.c        ****             case RESURFACE:
 439:main.c        ****                 //CyDelay(4000u);
 440:main.c        ****                 if (PANIC_flag)
 1409              		.loc 1 440 0
 1410 0754 2E4B     		ldr	r3, .L57+24
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 35


 1411 0756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1412 0758 002B     		cmp	r3, #0
 1413 075a 02D0     		beq	.L49
 441:main.c        ****                     LCD_print("WATER DETECTED");
 1414              		.loc 1 441 0
 1415 075c 2D48     		ldr	r0, .L57+28
 1416 075e FFF7FEFF 		bl	LCD_print
 1417              	.L49:
 442:main.c        ****                 Solenoid_2_Write(1); //turn on solendiod 2
 1418              		.loc 1 442 0
 1419 0762 0120     		movs	r0, #1
 1420 0764 FFF7FEFF 		bl	Solenoid_2_Write
 443:main.c        ****                 CyDelay(10000u);
 1421              		.loc 1 443 0
 1422 0768 42F21070 		movw	r0, #10000
 1423 076c FFF7FEFF 		bl	CyDelay
 444:main.c        ****                 Solenoid_2_Write(0); //turn off solenoid 2
 1424              		.loc 1 444 0
 1425 0770 0020     		movs	r0, #0
 1426 0772 FFF7FEFF 		bl	Solenoid_2_Write
 445:main.c        ****                 //check pressure sensor to confirm we are at the surface
 446:main.c        ****                 CyDelay(5000u);                                //wait 10 seconds to lift, for testi
 1427              		.loc 1 446 0
 1428 0776 41F28830 		movw	r0, #5000
 1429 077a FFF7FEFF 		bl	CyDelay
 447:main.c        ****                 STATE = TRANSMIT;
 1430              		.loc 1 447 0
 1431 077e 214B     		ldr	r3, .L57+12
 1432 0780 0522     		movs	r2, #5
 1433 0782 1A70     		strb	r2, [r3]
 448:main.c        ****                 #ifdef LCD
 449:main.c        ****                     setCursor(0,0);
 1434              		.loc 1 449 0
 1435 0784 0020     		movs	r0, #0
 1436 0786 0021     		movs	r1, #0
 1437 0788 FFF7FEFF 		bl	setCursor
 450:main.c        ****                     clear();
 1438              		.loc 1 450 0
 1439 078c FFF7FEFF 		bl	clear
 451:main.c        ****                     LCD_print("TRANSMIT");  
 1440              		.loc 1 451 0
 1441 0790 2148     		ldr	r0, .L57+32
 1442 0792 FFF7FEFF 		bl	LCD_print
 452:main.c        ****                 #endif
 453:main.c        ****                 #ifdef SD
 454:main.c        ****                     memset(sdbuf, 0, 40);
 1443              		.loc 1 454 0
 1444 0796 3B1D     		adds	r3, r7, #4
 1445 0798 1846     		mov	r0, r3
 1446 079a 0021     		movs	r1, #0
 1447 079c 2822     		movs	r2, #40
 1448 079e FFF7FEFF 		bl	memset
 455:main.c        ****                     sprintf(sdbuf, "STATE: TRANSMIT ***********\n");
 1449              		.loc 1 455 0
 1450 07a2 3B1D     		adds	r3, r7, #4
 1451 07a4 1D4A     		ldr	r2, .L57+36
 1452 07a6 1C46     		mov	r4, r3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 36


 1453 07a8 1546     		mov	r5, r2
 1454 07aa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1455 07ac 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1456 07ae 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1457 07b2 07C4     		stmia	r4!, {r0, r1, r2}
 1458 07b4 2370     		strb	r3, [r4]
 456:main.c        ****                     FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1459              		.loc 1 456 0
 1460 07b6 124B     		ldr	r3, .L57+8
 1461 07b8 1C68     		ldr	r4, [r3]
 1462 07ba 3B1D     		adds	r3, r7, #4
 1463 07bc 1846     		mov	r0, r3
 1464 07be FFF7FEFF 		bl	strlen
 1465 07c2 0246     		mov	r2, r0
 1466 07c4 3B1D     		adds	r3, r7, #4
 1467 07c6 2046     		mov	r0, r4
 1468 07c8 1946     		mov	r1, r3
 1469 07ca FFF7FEFF 		bl	FS_Write
 457:main.c        ****                 #endif
 458:main.c        ****                 break;
 1470              		.loc 1 458 0
 1471 07ce 12E0     		b	.L41
 1472              	.L37:
 459:main.c        ****                 
 460:main.c        ****             case TRANSMIT:
 461:main.c        ****                 if (transmit_flag){
 1473              		.loc 1 461 0
 1474 07d0 134B     		ldr	r3, .L57+40
 1475 07d2 1B68     		ldr	r3, [r3]
 1476 07d4 002B     		cmp	r3, #0
 1477 07d6 0CD0     		beq	.L50
 462:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &t); // Here, the STATE variable only matters,
 1478              		.loc 1 462 0
 1479 07d8 07F15802 		add	r2, r7, #88
 1480 07dc 07F14003 		add	r3, r7, #64
 1481 07e0 1046     		mov	r0, r2
 1482 07e2 0849     		ldr	r1, .L57+12
 1483 07e4 0A22     		movs	r2, #10
 1484 07e6 FFF7FEFF 		bl	BT_Send
 463:main.c        ****                     transmit_flag = 0;
 1485              		.loc 1 463 0
 1486 07ea 0D4B     		ldr	r3, .L57+40
 1487 07ec 0022     		movs	r2, #0
 1488 07ee 1A60     		str	r2, [r3]
 464:main.c        ****                 }
 465:main.c        **** //                #ifdef SD                                   //close old file, open new one
 466:main.c        **** //                    FS_FClose(fsfile);
 467:main.c        **** //                    sprintf(file, "test%d.txt", ++testnum);
 468:main.c        **** //                    fsfile = FS_FOpen(file, "w");
 469:main.c        **** //                #endif 
 470:main.c        ****                 //CyDelay(15000u);
 471:main.c        ****                 
 472:main.c        ****                 break;
 1489              		.loc 1 472 0
 1490 07f0 01E0     		b	.L41
 1491              	.L50:
 1492              		.loc 1 472 0 is_stmt 0 discriminator 4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 37


 1493 07f2 00E0     		b	.L41
 1494              	.L52:
 473:main.c        ****                 
 474:main.c        ****             default:
 475:main.c        ****                 break;
 1495              		.loc 1 475 0 is_stmt 1
 1496 07f4 00BF     		nop
 1497              	.L41:
 1498              	.LBE4:
 1499              	.LBE2:
 476:main.c        ****         
 477:main.c        ****         
 478:main.c        ****         }
 479:main.c        ****         
 480:main.c        ****     }
 1500              		.loc 1 480 0 discriminator 3
 1501 07f6 EEE4     		b	.L51
 1502              	.L58:
 1503              		.align	2
 1504              	.L57:
 1505 07f8 30010000 		.word	.LC20
 1506 07fc 3C010000 		.word	.LC21
 1507 0800 00000000 		.word	fsfile
 1508 0804 00000000 		.word	STATE
 1509 0808 5C010000 		.word	.LC22
 1510 080c 70010000 		.word	.LC23
 1511 0810 00000000 		.word	PANIC_flag
 1512 0814 90010000 		.word	.LC24
 1513 0818 A0010000 		.word	.LC25
 1514 081c AC010000 		.word	.LC26
 1515 0820 00000000 		.word	transmit_flag
 1516              		.cfi_endproc
 1517              	.LFE68:
 1518              		.size	main, .-main
 1519 0824 AFF30080 		.text
 1520              	.Letext0:
 1521              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1522              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1523              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1524              		.file 5 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 1525              		.file 6 "functions.h"
 1526              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1527              		.file 8 "./mpu6050.h"
 1528              		.section	.debug_info,"",%progbits
 1529              	.Ldebug_info0:
 1530 0000 91050000 		.4byte	0x591
 1531 0004 0400     		.2byte	0x4
 1532 0006 00000000 		.4byte	.Ldebug_abbrev0
 1533 000a 04       		.byte	0x4
 1534 000b 01       		.uleb128 0x1
 1535 000c F5000000 		.4byte	.LASF75
 1536 0010 01       		.byte	0x1
 1537 0011 E8020000 		.4byte	.LASF76
 1538 0015 80020000 		.4byte	.LASF77
 1539 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1540 001d 00000000 		.4byte	0
 1541 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 38


 1542 0025 02       		.uleb128 0x2
 1543 0026 01       		.byte	0x1
 1544 0027 06       		.byte	0x6
 1545 0028 F8010000 		.4byte	.LASF0
 1546 002c 03       		.uleb128 0x3
 1547 002d A0010000 		.4byte	.LASF2
 1548 0031 02       		.byte	0x2
 1549 0032 1D       		.byte	0x1d
 1550 0033 37000000 		.4byte	0x37
 1551 0037 02       		.uleb128 0x2
 1552 0038 01       		.byte	0x1
 1553 0039 08       		.byte	0x8
 1554 003a D8010000 		.4byte	.LASF1
 1555 003e 03       		.uleb128 0x3
 1556 003f 3B030000 		.4byte	.LASF3
 1557 0043 02       		.byte	0x2
 1558 0044 29       		.byte	0x29
 1559 0045 49000000 		.4byte	0x49
 1560 0049 02       		.uleb128 0x2
 1561 004a 02       		.byte	0x2
 1562 004b 05       		.byte	0x5
 1563 004c 9F000000 		.4byte	.LASF4
 1564 0050 02       		.uleb128 0x2
 1565 0051 02       		.byte	0x2
 1566 0052 07       		.byte	0x7
 1567 0053 43020000 		.4byte	.LASF5
 1568 0057 03       		.uleb128 0x3
 1569 0058 31030000 		.4byte	.LASF6
 1570 005c 02       		.byte	0x2
 1571 005d 3F       		.byte	0x3f
 1572 005e 62000000 		.4byte	0x62
 1573 0062 02       		.uleb128 0x2
 1574 0063 04       		.byte	0x4
 1575 0064 05       		.byte	0x5
 1576 0065 5B020000 		.4byte	.LASF7
 1577 0069 03       		.uleb128 0x3
 1578 006a 1E030000 		.4byte	.LASF8
 1579 006e 02       		.byte	0x2
 1580 006f 41       		.byte	0x41
 1581 0070 74000000 		.4byte	0x74
 1582 0074 02       		.uleb128 0x2
 1583 0075 04       		.byte	0x4
 1584 0076 07       		.byte	0x7
 1585 0077 F4020000 		.4byte	.LASF9
 1586 007b 02       		.uleb128 0x2
 1587 007c 08       		.byte	0x8
 1588 007d 05       		.byte	0x5
 1589 007e D6000000 		.4byte	.LASF10
 1590 0082 02       		.uleb128 0x2
 1591 0083 08       		.byte	0x8
 1592 0084 07       		.byte	0x7
 1593 0085 04020000 		.4byte	.LASF11
 1594 0089 04       		.uleb128 0x4
 1595 008a 04       		.byte	0x4
 1596 008b 05       		.byte	0x5
 1597 008c 696E7400 		.ascii	"int\000"
 1598 0090 02       		.uleb128 0x2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 39


 1599 0091 04       		.byte	0x4
 1600 0092 07       		.byte	0x7
 1601 0093 2E020000 		.4byte	.LASF12
 1602 0097 03       		.uleb128 0x3
 1603 0098 B4000000 		.4byte	.LASF13
 1604 009c 03       		.byte	0x3
 1605 009d 15       		.byte	0x15
 1606 009e 2C000000 		.4byte	0x2c
 1607 00a2 03       		.uleb128 0x3
 1608 00a3 6C020000 		.4byte	.LASF14
 1609 00a7 03       		.byte	0x3
 1610 00a8 20       		.byte	0x20
 1611 00a9 3E000000 		.4byte	0x3e
 1612 00ad 03       		.uleb128 0x3
 1613 00ae 64020000 		.4byte	.LASF15
 1614 00b2 03       		.byte	0x3
 1615 00b3 2C       		.byte	0x2c
 1616 00b4 57000000 		.4byte	0x57
 1617 00b8 03       		.uleb128 0x3
 1618 00b9 1B020000 		.4byte	.LASF16
 1619 00bd 03       		.byte	0x3
 1620 00be 2D       		.byte	0x2d
 1621 00bf 69000000 		.4byte	0x69
 1622 00c3 05       		.uleb128 0x5
 1623 00c4 74020000 		.4byte	.LASF17
 1624 00c8 04       		.byte	0x4
 1625 00c9 9201     		.2byte	0x192
 1626 00cb 37000000 		.4byte	0x37
 1627 00cf 05       		.uleb128 0x5
 1628 00d0 BC000000 		.4byte	.LASF18
 1629 00d4 04       		.byte	0x4
 1630 00d5 9601     		.2byte	0x196
 1631 00d7 49000000 		.4byte	0x49
 1632 00db 02       		.uleb128 0x2
 1633 00dc 04       		.byte	0x4
 1634 00dd 04       		.byte	0x4
 1635 00de CB000000 		.4byte	.LASF19
 1636 00e2 02       		.uleb128 0x2
 1637 00e3 08       		.byte	0x8
 1638 00e4 04       		.byte	0x4
 1639 00e5 17030000 		.4byte	.LASF20
 1640 00e9 02       		.uleb128 0x2
 1641 00ea 01       		.byte	0x1
 1642 00eb 08       		.byte	0x8
 1643 00ec 56020000 		.4byte	.LASF21
 1644 00f0 05       		.uleb128 0x5
 1645 00f1 EF020000 		.4byte	.LASF22
 1646 00f5 04       		.byte	0x4
 1647 00f6 3C02     		.2byte	0x23c
 1648 00f8 FC000000 		.4byte	0xfc
 1649 00fc 06       		.uleb128 0x6
 1650 00fd C3000000 		.4byte	0xc3
 1651 0101 02       		.uleb128 0x2
 1652 0102 04       		.byte	0x4
 1653 0103 07       		.byte	0x7
 1654 0104 45030000 		.4byte	.LASF23
 1655 0108 03       		.uleb128 0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 40


 1656 0109 E6010000 		.4byte	.LASF24
 1657 010d 05       		.byte	0x5
 1658 010e 7E       		.byte	0x7e
 1659 010f 13010000 		.4byte	0x113
 1660 0113 07       		.uleb128 0x7
 1661 0114 E6010000 		.4byte	.LASF24
 1662 0118 08       		.uleb128 0x8
 1663 0119 04       		.byte	0x4
 1664 011a 08010000 		.4byte	0x108
 1665 011e 02       		.uleb128 0x2
 1666 011f 08       		.byte	0x8
 1667 0120 04       		.byte	0x4
 1668 0121 BD010000 		.4byte	.LASF25
 1669 0125 09       		.uleb128 0x9
 1670 0126 36000000 		.4byte	.LASF33
 1671 012a 01       		.byte	0x1
 1672 012b 06       		.byte	0x6
 1673 012c 1C       		.byte	0x1c
 1674 012d 5C010000 		.4byte	0x15c
 1675 0131 0A       		.uleb128 0xa
 1676 0132 29000000 		.4byte	.LASF26
 1677 0136 00       		.sleb128 0
 1678 0137 0A       		.uleb128 0xa
 1679 0138 C9010000 		.4byte	.LASF27
 1680 013c 01       		.sleb128 1
 1681 013d 0A       		.uleb128 0xa
 1682 013e 06030000 		.4byte	.LASF28
 1683 0142 02       		.sleb128 2
 1684 0143 0A       		.uleb128 0xa
 1685 0144 63000000 		.4byte	.LASF29
 1686 0148 03       		.sleb128 3
 1687 0149 0A       		.uleb128 0xa
 1688 014a 00000000 		.4byte	.LASF30
 1689 014e 04       		.sleb128 4
 1690 014f 0A       		.uleb128 0xa
 1691 0150 EC000000 		.4byte	.LASF31
 1692 0154 05       		.sleb128 5
 1693 0155 0A       		.uleb128 0xa
 1694 0156 AA010000 		.4byte	.LASF32
 1695 015a 06       		.sleb128 6
 1696 015b 00       		.byte	0
 1697 015c 03       		.uleb128 0x3
 1698 015d 36000000 		.4byte	.LASF33
 1699 0161 06       		.byte	0x6
 1700 0162 24       		.byte	0x24
 1701 0163 25010000 		.4byte	0x125
 1702 0167 0B       		.uleb128 0xb
 1703 0168 78000000 		.4byte	.LASF34
 1704 016c 01       		.byte	0x1
 1705 016d 5D       		.byte	0x5d
 1706 016e 00000000 		.4byte	.LFB63
 1707 0172 20000000 		.4byte	.LFE63-.LFB63
 1708 0176 01       		.uleb128 0x1
 1709 0177 9C       		.byte	0x9c
 1710 0178 0C       		.uleb128 0xc
 1711 0179 9B030000 		.4byte	.LASF35
 1712 017d 01       		.byte	0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 41


 1713 017e 64       		.byte	0x64
 1714 017f 00000000 		.4byte	.LFB64
 1715 0183 38000000 		.4byte	.LFE64-.LFB64
 1716 0187 01       		.uleb128 0x1
 1717 0188 9C       		.byte	0x9c
 1718 0189 0C       		.uleb128 0xc
 1719 018a D2020000 		.4byte	.LASF36
 1720 018e 01       		.byte	0x1
 1721 018f 6D       		.byte	0x6d
 1722 0190 00000000 		.4byte	.LFB65
 1723 0194 3C000000 		.4byte	.LFE65-.LFB65
 1724 0198 01       		.uleb128 0x1
 1725 0199 9C       		.byte	0x9c
 1726 019a 0C       		.uleb128 0xc
 1727 019b 77030000 		.4byte	.LASF37
 1728 019f 01       		.byte	0x1
 1729 01a0 7E       		.byte	0x7e
 1730 01a1 00000000 		.4byte	.LFB66
 1731 01a5 0C000000 		.4byte	.LFE66-.LFB66
 1732 01a9 01       		.uleb128 0x1
 1733 01aa 9C       		.byte	0x9c
 1734 01ab 0C       		.uleb128 0xc
 1735 01ac 54030000 		.4byte	.LASF38
 1736 01b0 01       		.byte	0x1
 1737 01b1 88       		.byte	0x88
 1738 01b2 00000000 		.4byte	.LFB67
 1739 01b6 3C000000 		.4byte	.LFE67-.LFB67
 1740 01ba 01       		.uleb128 0x1
 1741 01bb 9C       		.byte	0x9c
 1742 01bc 0D       		.uleb128 0xd
 1743 01bd 73000000 		.4byte	.LASF78
 1744 01c1 01       		.byte	0x1
 1745 01c2 90       		.byte	0x90
 1746 01c3 89000000 		.4byte	0x89
 1747 01c7 00000000 		.4byte	.LFB68
 1748 01cb 24080000 		.4byte	.LFE68-.LFB68
 1749 01cf 01       		.uleb128 0x1
 1750 01d0 9C       		.byte	0x9c
 1751 01d1 52030000 		.4byte	0x352
 1752 01d5 0E       		.uleb128 0xe
 1753 01d6 6E756D00 		.ascii	"num\000"
 1754 01da 01       		.byte	0x1
 1755 01db 92       		.byte	0x92
 1756 01dc 89000000 		.4byte	0x89
 1757 01e0 02       		.uleb128 0x2
 1758 01e1 91       		.byte	0x91
 1759 01e2 6C       		.sleb128 -20
 1760 01e3 0F       		.uleb128 0xf
 1761 01e4 C2000000 		.4byte	.LASF39
 1762 01e8 01       		.byte	0x1
 1763 01e9 92       		.byte	0x92
 1764 01ea 89000000 		.4byte	0x89
 1765 01ee 02       		.uleb128 0x2
 1766 01ef 91       		.byte	0x91
 1767 01f0 68       		.sleb128 -24
 1768 01f1 0F       		.uleb128 0xf
 1769 01f2 88010000 		.4byte	.LASF40
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 42


 1770 01f6 01       		.byte	0x1
 1771 01f7 93       		.byte	0x93
 1772 01f8 DB000000 		.4byte	0xdb
 1773 01fc 02       		.uleb128 0x2
 1774 01fd 91       		.byte	0x91
 1775 01fe 5C       		.sleb128 -36
 1776 01ff 0F       		.uleb128 0xf
 1777 0200 D1000000 		.4byte	.LASF41
 1778 0204 01       		.byte	0x1
 1779 0205 93       		.byte	0x93
 1780 0206 DB000000 		.4byte	0xdb
 1781 020a 02       		.uleb128 0x2
 1782 020b 91       		.byte	0x91
 1783 020c 58       		.sleb128 -40
 1784 020d 0F       		.uleb128 0xf
 1785 020e 63030000 		.4byte	.LASF42
 1786 0212 01       		.byte	0x1
 1787 0213 93       		.byte	0x93
 1788 0214 DB000000 		.4byte	0xdb
 1789 0218 02       		.uleb128 0x2
 1790 0219 91       		.byte	0x91
 1791 021a 64       		.sleb128 -28
 1792 021b 0F       		.uleb128 0xf
 1793 021c 92000000 		.4byte	.LASF43
 1794 0220 01       		.byte	0x1
 1795 0221 93       		.byte	0x93
 1796 0222 DB000000 		.4byte	0xdb
 1797 0226 02       		.uleb128 0x2
 1798 0227 91       		.byte	0x91
 1799 0228 60       		.sleb128 -32
 1800 0229 0E       		.uleb128 0xe
 1801 022a 62756600 		.ascii	"buf\000"
 1802 022e 01       		.byte	0x1
 1803 022f 94       		.byte	0x94
 1804 0230 52030000 		.4byte	0x352
 1805 0234 03       		.uleb128 0x3
 1806 0235 91       		.byte	0x91
 1807 0236 9C7F     		.sleb128 -100
 1808 0238 0F       		.uleb128 0xf
 1809 0239 29030000 		.4byte	.LASF44
 1810 023d 01       		.byte	0x1
 1811 023e 94       		.byte	0x94
 1812 023f 62030000 		.4byte	0x362
 1813 0243 03       		.uleb128 0x3
 1814 0244 91       		.byte	0x91
 1815 0245 887F     		.sleb128 -120
 1816 0247 0F       		.uleb128 0xf
 1817 0248 B2020000 		.4byte	.LASF45
 1818 024c 01       		.byte	0x1
 1819 024d 94       		.byte	0x94
 1820 024e 72030000 		.4byte	0x372
 1821 0252 03       		.uleb128 0x3
 1822 0253 91       		.byte	0x91
 1823 0254 F87E     		.sleb128 -136
 1824 0256 10       		.uleb128 0x10
 1825 0257 617800   		.ascii	"ax\000"
 1826 025a 01       		.byte	0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 43


 1827 025b 96       		.byte	0x96
 1828 025c A2000000 		.4byte	0xa2
 1829 0260 10       		.uleb128 0x10
 1830 0261 617900   		.ascii	"ay\000"
 1831 0264 01       		.byte	0x1
 1832 0265 96       		.byte	0x96
 1833 0266 A2000000 		.4byte	0xa2
 1834 026a 0E       		.uleb128 0xe
 1835 026b 617A00   		.ascii	"az\000"
 1836 026e 01       		.byte	0x1
 1837 026f 96       		.byte	0x96
 1838 0270 A2000000 		.4byte	0xa2
 1839 0274 02       		.uleb128 0x2
 1840 0275 91       		.byte	0x91
 1841 0276 4E       		.sleb128 -50
 1842 0277 10       		.uleb128 0x10
 1843 0278 6900     		.ascii	"i\000"
 1844 027a 01       		.byte	0x1
 1845 027b 96       		.byte	0x96
 1846 027c A2000000 		.4byte	0xa2
 1847 0280 10       		.uleb128 0x10
 1848 0281 677800   		.ascii	"gx\000"
 1849 0284 01       		.byte	0x1
 1850 0285 97       		.byte	0x97
 1851 0286 A2000000 		.4byte	0xa2
 1852 028a 10       		.uleb128 0x10
 1853 028b 677900   		.ascii	"gy\000"
 1854 028e 01       		.byte	0x1
 1855 028f 97       		.byte	0x97
 1856 0290 A2000000 		.4byte	0xa2
 1857 0294 10       		.uleb128 0x10
 1858 0295 677A00   		.ascii	"gz\000"
 1859 0298 01       		.byte	0x1
 1860 0299 97       		.byte	0x97
 1861 029a A2000000 		.4byte	0xa2
 1862 029e 0F       		.uleb128 0xf
 1863 029f BB020000 		.4byte	.LASF46
 1864 02a3 01       		.byte	0x1
 1865 02a4 98       		.byte	0x98
 1866 02a5 A2000000 		.4byte	0xa2
 1867 02a9 02       		.uleb128 0x2
 1868 02aa 91       		.byte	0x91
 1869 02ab 56       		.sleb128 -42
 1870 02ac 0F       		.uleb128 0xf
 1871 02ad 83010000 		.4byte	.LASF47
 1872 02b1 01       		.byte	0x1
 1873 02b2 99       		.byte	0x99
 1874 02b3 89000000 		.4byte	0x89
 1875 02b7 03       		.uleb128 0x3
 1876 02b8 91       		.byte	0x91
 1877 02b9 F47E     		.sleb128 -140
 1878 02bb 0F       		.uleb128 0xf
 1879 02bc 5E000000 		.4byte	.LASF48
 1880 02c0 01       		.byte	0x1
 1881 02c1 99       		.byte	0x99
 1882 02c2 89000000 		.4byte	0x89
 1883 02c6 02       		.uleb128 0x2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 44


 1884 02c7 91       		.byte	0x91
 1885 02c8 50       		.sleb128 -48
 1886 02c9 11       		.uleb128 0x11
 1887 02ca D6010000 		.4byte	.LBB2
 1888 02ce 20060000 		.4byte	.LBE2-.LBB2
 1889 02d2 12       		.uleb128 0x12
 1890 02d3 7400     		.ascii	"t\000"
 1891 02d5 01       		.byte	0x1
 1892 02d6 2F01     		.2byte	0x12f
 1893 02d8 89000000 		.4byte	0x89
 1894 02dc 03       		.uleb128 0x3
 1895 02dd 91       		.byte	0x91
 1896 02de F07E     		.sleb128 -144
 1897 02e0 13       		.uleb128 0x13
 1898 02e1 7C020000 		.4byte	.LBB3
 1899 02e5 98000000 		.4byte	.LBE3-.LBB3
 1900 02e9 FE020000 		.4byte	0x2fe
 1901 02ed 14       		.uleb128 0x14
 1902 02ee 3D000000 		.4byte	.LASF49
 1903 02f2 01       		.byte	0x1
 1904 02f3 0E01     		.2byte	0x10e
 1905 02f5 82030000 		.4byte	0x382
 1906 02f9 03       		.uleb128 0x3
 1907 02fa 91       		.byte	0x91
 1908 02fb B47E     		.sleb128 -204
 1909 02fd 00       		.byte	0
 1910 02fe 11       		.uleb128 0x11
 1911 02ff D4030000 		.4byte	.LBB4
 1912 0303 22040000 		.4byte	.LBE4-.LBB4
 1913 0307 14       		.uleb128 0x14
 1914 0308 3D000000 		.4byte	.LASF49
 1915 030c 01       		.byte	0x1
 1916 030d 9E01     		.2byte	0x19e
 1917 030f 82030000 		.4byte	0x382
 1918 0313 03       		.uleb128 0x3
 1919 0314 91       		.byte	0x91
 1920 0315 B47E     		.sleb128 -204
 1921 0317 13       		.uleb128 0x13
 1922 0318 22050000 		.4byte	.LBB5
 1923 031c 6E000000 		.4byte	.LBE5-.LBB5
 1924 0320 35030000 		.4byte	0x335
 1925 0324 14       		.uleb128 0x14
 1926 0325 3D000000 		.4byte	.LASF49
 1927 0329 01       		.byte	0x1
 1928 032a 6D01     		.2byte	0x16d
 1929 032c 82030000 		.4byte	0x382
 1930 0330 03       		.uleb128 0x3
 1931 0331 91       		.byte	0x91
 1932 0332 B47E     		.sleb128 -204
 1933 0334 00       		.byte	0
 1934 0335 11       		.uleb128 0x11
 1935 0336 EC050000 		.4byte	.LBB6
 1936 033a 4C000000 		.4byte	.LBE6-.LBB6
 1937 033e 14       		.uleb128 0x14
 1938 033f 3D000000 		.4byte	.LASF49
 1939 0343 01       		.byte	0x1
 1940 0344 8C01     		.2byte	0x18c
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 45


 1941 0346 82030000 		.4byte	0x382
 1942 034a 03       		.uleb128 0x3
 1943 034b 91       		.byte	0x91
 1944 034c B47E     		.sleb128 -204
 1945 034e 00       		.byte	0
 1946 034f 00       		.byte	0
 1947 0350 00       		.byte	0
 1948 0351 00       		.byte	0
 1949 0352 15       		.uleb128 0x15
 1950 0353 E9000000 		.4byte	0xe9
 1951 0357 62030000 		.4byte	0x362
 1952 035b 16       		.uleb128 0x16
 1953 035c 01010000 		.4byte	0x101
 1954 0360 31       		.byte	0x31
 1955 0361 00       		.byte	0
 1956 0362 15       		.uleb128 0x15
 1957 0363 E9000000 		.4byte	0xe9
 1958 0367 72030000 		.4byte	0x372
 1959 036b 16       		.uleb128 0x16
 1960 036c 01010000 		.4byte	0x101
 1961 0370 13       		.byte	0x13
 1962 0371 00       		.byte	0
 1963 0372 15       		.uleb128 0x15
 1964 0373 E9000000 		.4byte	0xe9
 1965 0377 82030000 		.4byte	0x382
 1966 037b 16       		.uleb128 0x16
 1967 037c 01010000 		.4byte	0x101
 1968 0380 0D       		.byte	0xd
 1969 0381 00       		.byte	0
 1970 0382 15       		.uleb128 0x15
 1971 0383 E9000000 		.4byte	0xe9
 1972 0387 92030000 		.4byte	0x392
 1973 038b 16       		.uleb128 0x16
 1974 038c 01010000 		.4byte	0x101
 1975 0390 3B       		.byte	0x3b
 1976 0391 00       		.byte	0
 1977 0392 17       		.uleb128 0x17
 1978 0393 84030000 		.4byte	.LASF50
 1979 0397 07       		.byte	0x7
 1980 0398 9606     		.2byte	0x696
 1981 039a 9E030000 		.4byte	0x39e
 1982 039e 06       		.uleb128 0x6
 1983 039f AD000000 		.4byte	0xad
 1984 03a3 18       		.uleb128 0x18
 1985 03a4 48000000 		.4byte	.LASF51
 1986 03a8 08       		.byte	0x8
 1987 03a9 9101     		.2byte	0x191
 1988 03ab 97000000 		.4byte	0x97
 1989 03af 05       		.uleb128 0x5
 1990 03b0 03       		.byte	0x3
 1991 03b1 00000000 		.4byte	devAddr
 1992 03b5 15       		.uleb128 0x15
 1993 03b6 97000000 		.4byte	0x97
 1994 03ba C5030000 		.4byte	0x3c5
 1995 03be 16       		.uleb128 0x16
 1996 03bf 01010000 		.4byte	0x101
 1997 03c3 15       		.byte	0x15
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 46


 1998 03c4 00       		.byte	0
 1999 03c5 18       		.uleb128 0x18
 2000 03c6 CB020000 		.4byte	.LASF52
 2001 03ca 08       		.byte	0x8
 2002 03cb 9201     		.2byte	0x192
 2003 03cd B5030000 		.4byte	0x3b5
 2004 03d1 05       		.uleb128 0x5
 2005 03d2 03       		.byte	0x3
 2006 03d3 00000000 		.4byte	buffer
 2007 03d7 19       		.uleb128 0x19
 2008 03d8 43000000 		.4byte	.LASF53
 2009 03dc 01       		.byte	0x1
 2010 03dd 32       		.byte	0x32
 2011 03de B8000000 		.4byte	0xb8
 2012 03e2 05       		.uleb128 0x5
 2013 03e3 03       		.byte	0x3
 2014 03e4 00000000 		.4byte	Addr
 2015 03e8 1A       		.uleb128 0x1a
 2016 03e9 696400   		.ascii	"id\000"
 2017 03ec 01       		.byte	0x1
 2018 03ed 33       		.byte	0x33
 2019 03ee 62000000 		.4byte	0x62
 2020 03f2 05       		.uleb128 0x5
 2021 03f3 03       		.byte	0x3
 2022 03f4 00000000 		.4byte	id
 2023 03f8 19       		.uleb128 0x19
 2024 03f9 97010000 		.4byte	.LASF54
 2025 03fd 01       		.byte	0x1
 2026 03fe 33       		.byte	0x33
 2027 03ff 62000000 		.4byte	0x62
 2028 0403 05       		.uleb128 0x5
 2029 0404 03       		.byte	0x3
 2030 0405 00000000 		.4byte	press_id
 2031 0409 19       		.uleb128 0x19
 2032 040a 24020000 		.4byte	.LASF55
 2033 040e 01       		.byte	0x1
 2034 040f 34       		.byte	0x34
 2035 0410 62000000 		.4byte	0x62
 2036 0414 05       		.uleb128 0x5
 2037 0415 03       		.byte	0x3
 2038 0416 00000000 		.4byte	data_time
 2039 041a 1A       		.uleb128 0x1a
 2040 041b 73756D00 		.ascii	"sum\000"
 2041 041f 01       		.byte	0x1
 2042 0420 36       		.byte	0x36
 2043 0421 62000000 		.4byte	0x62
 2044 0425 05       		.uleb128 0x5
 2045 0426 03       		.byte	0x3
 2046 0427 00000000 		.4byte	sum
 2047 042b 19       		.uleb128 0x19
 2048 042c B0010000 		.4byte	.LASF56
 2049 0430 01       		.byte	0x1
 2050 0431 37       		.byte	0x37
 2051 0432 DB000000 		.4byte	0xdb
 2052 0436 05       		.uleb128 0x5
 2053 0437 03       		.byte	0x3
 2054 0438 00000000 		.4byte	pressure_sum
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 47


 2055 043c 19       		.uleb128 0x19
 2056 043d E4000000 		.4byte	.LASF57
 2057 0441 01       		.byte	0x1
 2058 0442 38       		.byte	0x38
 2059 0443 A2000000 		.4byte	0xa2
 2060 0447 05       		.uleb128 0x5
 2061 0448 03       		.byte	0x3
 2062 0449 00000000 		.4byte	average
 2063 044d 19       		.uleb128 0x19
 2064 044e 6A030000 		.4byte	.LASF58
 2065 0452 01       		.byte	0x1
 2066 0453 39       		.byte	0x39
 2067 0454 5E040000 		.4byte	0x45e
 2068 0458 05       		.uleb128 0x5
 2069 0459 03       		.byte	0x3
 2070 045a 00000000 		.4byte	collect_flag
 2071 045e 02       		.uleb128 0x2
 2072 045f 01       		.byte	0x1
 2073 0460 02       		.byte	0x2
 2074 0461 7A020000 		.4byte	.LASF59
 2075 0465 19       		.uleb128 0x19
 2076 0466 91030000 		.4byte	.LASF60
 2077 046a 01       		.byte	0x1
 2078 046b 3A       		.byte	0x3a
 2079 046c 5E040000 		.4byte	0x45e
 2080 0470 05       		.uleb128 0x5
 2081 0471 03       		.byte	0x3
 2082 0472 00000000 		.4byte	wait_flag
 2083 0476 19       		.uleb128 0x19
 2084 0477 A9000000 		.4byte	.LASF61
 2085 047b 01       		.byte	0x1
 2086 047c 3B       		.byte	0x3b
 2087 047d 5E040000 		.4byte	0x45e
 2088 0481 05       		.uleb128 0x5
 2089 0482 03       		.byte	0x3
 2090 0483 00000000 		.4byte	PANIC_flag
 2091 0487 19       		.uleb128 0x19
 2092 0488 4E030000 		.4byte	.LASF62
 2093 048c 01       		.byte	0x1
 2094 048d 3D       		.byte	0x3d
 2095 048e 5C010000 		.4byte	0x15c
 2096 0492 05       		.uleb128 0x5
 2097 0493 03       		.byte	0x3
 2098 0494 00000000 		.4byte	STATE
 2099 0498 19       		.uleb128 0x19
 2100 0499 3B020000 		.4byte	.LASF63
 2101 049d 01       		.byte	0x1
 2102 049e 3E       		.byte	0x3e
 2103 049f 97000000 		.4byte	0x97
 2104 04a3 05       		.uleb128 0x5
 2105 04a4 03       		.byte	0x3
 2106 04a5 00000000 		.4byte	testnum
 2107 04a9 19       		.uleb128 0x19
 2108 04aa EE010000 		.4byte	.LASF64
 2109 04ae 01       		.byte	0x1
 2110 04af 3E       		.byte	0x3e
 2111 04b0 97000000 		.4byte	0x97
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 48


 2112 04b4 05       		.uleb128 0x5
 2113 04b5 03       		.byte	0x3
 2114 04b6 00000000 		.4byte	countdown
 2115 04ba 19       		.uleb128 0x19
 2116 04bb 14000000 		.4byte	.LASF65
 2117 04bf 01       		.byte	0x1
 2118 04c0 3E       		.byte	0x3e
 2119 04c1 97000000 		.4byte	0x97
 2120 04c5 05       		.uleb128 0x5
 2121 04c6 03       		.byte	0x3
 2122 04c7 00000000 		.4byte	update_Data
 2123 04cb 15       		.uleb128 0x15
 2124 04cc 97000000 		.4byte	0x97
 2125 04d0 DB040000 		.4byte	0x4db
 2126 04d4 16       		.uleb128 0x16
 2127 04d5 01010000 		.4byte	0x101
 2128 04d9 3F       		.byte	0x3f
 2129 04da 00       		.byte	0
 2130 04db 19       		.uleb128 0x19
 2131 04dc 20000000 		.4byte	.LASF66
 2132 04e0 01       		.byte	0x1
 2133 04e1 3F       		.byte	0x3f
 2134 04e2 CB040000 		.4byte	0x4cb
 2135 04e6 05       		.uleb128 0x5
 2136 04e7 03       		.byte	0x3
 2137 04e8 00000000 		.4byte	RxBuffer
 2138 04ec 19       		.uleb128 0x19
 2139 04ed 0A000000 		.4byte	.LASF67
 2140 04f1 01       		.byte	0x1
 2141 04f2 40       		.byte	0x40
 2142 04f3 89000000 		.4byte	0x89
 2143 04f7 05       		.uleb128 0x5
 2144 04f8 03       		.byte	0x3
 2145 04f9 00000000 		.4byte	msg_count
 2146 04fd 19       		.uleb128 0x19
 2147 04fe C4020000 		.4byte	.LASF68
 2148 0502 01       		.byte	0x1
 2149 0503 40       		.byte	0x40
 2150 0504 89000000 		.4byte	0x89
 2151 0508 05       		.uleb128 0x5
 2152 0509 03       		.byte	0x3
 2153 050a 00000000 		.4byte	rxflag
 2154 050e 19       		.uleb128 0x19
 2155 050f 11030000 		.4byte	.LASF69
 2156 0513 01       		.byte	0x1
 2157 0514 40       		.byte	0x40
 2158 0515 89000000 		.4byte	0x89
 2159 0519 05       		.uleb128 0x5
 2160 051a 03       		.byte	0x3
 2161 051b 00000000 		.4byte	bytes
 2162 051f 19       		.uleb128 0x19
 2163 0520 6A000000 		.4byte	.LASF70
 2164 0524 01       		.byte	0x1
 2165 0525 40       		.byte	0x40
 2166 0526 89000000 		.4byte	0x89
 2167 052a 05       		.uleb128 0x5
 2168 052b 03       		.byte	0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 49


 2169 052c 00000000 		.4byte	dataflag
 2170 0530 19       		.uleb128 0x19
 2171 0531 50000000 		.4byte	.LASF71
 2172 0535 01       		.byte	0x1
 2173 0536 40       		.byte	0x40
 2174 0537 89000000 		.4byte	0x89
 2175 053b 05       		.uleb128 0x5
 2176 053c 03       		.byte	0x3
 2177 053d 00000000 		.4byte	transmit_flag
 2178 0541 15       		.uleb128 0x15
 2179 0542 E9000000 		.4byte	0xe9
 2180 0546 51050000 		.4byte	0x551
 2181 054a 16       		.uleb128 0x16
 2182 054b 01010000 		.4byte	0x101
 2183 054f 0A       		.byte	0xa
 2184 0550 00       		.byte	0
 2185 0551 19       		.uleb128 0x19
 2186 0552 8D000000 		.4byte	.LASF72
 2187 0556 01       		.byte	0x1
 2188 0557 41       		.byte	0x41
 2189 0558 41050000 		.4byte	0x541
 2190 055c 05       		.uleb128 0x5
 2191 055d 03       		.byte	0x3
 2192 055e 00000000 		.4byte	file
 2193 0562 15       		.uleb128 0x15
 2194 0563 E9000000 		.4byte	0xe9
 2195 0567 72050000 		.4byte	0x572
 2196 056b 16       		.uleb128 0x16
 2197 056c 01010000 		.4byte	0x101
 2198 0570 09       		.byte	0x9
 2199 0571 00       		.byte	0
 2200 0572 19       		.uleb128 0x19
 2201 0573 90010000 		.4byte	.LASF73
 2202 0577 01       		.byte	0x1
 2203 0578 42       		.byte	0x42
 2204 0579 62050000 		.4byte	0x562
 2205 057d 05       		.uleb128 0x5
 2206 057e 03       		.byte	0x3
 2207 057f 00000000 		.4byte	volume
 2208 0583 19       		.uleb128 0x19
 2209 0584 AE030000 		.4byte	.LASF74
 2210 0588 01       		.byte	0x1
 2211 0589 43       		.byte	0x43
 2212 058a 18010000 		.4byte	0x118
 2213 058e 05       		.uleb128 0x5
 2214 058f 03       		.byte	0x3
 2215 0590 00000000 		.4byte	fsfile
 2216 0594 00       		.byte	0
 2217              		.section	.debug_abbrev,"",%progbits
 2218              	.Ldebug_abbrev0:
 2219 0000 01       		.uleb128 0x1
 2220 0001 11       		.uleb128 0x11
 2221 0002 01       		.byte	0x1
 2222 0003 25       		.uleb128 0x25
 2223 0004 0E       		.uleb128 0xe
 2224 0005 13       		.uleb128 0x13
 2225 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 50


 2226 0007 03       		.uleb128 0x3
 2227 0008 0E       		.uleb128 0xe
 2228 0009 1B       		.uleb128 0x1b
 2229 000a 0E       		.uleb128 0xe
 2230 000b 55       		.uleb128 0x55
 2231 000c 17       		.uleb128 0x17
 2232 000d 11       		.uleb128 0x11
 2233 000e 01       		.uleb128 0x1
 2234 000f 10       		.uleb128 0x10
 2235 0010 17       		.uleb128 0x17
 2236 0011 00       		.byte	0
 2237 0012 00       		.byte	0
 2238 0013 02       		.uleb128 0x2
 2239 0014 24       		.uleb128 0x24
 2240 0015 00       		.byte	0
 2241 0016 0B       		.uleb128 0xb
 2242 0017 0B       		.uleb128 0xb
 2243 0018 3E       		.uleb128 0x3e
 2244 0019 0B       		.uleb128 0xb
 2245 001a 03       		.uleb128 0x3
 2246 001b 0E       		.uleb128 0xe
 2247 001c 00       		.byte	0
 2248 001d 00       		.byte	0
 2249 001e 03       		.uleb128 0x3
 2250 001f 16       		.uleb128 0x16
 2251 0020 00       		.byte	0
 2252 0021 03       		.uleb128 0x3
 2253 0022 0E       		.uleb128 0xe
 2254 0023 3A       		.uleb128 0x3a
 2255 0024 0B       		.uleb128 0xb
 2256 0025 3B       		.uleb128 0x3b
 2257 0026 0B       		.uleb128 0xb
 2258 0027 49       		.uleb128 0x49
 2259 0028 13       		.uleb128 0x13
 2260 0029 00       		.byte	0
 2261 002a 00       		.byte	0
 2262 002b 04       		.uleb128 0x4
 2263 002c 24       		.uleb128 0x24
 2264 002d 00       		.byte	0
 2265 002e 0B       		.uleb128 0xb
 2266 002f 0B       		.uleb128 0xb
 2267 0030 3E       		.uleb128 0x3e
 2268 0031 0B       		.uleb128 0xb
 2269 0032 03       		.uleb128 0x3
 2270 0033 08       		.uleb128 0x8
 2271 0034 00       		.byte	0
 2272 0035 00       		.byte	0
 2273 0036 05       		.uleb128 0x5
 2274 0037 16       		.uleb128 0x16
 2275 0038 00       		.byte	0
 2276 0039 03       		.uleb128 0x3
 2277 003a 0E       		.uleb128 0xe
 2278 003b 3A       		.uleb128 0x3a
 2279 003c 0B       		.uleb128 0xb
 2280 003d 3B       		.uleb128 0x3b
 2281 003e 05       		.uleb128 0x5
 2282 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 51


 2283 0040 13       		.uleb128 0x13
 2284 0041 00       		.byte	0
 2285 0042 00       		.byte	0
 2286 0043 06       		.uleb128 0x6
 2287 0044 35       		.uleb128 0x35
 2288 0045 00       		.byte	0
 2289 0046 49       		.uleb128 0x49
 2290 0047 13       		.uleb128 0x13
 2291 0048 00       		.byte	0
 2292 0049 00       		.byte	0
 2293 004a 07       		.uleb128 0x7
 2294 004b 13       		.uleb128 0x13
 2295 004c 00       		.byte	0
 2296 004d 03       		.uleb128 0x3
 2297 004e 0E       		.uleb128 0xe
 2298 004f 3C       		.uleb128 0x3c
 2299 0050 19       		.uleb128 0x19
 2300 0051 00       		.byte	0
 2301 0052 00       		.byte	0
 2302 0053 08       		.uleb128 0x8
 2303 0054 0F       		.uleb128 0xf
 2304 0055 00       		.byte	0
 2305 0056 0B       		.uleb128 0xb
 2306 0057 0B       		.uleb128 0xb
 2307 0058 49       		.uleb128 0x49
 2308 0059 13       		.uleb128 0x13
 2309 005a 00       		.byte	0
 2310 005b 00       		.byte	0
 2311 005c 09       		.uleb128 0x9
 2312 005d 04       		.uleb128 0x4
 2313 005e 01       		.byte	0x1
 2314 005f 03       		.uleb128 0x3
 2315 0060 0E       		.uleb128 0xe
 2316 0061 0B       		.uleb128 0xb
 2317 0062 0B       		.uleb128 0xb
 2318 0063 3A       		.uleb128 0x3a
 2319 0064 0B       		.uleb128 0xb
 2320 0065 3B       		.uleb128 0x3b
 2321 0066 0B       		.uleb128 0xb
 2322 0067 01       		.uleb128 0x1
 2323 0068 13       		.uleb128 0x13
 2324 0069 00       		.byte	0
 2325 006a 00       		.byte	0
 2326 006b 0A       		.uleb128 0xa
 2327 006c 28       		.uleb128 0x28
 2328 006d 00       		.byte	0
 2329 006e 03       		.uleb128 0x3
 2330 006f 0E       		.uleb128 0xe
 2331 0070 1C       		.uleb128 0x1c
 2332 0071 0D       		.uleb128 0xd
 2333 0072 00       		.byte	0
 2334 0073 00       		.byte	0
 2335 0074 0B       		.uleb128 0xb
 2336 0075 2E       		.uleb128 0x2e
 2337 0076 00       		.byte	0
 2338 0077 3F       		.uleb128 0x3f
 2339 0078 19       		.uleb128 0x19
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 52


 2340 0079 03       		.uleb128 0x3
 2341 007a 0E       		.uleb128 0xe
 2342 007b 3A       		.uleb128 0x3a
 2343 007c 0B       		.uleb128 0xb
 2344 007d 3B       		.uleb128 0x3b
 2345 007e 0B       		.uleb128 0xb
 2346 007f 27       		.uleb128 0x27
 2347 0080 19       		.uleb128 0x19
 2348 0081 11       		.uleb128 0x11
 2349 0082 01       		.uleb128 0x1
 2350 0083 12       		.uleb128 0x12
 2351 0084 06       		.uleb128 0x6
 2352 0085 40       		.uleb128 0x40
 2353 0086 18       		.uleb128 0x18
 2354 0087 9642     		.uleb128 0x2116
 2355 0089 19       		.uleb128 0x19
 2356 008a 00       		.byte	0
 2357 008b 00       		.byte	0
 2358 008c 0C       		.uleb128 0xc
 2359 008d 2E       		.uleb128 0x2e
 2360 008e 00       		.byte	0
 2361 008f 3F       		.uleb128 0x3f
 2362 0090 19       		.uleb128 0x19
 2363 0091 03       		.uleb128 0x3
 2364 0092 0E       		.uleb128 0xe
 2365 0093 3A       		.uleb128 0x3a
 2366 0094 0B       		.uleb128 0xb
 2367 0095 3B       		.uleb128 0x3b
 2368 0096 0B       		.uleb128 0xb
 2369 0097 27       		.uleb128 0x27
 2370 0098 19       		.uleb128 0x19
 2371 0099 11       		.uleb128 0x11
 2372 009a 01       		.uleb128 0x1
 2373 009b 12       		.uleb128 0x12
 2374 009c 06       		.uleb128 0x6
 2375 009d 40       		.uleb128 0x40
 2376 009e 18       		.uleb128 0x18
 2377 009f 9742     		.uleb128 0x2117
 2378 00a1 19       		.uleb128 0x19
 2379 00a2 00       		.byte	0
 2380 00a3 00       		.byte	0
 2381 00a4 0D       		.uleb128 0xd
 2382 00a5 2E       		.uleb128 0x2e
 2383 00a6 01       		.byte	0x1
 2384 00a7 3F       		.uleb128 0x3f
 2385 00a8 19       		.uleb128 0x19
 2386 00a9 03       		.uleb128 0x3
 2387 00aa 0E       		.uleb128 0xe
 2388 00ab 3A       		.uleb128 0x3a
 2389 00ac 0B       		.uleb128 0xb
 2390 00ad 3B       		.uleb128 0x3b
 2391 00ae 0B       		.uleb128 0xb
 2392 00af 49       		.uleb128 0x49
 2393 00b0 13       		.uleb128 0x13
 2394 00b1 11       		.uleb128 0x11
 2395 00b2 01       		.uleb128 0x1
 2396 00b3 12       		.uleb128 0x12
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 53


 2397 00b4 06       		.uleb128 0x6
 2398 00b5 40       		.uleb128 0x40
 2399 00b6 18       		.uleb128 0x18
 2400 00b7 9642     		.uleb128 0x2116
 2401 00b9 19       		.uleb128 0x19
 2402 00ba 01       		.uleb128 0x1
 2403 00bb 13       		.uleb128 0x13
 2404 00bc 00       		.byte	0
 2405 00bd 00       		.byte	0
 2406 00be 0E       		.uleb128 0xe
 2407 00bf 34       		.uleb128 0x34
 2408 00c0 00       		.byte	0
 2409 00c1 03       		.uleb128 0x3
 2410 00c2 08       		.uleb128 0x8
 2411 00c3 3A       		.uleb128 0x3a
 2412 00c4 0B       		.uleb128 0xb
 2413 00c5 3B       		.uleb128 0x3b
 2414 00c6 0B       		.uleb128 0xb
 2415 00c7 49       		.uleb128 0x49
 2416 00c8 13       		.uleb128 0x13
 2417 00c9 02       		.uleb128 0x2
 2418 00ca 18       		.uleb128 0x18
 2419 00cb 00       		.byte	0
 2420 00cc 00       		.byte	0
 2421 00cd 0F       		.uleb128 0xf
 2422 00ce 34       		.uleb128 0x34
 2423 00cf 00       		.byte	0
 2424 00d0 03       		.uleb128 0x3
 2425 00d1 0E       		.uleb128 0xe
 2426 00d2 3A       		.uleb128 0x3a
 2427 00d3 0B       		.uleb128 0xb
 2428 00d4 3B       		.uleb128 0x3b
 2429 00d5 0B       		.uleb128 0xb
 2430 00d6 49       		.uleb128 0x49
 2431 00d7 13       		.uleb128 0x13
 2432 00d8 02       		.uleb128 0x2
 2433 00d9 18       		.uleb128 0x18
 2434 00da 00       		.byte	0
 2435 00db 00       		.byte	0
 2436 00dc 10       		.uleb128 0x10
 2437 00dd 34       		.uleb128 0x34
 2438 00de 00       		.byte	0
 2439 00df 03       		.uleb128 0x3
 2440 00e0 08       		.uleb128 0x8
 2441 00e1 3A       		.uleb128 0x3a
 2442 00e2 0B       		.uleb128 0xb
 2443 00e3 3B       		.uleb128 0x3b
 2444 00e4 0B       		.uleb128 0xb
 2445 00e5 49       		.uleb128 0x49
 2446 00e6 13       		.uleb128 0x13
 2447 00e7 00       		.byte	0
 2448 00e8 00       		.byte	0
 2449 00e9 11       		.uleb128 0x11
 2450 00ea 0B       		.uleb128 0xb
 2451 00eb 01       		.byte	0x1
 2452 00ec 11       		.uleb128 0x11
 2453 00ed 01       		.uleb128 0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 54


 2454 00ee 12       		.uleb128 0x12
 2455 00ef 06       		.uleb128 0x6
 2456 00f0 00       		.byte	0
 2457 00f1 00       		.byte	0
 2458 00f2 12       		.uleb128 0x12
 2459 00f3 34       		.uleb128 0x34
 2460 00f4 00       		.byte	0
 2461 00f5 03       		.uleb128 0x3
 2462 00f6 08       		.uleb128 0x8
 2463 00f7 3A       		.uleb128 0x3a
 2464 00f8 0B       		.uleb128 0xb
 2465 00f9 3B       		.uleb128 0x3b
 2466 00fa 05       		.uleb128 0x5
 2467 00fb 49       		.uleb128 0x49
 2468 00fc 13       		.uleb128 0x13
 2469 00fd 02       		.uleb128 0x2
 2470 00fe 18       		.uleb128 0x18
 2471 00ff 00       		.byte	0
 2472 0100 00       		.byte	0
 2473 0101 13       		.uleb128 0x13
 2474 0102 0B       		.uleb128 0xb
 2475 0103 01       		.byte	0x1
 2476 0104 11       		.uleb128 0x11
 2477 0105 01       		.uleb128 0x1
 2478 0106 12       		.uleb128 0x12
 2479 0107 06       		.uleb128 0x6
 2480 0108 01       		.uleb128 0x1
 2481 0109 13       		.uleb128 0x13
 2482 010a 00       		.byte	0
 2483 010b 00       		.byte	0
 2484 010c 14       		.uleb128 0x14
 2485 010d 34       		.uleb128 0x34
 2486 010e 00       		.byte	0
 2487 010f 03       		.uleb128 0x3
 2488 0110 0E       		.uleb128 0xe
 2489 0111 3A       		.uleb128 0x3a
 2490 0112 0B       		.uleb128 0xb
 2491 0113 3B       		.uleb128 0x3b
 2492 0114 05       		.uleb128 0x5
 2493 0115 49       		.uleb128 0x49
 2494 0116 13       		.uleb128 0x13
 2495 0117 02       		.uleb128 0x2
 2496 0118 18       		.uleb128 0x18
 2497 0119 00       		.byte	0
 2498 011a 00       		.byte	0
 2499 011b 15       		.uleb128 0x15
 2500 011c 01       		.uleb128 0x1
 2501 011d 01       		.byte	0x1
 2502 011e 49       		.uleb128 0x49
 2503 011f 13       		.uleb128 0x13
 2504 0120 01       		.uleb128 0x1
 2505 0121 13       		.uleb128 0x13
 2506 0122 00       		.byte	0
 2507 0123 00       		.byte	0
 2508 0124 16       		.uleb128 0x16
 2509 0125 21       		.uleb128 0x21
 2510 0126 00       		.byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 55


 2511 0127 49       		.uleb128 0x49
 2512 0128 13       		.uleb128 0x13
 2513 0129 2F       		.uleb128 0x2f
 2514 012a 0B       		.uleb128 0xb
 2515 012b 00       		.byte	0
 2516 012c 00       		.byte	0
 2517 012d 17       		.uleb128 0x17
 2518 012e 34       		.uleb128 0x34
 2519 012f 00       		.byte	0
 2520 0130 03       		.uleb128 0x3
 2521 0131 0E       		.uleb128 0xe
 2522 0132 3A       		.uleb128 0x3a
 2523 0133 0B       		.uleb128 0xb
 2524 0134 3B       		.uleb128 0x3b
 2525 0135 05       		.uleb128 0x5
 2526 0136 49       		.uleb128 0x49
 2527 0137 13       		.uleb128 0x13
 2528 0138 3F       		.uleb128 0x3f
 2529 0139 19       		.uleb128 0x19
 2530 013a 3C       		.uleb128 0x3c
 2531 013b 19       		.uleb128 0x19
 2532 013c 00       		.byte	0
 2533 013d 00       		.byte	0
 2534 013e 18       		.uleb128 0x18
 2535 013f 34       		.uleb128 0x34
 2536 0140 00       		.byte	0
 2537 0141 03       		.uleb128 0x3
 2538 0142 0E       		.uleb128 0xe
 2539 0143 3A       		.uleb128 0x3a
 2540 0144 0B       		.uleb128 0xb
 2541 0145 3B       		.uleb128 0x3b
 2542 0146 05       		.uleb128 0x5
 2543 0147 49       		.uleb128 0x49
 2544 0148 13       		.uleb128 0x13
 2545 0149 3F       		.uleb128 0x3f
 2546 014a 19       		.uleb128 0x19
 2547 014b 02       		.uleb128 0x2
 2548 014c 18       		.uleb128 0x18
 2549 014d 00       		.byte	0
 2550 014e 00       		.byte	0
 2551 014f 19       		.uleb128 0x19
 2552 0150 34       		.uleb128 0x34
 2553 0151 00       		.byte	0
 2554 0152 03       		.uleb128 0x3
 2555 0153 0E       		.uleb128 0xe
 2556 0154 3A       		.uleb128 0x3a
 2557 0155 0B       		.uleb128 0xb
 2558 0156 3B       		.uleb128 0x3b
 2559 0157 0B       		.uleb128 0xb
 2560 0158 49       		.uleb128 0x49
 2561 0159 13       		.uleb128 0x13
 2562 015a 3F       		.uleb128 0x3f
 2563 015b 19       		.uleb128 0x19
 2564 015c 02       		.uleb128 0x2
 2565 015d 18       		.uleb128 0x18
 2566 015e 00       		.byte	0
 2567 015f 00       		.byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 56


 2568 0160 1A       		.uleb128 0x1a
 2569 0161 34       		.uleb128 0x34
 2570 0162 00       		.byte	0
 2571 0163 03       		.uleb128 0x3
 2572 0164 08       		.uleb128 0x8
 2573 0165 3A       		.uleb128 0x3a
 2574 0166 0B       		.uleb128 0xb
 2575 0167 3B       		.uleb128 0x3b
 2576 0168 0B       		.uleb128 0xb
 2577 0169 49       		.uleb128 0x49
 2578 016a 13       		.uleb128 0x13
 2579 016b 3F       		.uleb128 0x3f
 2580 016c 19       		.uleb128 0x19
 2581 016d 02       		.uleb128 0x2
 2582 016e 18       		.uleb128 0x18
 2583 016f 00       		.byte	0
 2584 0170 00       		.byte	0
 2585 0171 00       		.byte	0
 2586              		.section	.debug_aranges,"",%progbits
 2587 0000 44000000 		.4byte	0x44
 2588 0004 0200     		.2byte	0x2
 2589 0006 00000000 		.4byte	.Ldebug_info0
 2590 000a 04       		.byte	0x4
 2591 000b 00       		.byte	0
 2592 000c 0000     		.2byte	0
 2593 000e 0000     		.2byte	0
 2594 0010 00000000 		.4byte	.LFB63
 2595 0014 20000000 		.4byte	.LFE63-.LFB63
 2596 0018 00000000 		.4byte	.LFB64
 2597 001c 38000000 		.4byte	.LFE64-.LFB64
 2598 0020 00000000 		.4byte	.LFB65
 2599 0024 3C000000 		.4byte	.LFE65-.LFB65
 2600 0028 00000000 		.4byte	.LFB66
 2601 002c 0C000000 		.4byte	.LFE66-.LFB66
 2602 0030 00000000 		.4byte	.LFB67
 2603 0034 3C000000 		.4byte	.LFE67-.LFB67
 2604 0038 00000000 		.4byte	.LFB68
 2605 003c 24080000 		.4byte	.LFE68-.LFB68
 2606 0040 00000000 		.4byte	0
 2607 0044 00000000 		.4byte	0
 2608              		.section	.debug_ranges,"",%progbits
 2609              	.Ldebug_ranges0:
 2610 0000 00000000 		.4byte	.LFB63
 2611 0004 20000000 		.4byte	.LFE63
 2612 0008 00000000 		.4byte	.LFB64
 2613 000c 38000000 		.4byte	.LFE64
 2614 0010 00000000 		.4byte	.LFB65
 2615 0014 3C000000 		.4byte	.LFE65
 2616 0018 00000000 		.4byte	.LFB66
 2617 001c 0C000000 		.4byte	.LFE66
 2618 0020 00000000 		.4byte	.LFB67
 2619 0024 3C000000 		.4byte	.LFE67
 2620 0028 00000000 		.4byte	.LFB68
 2621 002c 24080000 		.4byte	.LFE68
 2622 0030 00000000 		.4byte	0
 2623 0034 00000000 		.4byte	0
 2624              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 57


 2625              	.Ldebug_line0:
 2626 0000 EC020000 		.section	.debug_str,"MS",%progbits,1
 2626      02009501 
 2626      00000201 
 2626      FB0E0D00 
 2626      01010101 
 2627              	.LASF30:
 2628 0000 52455355 		.ascii	"RESURFACE\000"
 2628      52464143 
 2628      4500
 2629              	.LASF67:
 2630 000a 6D73675F 		.ascii	"msg_count\000"
 2630      636F756E 
 2630      7400
 2631              	.LASF65:
 2632 0014 75706461 		.ascii	"update_Data\000"
 2632      74655F44 
 2632      61746100 
 2633              	.LASF66:
 2634 0020 52784275 		.ascii	"RxBuffer\000"
 2634      66666572 
 2634      00
 2635              	.LASF26:
 2636 0029 53595354 		.ascii	"SYSTEM_CHECK\000"
 2636      454D5F43 
 2636      4845434B 
 2636      00
 2637              	.LASF33:
 2638 0036 53544154 		.ascii	"STATES\000"
 2638      455300
 2639              	.LASF49:
 2640 003d 73646275 		.ascii	"sdbuf\000"
 2640      6600
 2641              	.LASF53:
 2642 0043 41646472 		.ascii	"Addr\000"
 2642      00
 2643              	.LASF51:
 2644 0048 64657641 		.ascii	"devAddr\000"
 2644      64647200 
 2645              	.LASF71:
 2646 0050 7472616E 		.ascii	"transmit_flag\000"
 2646      736D6974 
 2646      5F666C61 
 2646      6700
 2647              	.LASF48:
 2648 005e 6F6E6573 		.ascii	"ones\000"
 2648      00
 2649              	.LASF29:
 2650 0063 4C414E44 		.ascii	"LANDED\000"
 2650      454400
 2651              	.LASF70:
 2652 006a 64617461 		.ascii	"dataflag\000"
 2652      666C6167 
 2652      00
 2653              	.LASF78:
 2654 0073 6D61696E 		.ascii	"main\000"
 2654      00
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 58


 2655              	.LASF34:
 2656 0078 4D6F6973 		.ascii	"Moisture_ISR_Handler\000"
 2656      74757265 
 2656      5F495352 
 2656      5F48616E 
 2656      646C6572 
 2657              	.LASF72:
 2658 008d 66696C65 		.ascii	"file\000"
 2658      00
 2659              	.LASF43:
 2660 0092 70726573 		.ascii	"pressure_avg\000"
 2660      73757265 
 2660      5F617667 
 2660      00
 2661              	.LASF4:
 2662 009f 73686F72 		.ascii	"short int\000"
 2662      7420696E 
 2662      7400
 2663              	.LASF61:
 2664 00a9 50414E49 		.ascii	"PANIC_flag\000"
 2664      435F666C 
 2664      616700
 2665              	.LASF13:
 2666 00b4 75696E74 		.ascii	"uint8_t\000"
 2666      385F7400 
 2667              	.LASF18:
 2668 00bc 696E7431 		.ascii	"int16\000"
 2668      3600
 2669              	.LASF39:
 2670 00c2 64656369 		.ascii	"decimals\000"
 2670      6D616C73 
 2670      00
 2671              	.LASF19:
 2672 00cb 666C6F61 		.ascii	"float\000"
 2672      7400
 2673              	.LASF41:
 2674 00d1 74656D70 		.ascii	"temp\000"
 2674      00
 2675              	.LASF10:
 2676 00d6 6C6F6E67 		.ascii	"long long int\000"
 2676      206C6F6E 
 2676      6720696E 
 2676      7400
 2677              	.LASF57:
 2678 00e4 61766572 		.ascii	"average\000"
 2678      61676500 
 2679              	.LASF31:
 2680 00ec 5452414E 		.ascii	"TRANSMIT\000"
 2680      534D4954 
 2680      00
 2681              	.LASF75:
 2682 00f5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2682      4320342E 
 2682      392E3320 
 2682      32303135 
 2682      30333033 
 2683 0128 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 59


 2683      20726576 
 2683      6973696F 
 2683      6E203232 
 2683      31323230 
 2684 015b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2684      66756E63 
 2684      74696F6E 
 2684      2D736563 
 2684      74696F6E 
 2685              	.LASF47:
 2686 0183 74656E73 		.ascii	"tens\000"
 2686      00
 2687              	.LASF40:
 2688 0188 766F6C74 		.ascii	"voltage\000"
 2688      61676500 
 2689              	.LASF73:
 2690 0190 766F6C75 		.ascii	"volume\000"
 2690      6D6500
 2691              	.LASF54:
 2692 0197 70726573 		.ascii	"press_id\000"
 2692      735F6964 
 2692      00
 2693              	.LASF2:
 2694 01a0 5F5F7569 		.ascii	"__uint8_t\000"
 2694      6E74385F 
 2694      7400
 2695              	.LASF32:
 2696 01aa 4552524F 		.ascii	"ERROR\000"
 2696      5200
 2697              	.LASF56:
 2698 01b0 70726573 		.ascii	"pressure_sum\000"
 2698      73757265 
 2698      5F73756D 
 2698      00
 2699              	.LASF25:
 2700 01bd 6C6F6E67 		.ascii	"long double\000"
 2700      20646F75 
 2700      626C6500 
 2701              	.LASF27:
 2702 01c9 57414954 		.ascii	"WAIT_TO_LAUNCH\000"
 2702      5F544F5F 
 2702      4C41554E 
 2702      434800
 2703              	.LASF1:
 2704 01d8 756E7369 		.ascii	"unsigned char\000"
 2704      676E6564 
 2704      20636861 
 2704      7200
 2705              	.LASF24:
 2706 01e6 46535F46 		.ascii	"FS_FILE\000"
 2706      494C4500 
 2707              	.LASF64:
 2708 01ee 636F756E 		.ascii	"countdown\000"
 2708      74646F77 
 2708      6E00
 2709              	.LASF0:
 2710 01f8 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 60


 2710      65642063 
 2710      68617200 
 2711              	.LASF11:
 2712 0204 6C6F6E67 		.ascii	"long long unsigned int\000"
 2712      206C6F6E 
 2712      6720756E 
 2712      7369676E 
 2712      65642069 
 2713              	.LASF16:
 2714 021b 75696E74 		.ascii	"uint32_t\000"
 2714      33325F74 
 2714      00
 2715              	.LASF55:
 2716 0224 64617461 		.ascii	"data_time\000"
 2716      5F74696D 
 2716      6500
 2717              	.LASF12:
 2718 022e 756E7369 		.ascii	"unsigned int\000"
 2718      676E6564 
 2718      20696E74 
 2718      00
 2719              	.LASF63:
 2720 023b 74657374 		.ascii	"testnum\000"
 2720      6E756D00 
 2721              	.LASF5:
 2722 0243 73686F72 		.ascii	"short unsigned int\000"
 2722      7420756E 
 2722      7369676E 
 2722      65642069 
 2722      6E7400
 2723              	.LASF21:
 2724 0256 63686172 		.ascii	"char\000"
 2724      00
 2725              	.LASF7:
 2726 025b 6C6F6E67 		.ascii	"long int\000"
 2726      20696E74 
 2726      00
 2727              	.LASF15:
 2728 0264 696E7433 		.ascii	"int32_t\000"
 2728      325F7400 
 2729              	.LASF14:
 2730 026c 696E7431 		.ascii	"int16_t\000"
 2730      365F7400 
 2731              	.LASF17:
 2732 0274 75696E74 		.ascii	"uint8\000"
 2732      3800
 2733              	.LASF59:
 2734 027a 5F426F6F 		.ascii	"_Bool\000"
 2734      6C00
 2735              	.LASF77:
 2736 0280 433A5C55 		.ascii	"C:\\Users\\gding\\Documents\\Project_O-Vac\\OVac.cy"
 2736      73657273 
 2736      5C676469 
 2736      6E675C44 
 2736      6F63756D 
 2737 02ae 64736E00 		.ascii	"dsn\000"
 2738              	.LASF45:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 61


 2739 02b2 63757253 		.ascii	"curState\000"
 2739      74617465 
 2739      00
 2740              	.LASF46:
 2741 02bb 7A5F6F66 		.ascii	"z_offset\000"
 2741      66736574 
 2741      00
 2742              	.LASF68:
 2743 02c4 7278666C 		.ascii	"rxflag\000"
 2743      616700
 2744              	.LASF52:
 2745 02cb 62756666 		.ascii	"buffer\000"
 2745      657200
 2746              	.LASF36:
 2747 02d2 436F756E 		.ascii	"Countdown_ISR_Handler\000"
 2747      74646F77 
 2747      6E5F4953 
 2747      525F4861 
 2747      6E646C65 
 2748              	.LASF76:
 2749 02e8 6D61696E 		.ascii	"main.c\000"
 2749      2E6300
 2750              	.LASF22:
 2751 02ef 72656738 		.ascii	"reg8\000"
 2751      00
 2752              	.LASF9:
 2753 02f4 6C6F6E67 		.ascii	"long unsigned int\000"
 2753      20756E73 
 2753      69676E65 
 2753      6420696E 
 2753      7400
 2754              	.LASF28:
 2755 0306 44455343 		.ascii	"DESCENDING\000"
 2755      454E4449 
 2755      4E4700
 2756              	.LASF69:
 2757 0311 62797465 		.ascii	"bytes\000"
 2757      7300
 2758              	.LASF20:
 2759 0317 646F7562 		.ascii	"double\000"
 2759      6C6500
 2760              	.LASF8:
 2761 031e 5F5F7569 		.ascii	"__uint32_t\000"
 2761      6E743332 
 2761      5F7400
 2762              	.LASF44:
 2763 0329 74656D70 		.ascii	"tempbuf\000"
 2763      62756600 
 2764              	.LASF6:
 2765 0331 5F5F696E 		.ascii	"__int32_t\000"
 2765      7433325F 
 2765      7400
 2766              	.LASF3:
 2767 033b 5F5F696E 		.ascii	"__int16_t\000"
 2767      7431365F 
 2767      7400
 2768              	.LASF23:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccafN7dM.s 			page 62


 2769 0345 73697A65 		.ascii	"sizetype\000"
 2769      74797065 
 2769      00
 2770              	.LASF62:
 2771 034e 53544154 		.ascii	"STATE\000"
 2771      4500
 2772              	.LASF38:
 2773 0354 74656D70 		.ascii	"temp_interrupt\000"
 2773      5F696E74 
 2773      65727275 
 2773      707400
 2774              	.LASF42:
 2775 0363 6F757470 		.ascii	"output\000"
 2775      757400
 2776              	.LASF58:
 2777 036a 636F6C6C 		.ascii	"collect_flag\000"
 2777      6563745F 
 2777      666C6167 
 2777      00
 2778              	.LASF37:
 2779 0377 72785F69 		.ascii	"rx_interrupt\000"
 2779      6E746572 
 2779      72757074 
 2779      00
 2780              	.LASF50:
 2781 0384 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2781      52784275 
 2781      66666572 
 2781      00
 2782              	.LASF60:
 2783 0391 77616974 		.ascii	"wait_flag\000"
 2783      5F666C61 
 2783      6700
 2784              	.LASF35:
 2785 039b 53616D70 		.ascii	"Sample_ISR_Handler\000"
 2785      6C655F49 
 2785      53525F48 
 2785      616E646C 
 2785      657200
 2786              	.LASF74:
 2787 03ae 66736669 		.ascii	"fsfile\000"
 2787      6C6500
 2788              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
