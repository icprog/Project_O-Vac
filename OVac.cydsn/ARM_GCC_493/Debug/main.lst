ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	devAddr,1,1
  19              		.comm	buffer,22,4
  20              		.global	Addr
  21              		.data
  22              		.align	2
  23              		.type	Addr, %object
  24              		.size	Addr, 4
  25              	Addr:
  26 0000 3F000000 		.word	63
  27              		.global	id
  28              		.align	2
  29              		.type	id, %object
  30              		.size	id, 4
  31              	id:
  32 0004 01000000 		.word	1
  33              		.global	press_id
  34              		.align	2
  35              		.type	press_id, %object
  36              		.size	press_id, 4
  37              	press_id:
  38 0008 01000000 		.word	1
  39              		.global	data_time
  40              		.bss
  41              		.align	2
  42              		.type	data_time, %object
  43              		.size	data_time, 4
  44              	data_time:
  45 0000 00000000 		.space	4
  46              		.global	descent_time
  47              		.align	2
  48              		.type	descent_time, %object
  49              		.size	descent_time, 4
  50              	descent_time:
  51 0004 00000000 		.space	4
  52              		.global	sum
  53              		.align	2
  54              		.type	sum, %object
  55              		.size	sum, 4
  56              	sum:
  57 0008 00000000 		.space	4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 2


  58              		.global	pressure_sum
  59              		.align	2
  60              		.type	pressure_sum, %object
  61              		.size	pressure_sum, 4
  62              	pressure_sum:
  63 000c 00000000 		.space	4
  64              		.global	average
  65              		.align	1
  66              		.type	average, %object
  67              		.size	average, 2
  68              	average:
  69 0010 0000     		.space	2
  70              		.global	collect_flag
  71              		.type	collect_flag, %object
  72              		.size	collect_flag, 1
  73              	collect_flag:
  74 0012 00       		.space	1
  75              		.global	wait_flag
  76              		.type	wait_flag, %object
  77              		.size	wait_flag, 1
  78              	wait_flag:
  79 0013 00       		.space	1
  80              		.global	PANIC_flag
  81              		.type	PANIC_flag, %object
  82              		.size	PANIC_flag, 1
  83              	PANIC_flag:
  84 0014 00       		.space	1
  85              		.global	STATE
  86              		.data
  87              		.type	STATE, %object
  88              		.size	STATE, 1
  89              	STATE:
  90 000c 01       		.byte	1
  91              		.global	testnum
  92              		.type	testnum, %object
  93              		.size	testnum, 1
  94              	testnum:
  95 000d 01       		.byte	1
  96              		.global	countdown
  97              		.bss
  98              		.type	countdown, %object
  99              		.size	countdown, 1
 100              	countdown:
 101 0015 00       		.space	1
 102              		.global	update_Data
 103              		.type	update_Data, %object
 104              		.size	update_Data, 1
 105              	update_Data:
 106 0016 00       		.space	1
 107              		.global	RxBuffer
 108 0017 00       		.align	2
 109              		.type	RxBuffer, %object
 110              		.size	RxBuffer, 64
 111              	RxBuffer:
 112 0018 00000000 		.space	64
 112      00000000 
 112      00000000 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 3


 112      00000000 
 112      00000000 
 113              		.global	msg_count
 114              		.align	2
 115              		.type	msg_count, %object
 116              		.size	msg_count, 4
 117              	msg_count:
 118 0058 00000000 		.space	4
 119              		.global	rxflag
 120              		.align	2
 121              		.type	rxflag, %object
 122              		.size	rxflag, 4
 123              	rxflag:
 124 005c 00000000 		.space	4
 125              		.global	bytes
 126              		.align	2
 127              		.type	bytes, %object
 128              		.size	bytes, 4
 129              	bytes:
 130 0060 00000000 		.space	4
 131              		.global	dataflag
 132              		.align	2
 133              		.type	dataflag, %object
 134              		.size	dataflag, 4
 135              	dataflag:
 136 0064 00000000 		.space	4
 137              		.global	transmit_flag
 138              		.align	2
 139              		.type	transmit_flag, %object
 140              		.size	transmit_flag, 4
 141              	transmit_flag:
 142 0068 00000000 		.space	4
 143              		.global	depth
 144              		.align	2
 145              		.type	depth, %object
 146              		.size	depth, 4
 147              	depth:
 148 006c 00000000 		.space	4
 149              		.global	reset
 150              		.align	2
 151              		.type	reset, %object
 152              		.size	reset, 4
 153              	reset:
 154 0070 00000000 		.space	4
 155              		.global	xavg
 156              		.align	2
 157              		.type	xavg, %object
 158              		.size	xavg, 4
 159              	xavg:
 160 0074 00000000 		.space	4
 161              		.global	yavg
 162              		.align	2
 163              		.type	yavg, %object
 164              		.size	yavg, 4
 165              	yavg:
 166 0078 00000000 		.space	4
 167              		.global	xsum
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 4


 168              		.align	2
 169              		.type	xsum, %object
 170              		.size	xsum, 4
 171              	xsum:
 172 007c 00000000 		.space	4
 173              		.global	ysum
 174              		.align	2
 175              		.type	ysum, %object
 176              		.size	ysum, 4
 177              	ysum:
 178 0080 00000000 		.space	4
 179              		.global	file
 180              		.data
 181 000e 0000     		.align	2
 182              		.type	file, %object
 183              		.size	file, 11
 184              	file:
 185 0010 74657374 		.ascii	"test_1.txt\000"
 185      5F312E74 
 185      787400
 186              		.global	volume
 187 001b 00       		.bss
 188              		.align	2
 189              		.type	volume, %object
 190              		.size	volume, 10
 191              	volume:
 192 0084 00000000 		.space	10
 192      00000000 
 192      0000
 193              		.comm	fsfile,4,4
 194 008e 0000     		.section	.text.Moisture_ISR_Handler,"ax",%progbits
 195              		.align	2
 196              		.global	Moisture_ISR_Handler
 197              		.thumb
 198              		.thumb_func
 199              		.type	Moisture_ISR_Handler, %function
 200              	Moisture_ISR_Handler:
 201              	.LFB63:
 202              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 2.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   This is a source code for example project of ADC single ended mode.
   8:main.c        **** *
   9:main.c        **** *   Variable resistor(pot) is connected to +ve input of ADC using the I/O pin.
  10:main.c        **** *   P0.0. When voltage to positive terminal of ADC is 0, the output displayed
  11:main.c        **** *   on the LCD pannel is 0x0000. As voltage on positive terminal goes on
  12:main.c        **** *   increasing, the  converted value goes on increasing from 0x0000 and reaches
  13:main.c        **** *   0xFFFF when voltage becomes 1.024V. Futher increase in voltage value,
  14:main.c        **** *   doesn't cause any changes to values displayed in the LCD.
  15:main.c        **** *
  16:main.c        **** * Hardware Connections: 
  17:main.c        **** *  Connect analog input from Variable resistor to port P0[0] of DVK1 board.
  18:main.c        **** *
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 5


  19:main.c        **** ********************************************************************************
  20:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  21:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  22:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  23:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  24:main.c        **** * accompanying the software package from which you obtained this software.
  25:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  27:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  28:main.c        **** *******************************************************************************/
  29:main.c        **** 
  30:main.c        **** #include <project.h>
  31:main.c        **** #include <mpu6050.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include <stdlib.h>
  34:main.c        **** #include <string.h>
  35:main.c        **** #include <FS.h>
  36:main.c        **** #include "LiquidCrystal_I2C.h"
  37:main.c        **** #include "functions.h"
  38:main.c        **** 
  39:main.c        **** #define MPU6050 
  40:main.c        **** #define LCD
  41:main.c        **** //#define SD
  42:main.c        **** #define BT
  43:main.c        **** 
  44:main.c        **** #define MA_WINDOW 15                    // Number of samples in the moving average window.
  45:main.c        **** #define BOT_THRESHOLD 20000             // Z-Aacceleration threshold for transition into LANDED sta
  46:main.c        **** #define WAIT_TIME 1000                  // Number of ISR calls until transition into DESCENDING sta
  47:main.c        **** #define BUFFER_LEN  64u                 // Buffer length for UART rx
  48:main.c        **** #define DEGREES_45 (131 * 45)           // Gyro value corresponding to 60 degrees. Default setting 
  49:main.c        **** #define DEGREES_70 (131 * 70)           // So every 131 in gyro value equals 1 degree
  50:main.c        **** 
  51:main.c        **** 
  52:main.c        **** uint32_t Addr = 0x3F;                       // I2C address of LCD.
  53:main.c        **** long id = 1, press_id = 1;                 // Interrupt count.
  54:main.c        **** long data_time = 0;                        // data point num
  55:main.c        **** long descent_time = 0;                  // Max number of seconds allowed for descent, x 500 because
  56:main.c        **** 
  57:main.c        **** long sum = 0;                               // Sum of accelerometer values
  58:main.c        **** float pressure_sum = 0;                     // Sum of pressure values. 
  59:main.c        **** int16_t average = 0;                        // Moving average variable, accelerometer.
  60:main.c        **** bool collect_flag = 0;                      // flag indicating when to record acceleration sample.
  61:main.c        **** bool wait_flag = 0;                         // flag indicating when to increment interrupt counter.
  62:main.c        **** bool PANIC_flag = 0;                        // flag indicating water is present in housing.
  63:main.c        **** //bool first_test = 1;                        // flag indicating first test(longer countdown)
  64:main.c        **** STATES STATE = WAIT_TO_LAUNCH;                  // Set initial state. 
  65:main.c        **** uint8_t testnum = 1, countdown = 0, update_Data = 0;
  66:main.c        **** uint8_t RxBuffer[BUFFER_LEN] = {};            // Rx Buffer
  67:main.c        **** int msg_count = 0, rxflag = 0, bytes = 0, dataflag = 0, transmit_flag = 0;    // UART variables
  68:main.c        **** int depth = 0, reset = 0;                                                  // Variable depth       
  69:main.c        **** float xavg = 0, yavg = 0, xsum = 0, ysum = 0;
  70:main.c        **** char file[11] = "test_1.txt";
  71:main.c        **** char volume[10] = {};
  72:main.c        **** FS_FILE *fsfile;
  73:main.c        **** 
  74:main.c        **** /*******************************************************************************
  75:main.c        **** * Function Name: main
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 6


  76:main.c        **** ********************************************************************************
  77:main.c        **** *
  78:main.c        **** * Summary:
  79:main.c        **** *  main() performs following functions:
  80:main.c        **** *  1: Initializes the LCD.
  81:main.c        **** *  2: Initializes timer module and sampling interrupt.
  82:main.c        **** *  3: Initializes MPU6050 Accelerometer/Gyroscope module.
  83:main.c        **** *  4: Samples Z-axis acceleration data from module @ 500hz.
  84:main.c        **** *  5: Computes moving average of Z-axis acceleration values.
  85:main.c        **** *  6: Transitions from DESCENDING to LANDED state when sudden acceleration occurs
  86:main.c        **** *     (ie. moving average > 200000).
  87:main.c        **** *
  88:main.c        **** * Parameters:
  89:main.c        **** *  None.
  90:main.c        **** *
  91:main.c        **** * Return:
  92:main.c        **** *  None.
  93:main.c        **** *
  94:main.c        **** *******************************************************************************/
  95:main.c        **** 
  96:main.c        **** int SD_SETUP(char* filename); //SD card setup function
  97:main.c        **** 
  98:main.c        **** /* Moisture sensor ISR */
  99:main.c        **** CY_ISR (Moisture_ISR_Handler){
 203              		.loc 1 99 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 100:main.c        ****     PANIC_flag = 1;                             // Set flag to indicate water
 213              		.loc 1 100 0
 214 0004 044B     		ldr	r3, .L2
 215 0006 0122     		movs	r2, #1
 216 0008 1A70     		strb	r2, [r3]
 101:main.c        ****     STATE = RESURFACE;                          // Go to surface
 217              		.loc 1 101 0
 218 000a 044B     		ldr	r3, .L2+4
 219 000c 0422     		movs	r2, #4
 220 000e 1A70     		strb	r2, [r3]
 102:main.c        ****     Comp_Stop();                                // Stop comparator for interrupt
 221              		.loc 1 102 0
 222 0010 FFF7FEFF 		bl	Comp_Stop
 103:main.c        **** }
 223              		.loc 1 103 0
 224 0014 80BD     		pop	{r7, pc}
 225              	.L3:
 226 0016 00BF     		.align	2
 227              	.L2:
 228 0018 00000000 		.word	PANIC_flag
 229 001c 00000000 		.word	STATE
 230              		.cfi_endproc
 231              	.LFE63:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 7


 232              		.size	Moisture_ISR_Handler, .-Moisture_ISR_Handler
 233              		.section	.text.Sample_ISR_Handler,"ax",%progbits
 234              		.align	2
 235              		.global	Sample_ISR_Handler
 236              		.thumb
 237              		.thumb_func
 238              		.type	Sample_ISR_Handler, %function
 239              	Sample_ISR_Handler:
 240              	.LFB64:
 104:main.c        **** 
 105:main.c        **** /* Sampling ISR */
 106:main.c        **** CY_ISR (Sample_ISR_Handler){
 241              		.loc 1 106 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246 0000 80B4     		push	{r7}
 247              		.cfi_def_cfa_offset 4
 248              		.cfi_offset 7, -4
 249 0002 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 107:main.c        ****     Sample_Timer_STATUS;                        // Clears interrupt by accessing timer status regis
 251              		.loc 1 107 0
 252 0004 0A4B     		ldr	r3, .L7
 253 0006 1B78     		ldrb	r3, [r3]
 108:main.c        ****     if (STATE == DESCENDING || STATE == LANDED){ 
 254              		.loc 1 108 0
 255 0008 0A4B     		ldr	r3, .L7+4
 256 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 257 000c 022B     		cmp	r3, #2
 258 000e 03D0     		beq	.L5
 259              		.loc 1 108 0 is_stmt 0 discriminator 1
 260 0010 084B     		ldr	r3, .L7+4
 261 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262 0014 032B     		cmp	r3, #3
 263 0016 07D1     		bne	.L4
 264              	.L5:
 109:main.c        ****         collect_flag = 1;
 265              		.loc 1 109 0 is_stmt 1
 266 0018 074B     		ldr	r3, .L7+8
 267 001a 0122     		movs	r2, #1
 268 001c 1A70     		strb	r2, [r3]
 110:main.c        ****         data_time++;
 269              		.loc 1 110 0
 270 001e 074B     		ldr	r3, .L7+12
 271 0020 1B68     		ldr	r3, [r3]
 272 0022 0133     		adds	r3, r3, #1
 273 0024 054A     		ldr	r2, .L7+12
 274 0026 1360     		str	r3, [r2]
 275              	.L4:
 111:main.c        ****     }
 112:main.c        **** }
 276              		.loc 1 112 0
 277 0028 BD46     		mov	sp, r7
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 8


 280 002a 5DF8047B 		ldr	r7, [sp], #4
 281              		.cfi_restore 7
 282              		.cfi_def_cfa_offset 0
 283 002e 7047     		bx	lr
 284              	.L8:
 285              		.align	2
 286              	.L7:
 287 0030 034F0040 		.word	1073762051
 288 0034 00000000 		.word	STATE
 289 0038 00000000 		.word	collect_flag
 290 003c 00000000 		.word	data_time
 291              		.cfi_endproc
 292              	.LFE64:
 293              		.size	Sample_ISR_Handler, .-Sample_ISR_Handler
 294              		.section	.text.Countdown_ISR_Handler,"ax",%progbits
 295              		.align	2
 296              		.global	Countdown_ISR_Handler
 297              		.thumb
 298              		.thumb_func
 299              		.type	Countdown_ISR_Handler, %function
 300              	Countdown_ISR_Handler:
 301              	.LFB65:
 113:main.c        **** 
 114:main.c        **** /* Countdown ISR*/
 115:main.c        **** CY_ISR (Countdown_ISR_Handler){
 302              		.loc 1 115 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 307 0000 80B4     		push	{r7}
 308              		.cfi_def_cfa_offset 4
 309              		.cfi_offset 7, -4
 310 0002 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 116:main.c        ****     Countdown_timer_STATUS;                        // Clears interrupt by accessing timer status re
 312              		.loc 1 116 0
 313 0004 184B     		ldr	r3, .L14
 314 0006 1B78     		ldrb	r3, [r3]
 117:main.c        ****     if (STATE == DESCENDING || STATE == LANDED || STATE == RESURFACE){
 315              		.loc 1 117 0
 316 0008 184B     		ldr	r3, .L14+4
 317 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 000c 022B     		cmp	r3, #2
 319 000e 07D0     		beq	.L10
 320              		.loc 1 117 0 is_stmt 0 discriminator 1
 321 0010 164B     		ldr	r3, .L14+4
 322 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 323 0014 032B     		cmp	r3, #3
 324 0016 03D0     		beq	.L10
 325              		.loc 1 117 0 discriminator 2
 326 0018 144B     		ldr	r3, .L14+4
 327 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 001c 042B     		cmp	r3, #4
 329 001e 02D1     		bne	.L11
 330              	.L10:
 118:main.c        ****         wait_flag = 1;
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 9


 331              		.loc 1 118 0 is_stmt 1
 332 0020 134B     		ldr	r3, .L14+8
 333 0022 0122     		movs	r2, #1
 334 0024 1A70     		strb	r2, [r3]
 335              	.L11:
 119:main.c        ****     }
 120:main.c        ****     #ifdef BT
 121:main.c        ****         if (STATE == TRANSMIT || (STATE == WAIT_TO_LAUNCH && !dataflag)){
 336              		.loc 1 121 0
 337 0026 114B     		ldr	r3, .L14+4
 338 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 339 002a 052B     		cmp	r3, #5
 340 002c 07D0     		beq	.L12
 341              		.loc 1 121 0 is_stmt 0 discriminator 1
 342 002e 0F4B     		ldr	r3, .L14+4
 343 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 344 0032 012B     		cmp	r3, #1
 345 0034 13D1     		bne	.L9
 346              		.loc 1 121 0 discriminator 2
 347 0036 0F4B     		ldr	r3, .L14+12
 348 0038 1B68     		ldr	r3, [r3]
 349 003a 002B     		cmp	r3, #0
 350 003c 0FD1     		bne	.L9
 351              	.L12:
 122:main.c        ****             update_Data++;
 352              		.loc 1 122 0 is_stmt 1
 353 003e 0E4B     		ldr	r3, .L14+16
 354 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 355 0042 0133     		adds	r3, r3, #1
 356 0044 DAB2     		uxtb	r2, r3
 357 0046 0C4B     		ldr	r3, .L14+16
 358 0048 1A70     		strb	r2, [r3]
 123:main.c        ****             if (update_Data == 100){
 359              		.loc 1 123 0
 360 004a 0B4B     		ldr	r3, .L14+16
 361 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 362 004e 642B     		cmp	r3, #100
 363 0050 05D1     		bne	.L9
 124:main.c        ****                 transmit_flag = 1;
 364              		.loc 1 124 0
 365 0052 0A4B     		ldr	r3, .L14+20
 366 0054 0122     		movs	r2, #1
 367 0056 1A60     		str	r2, [r3]
 125:main.c        ****                 update_Data = 0;
 368              		.loc 1 125 0
 369 0058 074B     		ldr	r3, .L14+16
 370 005a 0022     		movs	r2, #0
 371 005c 1A70     		strb	r2, [r3]
 372              	.L9:
 126:main.c        ****             }
 127:main.c        ****         }          
 128:main.c        ****     #endif
 129:main.c        **** }
 373              		.loc 1 129 0
 374 005e BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 10


 377 0060 5DF8047B 		ldr	r7, [sp], #4
 378              		.cfi_restore 7
 379              		.cfi_def_cfa_offset 0
 380 0064 7047     		bx	lr
 381              	.L15:
 382 0066 00BF     		.align	2
 383              	.L14:
 384 0068 6D640040 		.word	1073767533
 385 006c 00000000 		.word	STATE
 386 0070 00000000 		.word	wait_flag
 387 0074 00000000 		.word	dataflag
 388 0078 00000000 		.word	update_Data
 389 007c 00000000 		.word	transmit_flag
 390              		.cfi_endproc
 391              	.LFE65:
 392              		.size	Countdown_ISR_Handler, .-Countdown_ISR_Handler
 393              		.section	.text.rx_interrupt,"ax",%progbits
 394              		.align	2
 395              		.global	rx_interrupt
 396              		.thumb
 397              		.thumb_func
 398              		.type	rx_interrupt, %function
 399              	rx_interrupt:
 400              	.LFB66:
 130:main.c        **** /* Bluetooth UART Rx ISR*/
 131:main.c        **** CY_ISR(rx_interrupt){
 401              		.loc 1 131 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 0000 98B5     		push	{r3, r4, r7, lr}
 406              		.cfi_def_cfa_offset 16
 407              		.cfi_offset 3, -16
 408              		.cfi_offset 4, -12
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 132:main.c        ****     #ifdef BT
 133:main.c        ****     while (UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 413              		.loc 1 133 0
 414 0004 14E0     		b	.L17
 415              	.L18:
 134:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 416              		.loc 1 134 0
 417 0006 0E4B     		ldr	r3, .L19
 418 0008 1C68     		ldr	r4, [r3]
 419 000a 631C     		adds	r3, r4, #1
 420 000c 0C4A     		ldr	r2, .L19
 421 000e 1360     		str	r3, [r2]
 422 0010 FFF7FEFF 		bl	UART_GetChar
 423 0014 0346     		mov	r3, r0
 424 0016 1A46     		mov	r2, r3
 425 0018 0A4B     		ldr	r3, .L19+4
 426 001a 1A55     		strb	r2, [r3, r4]
 135:main.c        ****         if ((msg_count - 3) >= bytes)
 427              		.loc 1 135 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 11


 428 001c 084B     		ldr	r3, .L19
 429 001e 1B68     		ldr	r3, [r3]
 430 0020 DA1E     		subs	r2, r3, #3
 431 0022 094B     		ldr	r3, .L19+8
 432 0024 1B68     		ldr	r3, [r3]
 433 0026 9A42     		cmp	r2, r3
 434 0028 02DB     		blt	.L17
 136:main.c        ****             rxflag = 1;
 435              		.loc 1 136 0
 436 002a 084B     		ldr	r3, .L19+12
 437 002c 0122     		movs	r2, #1
 438 002e 1A60     		str	r2, [r3]
 439              	.L17:
 133:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 440              		.loc 1 133 0
 441 0030 FFF7FEFF 		bl	UART_ReadRxStatus
 442 0034 0346     		mov	r3, r0
 443 0036 03F02003 		and	r3, r3, #32
 444 003a 002B     		cmp	r3, #0
 445 003c E3D1     		bne	.L18
 137:main.c        ****     }
 138:main.c        ****     #endif
 139:main.c        **** }
 446              		.loc 1 139 0
 447 003e 98BD     		pop	{r3, r4, r7, pc}
 448              	.L20:
 449              		.align	2
 450              	.L19:
 451 0040 00000000 		.word	msg_count
 452 0044 00000000 		.word	RxBuffer
 453 0048 00000000 		.word	bytes
 454 004c 00000000 		.word	rxflag
 455              		.cfi_endproc
 456              	.LFE66:
 457              		.size	rx_interrupt, .-rx_interrupt
 458              		.section	.text.temp_interrupt,"ax",%progbits
 459              		.align	2
 460              		.global	temp_interrupt
 461              		.thumb
 462              		.thumb_func
 463              		.type	temp_interrupt, %function
 464              	temp_interrupt:
 465              	.LFB67:
 140:main.c        **** 
 141:main.c        **** CY_ISR(temp_interrupt){
 466              		.loc 1 141 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471 0000 80B4     		push	{r7}
 472              		.cfi_def_cfa_offset 4
 473              		.cfi_offset 7, -4
 474 0002 00AF     		add	r7, sp, #0
 475              		.cfi_def_cfa_register 7
 142:main.c        ****     adjust_timer_STATUS;
 476              		.loc 1 142 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 12


 477 0004 0F4B     		ldr	r3, .L25
 478 0006 1B78     		ldrb	r3, [r3]
 143:main.c        ****     if ((STATE == WAIT_TO_LAUNCH && depth != 0) || STATE == LANDED || STATE == RESURFACE){ 
 479              		.loc 1 143 0
 480 0008 0F4B     		ldr	r3, .L25+4
 481 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482 000c 012B     		cmp	r3, #1
 483 000e 03D1     		bne	.L22
 484              		.loc 1 143 0 is_stmt 0 discriminator 1
 485 0010 0E4B     		ldr	r3, .L25+8
 486 0012 1B68     		ldr	r3, [r3]
 487 0014 002B     		cmp	r3, #0
 488 0016 07D1     		bne	.L23
 489              	.L22:
 490              		.loc 1 143 0 discriminator 3
 491 0018 0B4B     		ldr	r3, .L25+4
 492 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 493 001c 032B     		cmp	r3, #3
 494 001e 03D0     		beq	.L23
 495              		.loc 1 143 0 discriminator 4
 496 0020 094B     		ldr	r3, .L25+4
 497 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 498 0024 042B     		cmp	r3, #4
 499 0026 08D1     		bne	.L21
 500              	.L23:
 144:main.c        ****         wait_flag = 1;
 501              		.loc 1 144 0 is_stmt 1
 502 0028 094B     		ldr	r3, .L25+12
 503 002a 0122     		movs	r2, #1
 504 002c 1A70     		strb	r2, [r3]
 145:main.c        ****         countdown++;
 505              		.loc 1 145 0
 506 002e 094B     		ldr	r3, .L25+16
 507 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 508 0032 0133     		adds	r3, r3, #1
 509 0034 DAB2     		uxtb	r2, r3
 510 0036 074B     		ldr	r3, .L25+16
 511 0038 1A70     		strb	r2, [r3]
 512              	.L21:
 146:main.c        ****     }
 147:main.c        **** }
 513              		.loc 1 147 0
 514 003a BD46     		mov	sp, r7
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 003c 5DF8047B 		ldr	r7, [sp], #4
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0040 7047     		bx	lr
 521              	.L26:
 522 0042 00BF     		.align	2
 523              	.L25:
 524 0044 67650040 		.word	1073767783
 525 0048 00000000 		.word	STATE
 526 004c 00000000 		.word	depth
 527 0050 00000000 		.word	wait_flag
 528 0054 00000000 		.word	countdown
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 13


 529              		.cfi_endproc
 530              	.LFE67:
 531              		.size	temp_interrupt, .-temp_interrupt
 532              		.section	.rodata
 533              		.align	2
 534              	.LC6:
 535 0000 50536F43 		.ascii	"PSoC 5LP: O-Vac\000"
 535      20354C50 
 535      3A204F2D 
 535      56616300 
 536              		.align	2
 537              	.LC7:
 538 0010 49324320 		.ascii	"I2C Working\000"
 538      576F726B 
 538      696E6700 
 539              		.global	__aeabi_i2f
 540              		.global	__aeabi_f2d
 541              		.global	__aeabi_dmul
 542              		.global	__aeabi_d2f
 543              		.global	__aeabi_fadd
 544              		.global	__aeabi_fdiv
 545              		.global	__aeabi_f2iz
 546              		.global	__aeabi_fsub
 547              		.global	__aeabi_fmul
 548              		.align	2
 549              	.LC8:
 550 001c 0A256420 		.ascii	"\012%d seconds remaining\000"
 550      7365636F 
 550      6E647320 
 550      72656D61 
 550      696E696E 
 551 0032 0000     		.align	2
 552              	.LC9:
 553 0034 53544154 		.ascii	"STATE: DESCENT\000"
 553      453A2044 
 553      45534345 
 553      4E5400
 554 0043 00       		.align	2
 555              	.LC10:
 556 0044 53544154 		.ascii	"STATE: LANDED\000"
 556      453A204C 
 556      414E4445 
 556      4400
 557 0052 0000     		.align	2
 558              	.LC11:
 559 0054 53544154 		.ascii	"STATE: WAIT\000"
 559      453A2057 
 559      41495400 
 560              		.align	2
 561              	.LC12:
 562 0060 54696C74 		.ascii	"Tilted\000"
 562      656400
 563 0067 00       		.align	2
 564              	.LC13:
 565 0068 53544154 		.ascii	"STATE: RESURFACING\000"
 565      453A2052 
 565      45535552 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 14


 565      46414349 
 565      4E4700
 566 007b 00       		.align	2
 567              	.LC14:
 568 007c 57415445 		.ascii	"WATER DETECTED\000"
 568      52204445 
 568      54454354 
 568      454400
 569 008b 00       		.align	2
 570              	.LC15:
 571 008c 5452414E 		.ascii	"TRANSMIT\000"
 571      534D4954 
 571      00
 572 0095 000000   		.align	2
 573              	.LC0:
 574 0098 53595354 		.ascii	"SYSTEM_CHECK\000"
 574      454D5F43 
 574      4845434B 
 574      00
 575 00a5 00       		.space	1
 576 00a6 0000     		.align	2
 577              	.LC1:
 578 00a8 0A535441 		.ascii	"\012STATE: DESCENDING\012\000"
 578      54453A20 
 578      44455343 
 578      454E4449 
 578      4E470A00 
 579              		.align	2
 580              	.LC2:
 581 00bc 53544154 		.ascii	"STATE: LANDED\012\000"
 581      453A204C 
 581      414E4445 
 581      440A00
 582 00cb 00       		.align	2
 583              	.LC3:
 584 00cc 53544154 		.ascii	"STATE: VACUUMING\012\000"
 584      453A2056 
 584      41435555 
 584      4D494E47 
 584      0A00
 585 00de 0000     		.align	2
 586              	.LC4:
 587 00e0 53544154 		.ascii	"STATE: RESURFACE\012\000"
 587      453A2052 
 587      45535552 
 587      46414345 
 587      0A00
 588 00f2 0000     		.align	2
 589              	.LC5:
 590 00f4 53544154 		.ascii	"STATE: TRANSMIT\012\000"
 590      453A2054 
 590      52414E53 
 590      4D49540A 
 590      00
 591              		.section	.text.main,"ax",%progbits
 592              		.align	2
 593              		.global	main
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 15


 594              		.thumb
 595              		.thumb_func
 596              		.type	main, %function
 597              	main:
 598              	.LFB68:
 148:main.c        **** 
 149:main.c        **** int main()
 150:main.c        **** {
 599              		.loc 1 150 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 296
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603 0000 B0B5     		push	{r4, r5, r7, lr}
 604              		.cfi_def_cfa_offset 16
 605              		.cfi_offset 4, -16
 606              		.cfi_offset 5, -12
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 CCB0     		sub	sp, sp, #304
 610              		.cfi_def_cfa_offset 320
 611 0004 02AF     		add	r7, sp, #8
 612              		.cfi_def_cfa 7, 312
 151:main.c        ****     int num = 0, decimals = 0;                                       // ADC Voltage conversion plac
 613              		.loc 1 151 0
 614 0006 0023     		movs	r3, #0
 615 0008 C7F81831 		str	r3, [r7, #280]
 616 000c 0023     		movs	r3, #0
 617 000e C7F81431 		str	r3, [r7, #276]
 152:main.c        ****     float voltage = 0, temp = 0, output = 0, pressure_avg = 0;       // ADC Voltage conversion vari
 618              		.loc 1 152 0
 619 0012 4FF00003 		mov	r3, #0
 620 0016 C7F81031 		str	r3, [r7, #272]	@ float
 621 001a 4FF00003 		mov	r3, #0
 622 001e C7F80C31 		str	r3, [r7, #268]	@ float
 623 0022 4FF00003 		mov	r3, #0
 624 0026 C7F80831 		str	r3, [r7, #264]	@ float
 625 002a 4FF00003 		mov	r3, #0
 626 002e C7F82431 		str	r3, [r7, #292]	@ float
 153:main.c        ****     char buf[50], tempbuf[20] = {}, curState[14] = "SYSTEM_CHECK";  // buffers, UART and initial st
 627              		.loc 1 153 0
 628 0032 07F1B803 		add	r3, r7, #184
 629 0036 0022     		movs	r2, #0
 630 0038 1A60     		str	r2, [r3]
 631 003a 0433     		adds	r3, r3, #4
 632 003c 0022     		movs	r2, #0
 633 003e 1A60     		str	r2, [r3]
 634 0040 0433     		adds	r3, r3, #4
 635 0042 0022     		movs	r2, #0
 636 0044 1A60     		str	r2, [r3]
 637 0046 0433     		adds	r3, r3, #4
 638 0048 0022     		movs	r2, #0
 639 004a 1A60     		str	r2, [r3]
 640 004c 0433     		adds	r3, r3, #4
 641 004e 0022     		movs	r2, #0
 642 0050 1A60     		str	r2, [r3]
 643 0052 0433     		adds	r3, r3, #4
 644 0054 BC4B     		ldr	r3, .L76+8
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 16


 645 0056 07F1A804 		add	r4, r7, #168
 646 005a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 647 005c 07C4     		stmia	r4!, {r0, r1, r2}
 648 005e 2370     		strb	r3, [r4]
 649 0060 0023     		movs	r3, #0
 650 0062 87F8B530 		strb	r3, [r7, #181]
 154:main.c        ****     char descendbuf[DESCENDING_LEN] = STATE_DESCENDING;             // buffers for transmitting sta
 651              		.loc 1 154 0
 652 0066 B94B     		ldr	r3, .L76+12
 653 0068 07F19404 		add	r4, r7, #148
 654 006c 1D46     		mov	r5, r3
 655 006e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 656 0070 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 657 0072 2B68     		ldr	r3, [r5]
 658 0074 1A46     		mov	r2, r3	@ movhi
 659 0076 2280     		strh	r2, [r4]	@ movhi
 660 0078 0234     		adds	r4, r4, #2
 661 007a 1B0C     		lsrs	r3, r3, #16
 662 007c 2370     		strb	r3, [r4]
 155:main.c        ****     char landedbuf[LANDED_LEN] = STATE_LANDED;              
 663              		.loc 1 155 0
 664 007e B44B     		ldr	r3, .L76+16
 665 0080 07F18404 		add	r4, r7, #132
 666 0084 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 667 0086 07C4     		stmia	r4!, {r0, r1, r2}
 668 0088 2380     		strh	r3, [r4]	@ movhi
 156:main.c        ****     char vacuumbuf[VACUUM_LEN] = STATE_VACUUM;
 669              		.loc 1 156 0
 670 008a B24B     		ldr	r3, .L76+20
 671 008c 07F17004 		add	r4, r7, #112
 672 0090 1D46     		mov	r5, r3
 673 0092 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 674 0094 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 675 0096 2B68     		ldr	r3, [r5]
 676 0098 2370     		strb	r3, [r4]
 157:main.c        ****     char resurfbuf[RESURFACE_LEN] = STATE_RESURFACE;
 677              		.loc 1 157 0
 678 009a AF4B     		ldr	r3, .L76+24
 679 009c 07F15C04 		add	r4, r7, #92
 680 00a0 1D46     		mov	r5, r3
 681 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 682 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 683 00a6 2B68     		ldr	r3, [r5]
 684 00a8 2370     		strb	r3, [r4]
 158:main.c        ****     char transbuf[TRANSMIT_LEN] = STATE_TRANSMIT;
 685              		.loc 1 158 0
 686 00aa AC4B     		ldr	r3, .L76+28
 687 00ac 07F14C04 		add	r4, r7, #76
 688 00b0 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 689 00b2 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 159:main.c        ****     int stateMsgCount = 0, pulse = 0;
 690              		.loc 1 159 0
 691 00b6 0023     		movs	r3, #0
 692 00b8 C7F82031 		str	r3, [r7, #288]
 693 00bc 0023     		movs	r3, #0
 694 00be C7F81C31 		str	r3, [r7, #284]
 160:main.c        ****     
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 17


 161:main.c        ****     int16_t ax, ay, az, i;
 162:main.c        ****     int16_t gx, gy, gz;
 163:main.c        ****     int16_t z_offset = 0;
 695              		.loc 1 163 0
 696 00c2 0023     		movs	r3, #0
 697 00c4 A7F80631 		strh	r3, [r7, #262]	@ movhi
 164:main.c        ****     int tens = 0, ones = 0;                     // digit place variables for message len of bluetoo
 698              		.loc 1 164 0
 699 00c8 0023     		movs	r3, #0
 700 00ca 3B64     		str	r3, [r7, #64]
 701 00cc 0023     		movs	r3, #0
 702 00ce C7F80031 		str	r3, [r7, #256]
 165:main.c        ****     
 166:main.c        ****     /* Start the components */
 167:main.c        ****     CYGlobalIntEnable;                          // enable global interrupts
 703              		.loc 1 167 0
 704              	@ 167 "main.c" 1
 705 00d2 62B6     		CPSIE   i
 706              	@ 0 "" 2
 168:main.c        ****     I2C_Master_Start(); 
 707              		.loc 1 168 0
 708              		.thumb
 709 00d4 FFF7FEFF 		bl	I2C_Master_Start
 169:main.c        ****     ADC_Start();
 710              		.loc 1 169 0
 711 00d8 FFF7FEFF 		bl	ADC_Start
 170:main.c        ****     Sample_Timer_Start();                       // start timer module
 712              		.loc 1 170 0
 713 00dc FFF7FEFF 		bl	Sample_Timer_Start
 171:main.c        ****     Sample_ISR_StartEx(Sample_ISR_Handler);     // reference ISR function
 714              		.loc 1 171 0
 715 00e0 9F48     		ldr	r0, .L76+32
 716 00e2 FFF7FEFF 		bl	Sample_ISR_StartEx
 172:main.c        ****     rx_interrupt_StartEx(rx_interrupt);
 717              		.loc 1 172 0
 718 00e6 9F48     		ldr	r0, .L76+36
 719 00e8 FFF7FEFF 		bl	rx_interrupt_StartEx
 173:main.c        ****     //moisture_isr_StartEx(Moisture_ISR_Handler); // moisture isr start
 174:main.c        ****     //Comp_Start();                               // comparator for moisture start
 175:main.c        ****     UART_Start();
 720              		.loc 1 175 0
 721 00ec FFF7FEFF 		bl	UART_Start
 176:main.c        ****     
 177:main.c        ****     
 178:main.c        ****     #ifdef LCD
 179:main.c        ****         LiquidCrystal_I2C_init(Addr,16,2,0);        // initialize I2C communication with LCD
 722              		.loc 1 179 0
 723 00f0 9D4B     		ldr	r3, .L76+40
 724 00f2 1B68     		ldr	r3, [r3]
 725 00f4 DBB2     		uxtb	r3, r3
 726 00f6 1846     		mov	r0, r3
 727 00f8 1021     		movs	r1, #16
 728 00fa 0222     		movs	r2, #2
 729 00fc 0023     		movs	r3, #0
 730 00fe FFF7FEFF 		bl	LiquidCrystal_I2C_init
 180:main.c        ****         begin(); 
 731              		.loc 1 180 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 18


 732 0102 FFF7FEFF 		bl	begin
 181:main.c        ****     
 182:main.c        ****     #endif
 183:main.c        ****    
 184:main.c        ****     /* initialize MPU6050 */
 185:main.c        ****     #ifdef MPU6050
 186:main.c        ****         MPU6050_init();    
 733              		.loc 1 186 0
 734 0106 FFF7FEFF 		bl	MPU6050_init
 187:main.c        **** 	    MPU6050_initialize(); 
 735              		.loc 1 187 0
 736 010a FFF7FEFF 		bl	MPU6050_initialize
 188:main.c        ****     #endif
 189:main.c        ****         
 190:main.c        ****     #ifdef LCD
 191:main.c        ****         /* Startup Display */
 192:main.c        ****         LCD_print("PSoC 5LP: O-Vac");
 737              		.loc 1 192 0
 738 010e 9748     		ldr	r0, .L76+44
 739 0110 FFF7FEFF 		bl	LCD_print
 193:main.c        ****         setCursor(0,1);
 740              		.loc 1 193 0
 741 0114 0020     		movs	r0, #0
 742 0116 0121     		movs	r1, #1
 743 0118 FFF7FEFF 		bl	setCursor
 194:main.c        ****         LCD_print("I2C Working");
 744              		.loc 1 194 0
 745 011c 9448     		ldr	r0, .L76+48
 746 011e FFF7FEFF 		bl	LCD_print
 195:main.c        ****         
 196:main.c        ****         CyDelay(1000u);   
 747              		.loc 1 196 0
 748 0122 4FF47A70 		mov	r0, #1000
 749 0126 FFF7FEFF 		bl	CyDelay
 197:main.c        ****         clear();
 750              		.loc 1 197 0
 751 012a FFF7FEFF 		bl	clear
 198:main.c        ****     #endif
 199:main.c        ****     
 200:main.c        ****     /* Start the ADC conversion */
 201:main.c        ****     ADC_StartConvert();
 752              		.loc 1 201 0
 753 012e FFF7FEFF 		bl	ADC_StartConvert
 202:main.c        **** 
 203:main.c        ****     /* Start SD card*/
 204:main.c        ****     #ifdef SD
 205:main.c        ****         int SD_Result = SD_SETUP(file); 
 206:main.c        ****         
 207:main.c        ****     #endif
 208:main.c        ****     
 209:main.c        ****     #ifdef LCD
 210:main.c        ****         /* Display the current State */
 211:main.c        ****         setCursor(0,0);    
 754              		.loc 1 211 0
 755 0132 0020     		movs	r0, #0
 756 0134 0021     		movs	r1, #0
 757 0136 FFF7FEFF 		bl	setCursor
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 19


 212:main.c        ****         LCD_print(curState);
 758              		.loc 1 212 0
 759 013a 07F1A803 		add	r3, r7, #168
 760 013e 1846     		mov	r0, r3
 761 0140 FFF7FEFF 		bl	LCD_print
 213:main.c        ****     #endif
 214:main.c        ****     STATE = WAIT_TO_LAUNCH;
 762              		.loc 1 214 0
 763 0144 8B4B     		ldr	r3, .L76+52
 764 0146 0122     		movs	r2, #1
 765 0148 1A70     		strb	r2, [r3]
 215:main.c        ****     
 216:main.c        ****     Countdown_timer_Start();
 766              		.loc 1 216 0
 767 014a FFF7FEFF 		bl	Countdown_timer_Start
 217:main.c        ****     adjust_timer_Start();
 768              		.loc 1 217 0
 769 014e FFF7FEFF 		bl	adjust_timer_Start
 218:main.c        ****     countdown_StartEx(Countdown_ISR_Handler);
 770              		.loc 1 218 0
 771 0152 8948     		ldr	r0, .L76+56
 772 0154 FFF7FEFF 		bl	countdown_StartEx
 219:main.c        ****     temp_isr_StartEx(temp_interrupt);
 773              		.loc 1 219 0
 774 0158 8848     		ldr	r0, .L76+60
 775 015a FFF7FEFF 		bl	temp_isr_StartEx
 776              	.L74:
 777              	.LBB2:
 220:main.c        ****    
 221:main.c        ****     
 222:main.c        ****     for(;;)
 223:main.c        ****     {
 224:main.c        ****         
 225:main.c        ****         if(ADC_IsEndConversion(ADC_RETURN_STATUS))
 778              		.loc 1 225 0
 779 015e 0120     		movs	r0, #1
 780 0160 FFF7FEFF 		bl	ADC_IsEndConversion
 781 0164 0346     		mov	r3, r0
 782 0166 002B     		cmp	r3, #0
 783 0168 00F08580 		beq	.L28
 226:main.c        ****         {
 227:main.c        ****             output = ADC_GetResult32();
 784              		.loc 1 227 0
 785 016c FFF7FEFF 		bl	ADC_GetResult32
 786 0170 0346     		mov	r3, r0
 787 0172 1846     		mov	r0, r3
 788 0174 FFF7FEFF 		bl	__aeabi_i2f
 789 0178 0346     		mov	r3, r0
 790 017a C7F80831 		str	r3, [r7, #264]	@ float
 228:main.c        **** 
 229:main.c        ****             voltage = output * (3.32 / 4096);
 791              		.loc 1 229 0
 792 017e D7F80801 		ldr	r0, [r7, #264]	@ float
 793 0182 FFF7FEFF 		bl	__aeabi_f2d
 794 0186 0246     		mov	r2, r0
 795 0188 0B46     		mov	r3, r1
 796 018a 1046     		mov	r0, r2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 20


 797 018c 1946     		mov	r1, r3
 798 018e 6CA3     		adr	r3, .L76
 799 0190 D3E90023 		ldrd	r2, [r3]
 800 0194 FFF7FEFF 		bl	__aeabi_dmul
 801 0198 0246     		mov	r2, r0
 802 019a 0B46     		mov	r3, r1
 803 019c 1046     		mov	r0, r2
 804 019e 1946     		mov	r1, r3
 805 01a0 FFF7FEFF 		bl	__aeabi_d2f
 806 01a4 0346     		mov	r3, r0
 807 01a6 C7F81031 		str	r3, [r7, #272]	@ float
 230:main.c        ****             if(wait_flag == 1){
 808              		.loc 1 230 0
 809 01aa 754B     		ldr	r3, .L76+64
 810 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 811 01ae 002B     		cmp	r3, #0
 812 01b0 61D0     		beq	.L28
 231:main.c        ****                 if (press_id < MA_WINDOW){
 813              		.loc 1 231 0
 814 01b2 744B     		ldr	r3, .L76+68
 815 01b4 1B68     		ldr	r3, [r3]
 816 01b6 0E2B     		cmp	r3, #14
 817 01b8 0BDC     		bgt	.L29
 232:main.c        ****                     pressure_sum += voltage;     
 818              		.loc 1 232 0
 819 01ba 734B     		ldr	r3, .L76+72
 820 01bc 1B68     		ldr	r3, [r3]	@ float
 821 01be 1846     		mov	r0, r3
 822 01c0 D7F81011 		ldr	r1, [r7, #272]	@ float
 823 01c4 FFF7FEFF 		bl	__aeabi_fadd
 824 01c8 0346     		mov	r3, r0
 825 01ca 1A46     		mov	r2, r3
 826 01cc 6E4B     		ldr	r3, .L76+72
 827 01ce 1A60     		str	r2, [r3]	@ float
 828 01d0 49E0     		b	.L30
 829              	.L29:
 233:main.c        ****                 }
 234:main.c        ****                 else if(press_id == MA_WINDOW){
 830              		.loc 1 234 0
 831 01d2 6C4B     		ldr	r3, .L76+68
 832 01d4 1B68     		ldr	r3, [r3]
 833 01d6 0F2B     		cmp	r3, #15
 834 01d8 14D1     		bne	.L31
 235:main.c        ****                     pressure_sum += voltage;
 835              		.loc 1 235 0
 836 01da 6B4B     		ldr	r3, .L76+72
 837 01dc 1B68     		ldr	r3, [r3]	@ float
 838 01de 1846     		mov	r0, r3
 839 01e0 D7F81011 		ldr	r1, [r7, #272]	@ float
 840 01e4 FFF7FEFF 		bl	__aeabi_fadd
 841 01e8 0346     		mov	r3, r0
 842 01ea 1A46     		mov	r2, r3
 843 01ec 664B     		ldr	r3, .L76+72
 844 01ee 1A60     		str	r2, [r3]	@ float
 236:main.c        ****                     pressure_avg = pressure_sum/MA_WINDOW;                            // compute ba
 845              		.loc 1 236 0
 846 01f0 654B     		ldr	r3, .L76+72
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 21


 847 01f2 1B68     		ldr	r3, [r3]	@ float
 848 01f4 1846     		mov	r0, r3
 849 01f6 6549     		ldr	r1, .L76+76
 850 01f8 FFF7FEFF 		bl	__aeabi_fdiv
 851 01fc 0346     		mov	r3, r0
 852 01fe C7F82431 		str	r3, [r7, #292]	@ float
 853 0202 30E0     		b	.L30
 854              	.L31:
 855              	.LBB3:
 237:main.c        ****                 }
 238:main.c        ****                 else{
 239:main.c        ****                     pressure_avg = ComputeMA(pressure_avg, MA_WINDOW, voltage);
 856              		.loc 1 239 0
 857 0204 D7F82401 		ldr	r0, [r7, #292]	@ float
 858 0208 0F21     		movs	r1, #15
 859 020a D7F81021 		ldr	r2, [r7, #272]	@ float
 860 020e FFF7FEFF 		bl	ComputeMA
 861 0212 C7F82401 		str	r0, [r7, #292]	@ float
 240:main.c        ****                     num = pressure_avg;
 862              		.loc 1 240 0
 863 0216 D7F82401 		ldr	r0, [r7, #292]	@ float
 864 021a FFF7FEFF 		bl	__aeabi_f2iz
 865 021e 0346     		mov	r3, r0
 866 0220 C7F81831 		str	r3, [r7, #280]
 241:main.c        ****                     temp = pressure_avg - num;
 867              		.loc 1 241 0
 868 0224 D7F81801 		ldr	r0, [r7, #280]
 869 0228 FFF7FEFF 		bl	__aeabi_i2f
 870 022c 0346     		mov	r3, r0
 871 022e D7F82401 		ldr	r0, [r7, #292]	@ float
 872 0232 1946     		mov	r1, r3
 873 0234 FFF7FEFF 		bl	__aeabi_fsub
 874 0238 0346     		mov	r3, r0
 875 023a C7F80C31 		str	r3, [r7, #268]	@ float
 242:main.c        ****                     decimals = temp * 10000;
 876              		.loc 1 242 0
 877 023e D7F80C01 		ldr	r0, [r7, #268]	@ float
 878 0242 5349     		ldr	r1, .L76+80
 879 0244 FFF7FEFF 		bl	__aeabi_fmul
 880 0248 0346     		mov	r3, r0
 881 024a 1846     		mov	r0, r3
 882 024c FFF7FEFF 		bl	__aeabi_f2iz
 883 0250 0346     		mov	r3, r0
 884 0252 C7F81431 		str	r3, [r7, #276]
 243:main.c        ****                     char sdbuf[60] = {};
 885              		.loc 1 243 0
 886 0256 3B46     		mov	r3, r7
 887 0258 1A46     		mov	r2, r3
 888 025a 3C23     		movs	r3, #60
 889 025c 1046     		mov	r0, r2
 890 025e 0021     		movs	r1, #0
 891 0260 1A46     		mov	r2, r3
 892 0262 FFF7FEFF 		bl	memset
 893              	.L30:
 894              	.LBE3:
 244:main.c        ****                     #ifdef SD
 245:main.c        ****                         sprintf(sdbuf, "pressure: %d.%04d, %d\n", num, decimals, (int16)output); //
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 22


 246:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));                           
 247:main.c        ****                     #endif 
 248:main.c        ****                 }
 249:main.c        ****                 wait_flag = 0;
 895              		.loc 1 249 0
 896 0266 464B     		ldr	r3, .L76+64
 897 0268 0022     		movs	r2, #0
 898 026a 1A70     		strb	r2, [r3]
 250:main.c        ****                 press_id++;
 899              		.loc 1 250 0
 900 026c 454B     		ldr	r3, .L76+68
 901 026e 1B68     		ldr	r3, [r3]
 902 0270 0133     		adds	r3, r3, #1
 903 0272 444A     		ldr	r2, .L76+68
 904 0274 1360     		str	r3, [r2]
 905              	.L28:
 251:main.c        ****             }
 252:main.c        ****             
 253:main.c        ****         }
 254:main.c        ****         
 255:main.c        ****     /* Bluetooth message response, after 2 bytes received, retrieve message from those 2 bytes. Onc
 256:main.c        ****      * has arrived, process it. */
 257:main.c        ****     #ifdef BT
 258:main.c        ****         if (msg_count >= 2){
 906              		.loc 1 258 0
 907 0276 474B     		ldr	r3, .L76+84
 908 0278 1B68     		ldr	r3, [r3]
 909 027a 012B     		cmp	r3, #1
 910 027c 13DD     		ble	.L32
 259:main.c        ****             tens = RxBuffer[0] - 48;
 911              		.loc 1 259 0
 912 027e 464B     		ldr	r3, .L76+88
 913 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 914 0282 303B     		subs	r3, r3, #48
 915 0284 3B64     		str	r3, [r7, #64]
 260:main.c        ****             ones = RxBuffer[1] - 48;
 916              		.loc 1 260 0
 917 0286 444B     		ldr	r3, .L76+88
 918 0288 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 919 028a 303B     		subs	r3, r3, #48
 920 028c C7F80031 		str	r3, [r7, #256]
 261:main.c        ****             bytes = (tens * 10) + ones;
 921              		.loc 1 261 0
 922 0290 3A6C     		ldr	r2, [r7, #64]
 923 0292 1346     		mov	r3, r2
 924 0294 9B00     		lsls	r3, r3, #2
 925 0296 1344     		add	r3, r3, r2
 926 0298 5B00     		lsls	r3, r3, #1
 927 029a 1A46     		mov	r2, r3
 928 029c D7F80031 		ldr	r3, [r7, #256]
 929 02a0 1344     		add	r3, r3, r2
 930 02a2 3E4A     		ldr	r2, .L76+92
 931 02a4 1360     		str	r3, [r2]
 932              	.L32:
 262:main.c        ****         } 
 263:main.c        ****         
 264:main.c        ****         if(rxflag) {
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 23


 933              		.loc 1 264 0
 934 02a6 3E4B     		ldr	r3, .L76+96
 935 02a8 1B68     		ldr	r3, [r3]
 936 02aa 002B     		cmp	r3, #0
 937 02ac 2DD0     		beq	.L33
 265:main.c        ****             uint8_to_char(RxBuffer, &tempbuf[0], 20);
 938              		.loc 1 265 0
 939 02ae 07F1B803 		add	r3, r7, #184
 940 02b2 3948     		ldr	r0, .L76+88
 941 02b4 1946     		mov	r1, r3
 942 02b6 1422     		movs	r2, #20
 943 02b8 FFF7FEFF 		bl	uint8_to_char
 266:main.c        ****             depth = BT_Process(&tempbuf[3], &STATE, bytes, &dataflag, &reset);
 944              		.loc 1 266 0
 945 02bc 374B     		ldr	r3, .L76+92
 946 02be 1A68     		ldr	r2, [r3]
 947 02c0 07F1B803 		add	r3, r7, #184
 948 02c4 D91C     		adds	r1, r3, #3
 949 02c6 374B     		ldr	r3, .L76+100
 950 02c8 0093     		str	r3, [sp]
 951 02ca 0846     		mov	r0, r1
 952 02cc 2949     		ldr	r1, .L76+52
 953 02ce 364B     		ldr	r3, .L76+104
 954 02d0 FFF7FEFF 		bl	BT_Process
 955 02d4 0246     		mov	r2, r0
 956 02d6 354B     		ldr	r3, .L76+108
 957 02d8 1A60     		str	r2, [r3]
 267:main.c        ****             
 268:main.c        ****             msg_count = 0; bytes = 0;
 958              		.loc 1 268 0
 959 02da 2E4B     		ldr	r3, .L76+84
 960 02dc 0022     		movs	r2, #0
 961 02de 1A60     		str	r2, [r3]
 962 02e0 2E4B     		ldr	r3, .L76+92
 963 02e2 0022     		movs	r2, #0
 964 02e4 1A60     		str	r2, [r3]
 269:main.c        ****             memset(RxBuffer, 0, BUFFER_LEN);
 965              		.loc 1 269 0
 966 02e6 2C48     		ldr	r0, .L76+88
 967 02e8 0021     		movs	r1, #0
 968 02ea 4022     		movs	r2, #64
 969 02ec FFF7FEFF 		bl	memset
 270:main.c        ****             memset(tempbuf, 0, 20);
 970              		.loc 1 270 0
 971 02f0 07F1B803 		add	r3, r7, #184
 972 02f4 1846     		mov	r0, r3
 973 02f6 0021     		movs	r1, #0
 974 02f8 1422     		movs	r2, #20
 975 02fa FFF7FEFF 		bl	memset
 271:main.c        ****             countdown = 0;
 976              		.loc 1 271 0
 977 02fe 2C4B     		ldr	r3, .L76+112
 978 0300 0022     		movs	r2, #0
 979 0302 1A70     		strb	r2, [r3]
 272:main.c        ****             rxflag = 0;
 980              		.loc 1 272 0
 981 0304 264B     		ldr	r3, .L76+96
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 24


 982 0306 0022     		movs	r2, #0
 983 0308 1A60     		str	r2, [r3]
 984              	.L33:
 273:main.c        ****         }
 274:main.c        ****     #endif
 275:main.c        ****     
 276:main.c        ****         /* Get Z-Acceleration */
 277:main.c        **** 
 278:main.c        ****         az = MPU6050_getAccelerationZ();
 985              		.loc 1 278 0
 986 030a FFF7FEFF 		bl	MPU6050_getAccelerationZ
 987 030e 0346     		mov	r3, r0
 988 0310 A7F8FE30 		strh	r3, [r7, #254]	@ movhi
 279:main.c        **** 
 280:main.c        ****         int t = 1;
 989              		.loc 1 280 0
 990 0314 0123     		movs	r3, #1
 991 0316 FB63     		str	r3, [r7, #60]
 281:main.c        ****         /* State Machine */
 282:main.c        ****         switch (STATE){
 992              		.loc 1 282 0
 993 0318 164B     		ldr	r3, .L76+52
 994 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 995 031c 013B     		subs	r3, r3, #1
 996 031e 042B     		cmp	r3, #4
 997 0320 00F2F183 		bhi	.L75
 998 0324 01A2     		adr	r2, .L36
 999 0326 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1000 032a 00BF     		.p2align 2
 1001              	.L36:
 1002 032c B5030000 		.word	.L35+1
 1003 0330 2B050000 		.word	.L37+1
 1004 0334 05080000 		.word	.L38+1
 1005 0338 590A0000 		.word	.L39+1
 1006 033c CD0A0000 		.word	.L40+1
 1007              		.p2align 1
 1008              	.L77:
 1009              		.align	3
 1010              	.L76:
 1011 0340 8FC2F528 		.word	687194767
 1012 0344 5C8F4A3F 		.word	1061850972
 1013 0348 98000000 		.word	.LC0
 1014 034c A8000000 		.word	.LC1
 1015 0350 BC000000 		.word	.LC2
 1016 0354 CC000000 		.word	.LC3
 1017 0358 E0000000 		.word	.LC4
 1018 035c F4000000 		.word	.LC5
 1019 0360 00000000 		.word	Sample_ISR_Handler
 1020 0364 00000000 		.word	rx_interrupt
 1021 0368 00000000 		.word	Addr
 1022 036c 00000000 		.word	.LC6
 1023 0370 10000000 		.word	.LC7
 1024 0374 00000000 		.word	STATE
 1025 0378 00000000 		.word	Countdown_ISR_Handler
 1026 037c 00000000 		.word	temp_interrupt
 1027 0380 00000000 		.word	wait_flag
 1028 0384 00000000 		.word	press_id
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 25


 1029 0388 00000000 		.word	pressure_sum
 1030 038c 00007041 		.word	1097859072
 1031 0390 00401C46 		.word	1176256512
 1032 0394 00000000 		.word	msg_count
 1033 0398 00000000 		.word	RxBuffer
 1034 039c 00000000 		.word	bytes
 1035 03a0 00000000 		.word	rxflag
 1036 03a4 00000000 		.word	reset
 1037 03a8 00000000 		.word	dataflag
 1038 03ac 00000000 		.word	depth
 1039 03b0 00000000 		.word	countdown
 1040              	.L35:
 283:main.c        ****     
 284:main.c        ****             case WAIT_TO_LAUNCH:
 285:main.c        ****                 if (reset){
 1041              		.loc 1 285 0
 1042 03b4 A34B     		ldr	r3, .L78
 1043 03b6 1B68     		ldr	r3, [r3]
 1044 03b8 002B     		cmp	r3, #0
 1045 03ba 26D0     		beq	.L41
 286:main.c        ****                     id = 1;                                // Interrupt count.
 1046              		.loc 1 286 0
 1047 03bc A24B     		ldr	r3, .L78+4
 1048 03be 0122     		movs	r2, #1
 1049 03c0 1A60     		str	r2, [r3]
 287:main.c        ****                     data_time = 0;                        // data point num
 1050              		.loc 1 287 0
 1051 03c2 A24B     		ldr	r3, .L78+8
 1052 03c4 0022     		movs	r2, #0
 1053 03c6 1A60     		str	r2, [r3]
 288:main.c        ****                     sum = 0;                               // Sum of accelerometer values. 
 1054              		.loc 1 288 0
 1055 03c8 A14B     		ldr	r3, .L78+12
 1056 03ca 0022     		movs	r2, #0
 1057 03cc 1A60     		str	r2, [r3]
 289:main.c        ****                     average = 0;                        // Moving average variable.
 1058              		.loc 1 289 0
 1059 03ce A14B     		ldr	r3, .L78+16
 1060 03d0 0022     		movs	r2, #0
 1061 03d2 1A80     		strh	r2, [r3]	@ movhi
 290:main.c        ****                     collect_flag = 0;                      // flag indicating when to record accele
 1062              		.loc 1 290 0
 1063 03d4 A04B     		ldr	r3, .L78+20
 1064 03d6 0022     		movs	r2, #0
 1065 03d8 1A70     		strb	r2, [r3]
 291:main.c        ****                     wait_flag = 0;                         // flag indicating when to increment int
 1066              		.loc 1 291 0
 1067 03da A04B     		ldr	r3, .L78+24
 1068 03dc 0022     		movs	r2, #0
 1069 03de 1A70     		strb	r2, [r3]
 292:main.c        ****                     PANIC_flag = 0;                        // flag indicating water is present in h
 1070              		.loc 1 292 0
 1071 03e0 9F4B     		ldr	r3, .L78+28
 1072 03e2 0022     		movs	r2, #0
 1073 03e4 1A70     		strb	r2, [r3]
 293:main.c        ****                     //bool first_test = 1;                        // flag indicating first test(lon
 294:main.c        ****                     testnum = 1;
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 26


 1074              		.loc 1 294 0
 1075 03e6 9F4B     		ldr	r3, .L78+32
 1076 03e8 0122     		movs	r2, #1
 1077 03ea 1A70     		strb	r2, [r3]
 295:main.c        ****                     depth = 0; countdown = 0; msg_count = 0; dataflag = 0;
 1078              		.loc 1 295 0
 1079 03ec 9E4B     		ldr	r3, .L78+36
 1080 03ee 0022     		movs	r2, #0
 1081 03f0 1A60     		str	r2, [r3]
 1082 03f2 9E4B     		ldr	r3, .L78+40
 1083 03f4 0022     		movs	r2, #0
 1084 03f6 1A70     		strb	r2, [r3]
 1085 03f8 9D4B     		ldr	r3, .L78+44
 1086 03fa 0022     		movs	r2, #0
 1087 03fc 1A60     		str	r2, [r3]
 1088 03fe 9D4B     		ldr	r3, .L78+48
 1089 0400 0022     		movs	r2, #0
 1090 0402 1A60     		str	r2, [r3]
 296:main.c        ****                     reset = 0;
 1091              		.loc 1 296 0
 1092 0404 8F4B     		ldr	r3, .L78
 1093 0406 0022     		movs	r2, #0
 1094 0408 1A60     		str	r2, [r3]
 1095              	.L41:
 297:main.c        ****                 }
 298:main.c        ****             
 299:main.c        ****                 if (transmit_flag){
 1096              		.loc 1 299 0
 1097 040a 9B4B     		ldr	r3, .L78+52
 1098 040c 1B68     		ldr	r3, [r3]
 1099 040e 002B     		cmp	r3, #0
 1100 0410 0BD0     		beq	.L42
 300:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &tens); // Here, the STATE variable only matte
 1101              		.loc 1 300 0
 1102 0412 07F1B802 		add	r2, r7, #184
 1103 0416 07F14003 		add	r3, r7, #64
 1104 041a 1046     		mov	r0, r2
 1105 041c 9749     		ldr	r1, .L78+56
 1106 041e 0A22     		movs	r2, #10
 1107 0420 FFF7FEFF 		bl	BT_Send
 301:main.c        ****                     transmit_flag = 0;
 1108              		.loc 1 301 0
 1109 0424 944B     		ldr	r3, .L78+52
 1110 0426 0022     		movs	r2, #0
 1111 0428 1A60     		str	r2, [r3]
 1112              	.L42:
 302:main.c        ****                 }
 303:main.c        ****                 // Once depth has been entered, can begin countdown into descending
 304:main.c        ****                 if(wait_flag == 1){
 1113              		.loc 1 304 0
 1114 042a 8C4B     		ldr	r3, .L78+24
 1115 042c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1116 042e 002B     		cmp	r3, #0
 1117 0430 7AD0     		beq	.L43
 305:main.c        ****                     #ifdef BT
 306:main.c        ****                         stateMsgCount = 0;
 1118              		.loc 1 306 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 27


 1119 0432 0023     		movs	r3, #0
 1120 0434 C7F82031 		str	r3, [r7, #288]
 307:main.c        ****                         sprintf(buf, "\n%d seconds remaining", (10 - countdown));
 1121              		.loc 1 307 0
 1122 0438 8C4B     		ldr	r3, .L78+40
 1123 043a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 043c C3F10A03 		rsb	r3, r3, #10
 1125 0440 07F1CC02 		add	r2, r7, #204
 1126 0444 1046     		mov	r0, r2
 1127 0446 8E49     		ldr	r1, .L78+60
 1128 0448 1A46     		mov	r2, r3
 1129 044a FFF7FEFF 		bl	sprintf
 308:main.c        ****                         while (stateMsgCount < 21){
 1130              		.loc 1 308 0
 1131 044e 19E0     		b	.L44
 1132              	.L47:
 309:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1133              		.loc 1 309 0
 1134 0450 11E0     		b	.L45
 1135              	.L46:
 310:main.c        ****                                 UART_PutChar(buf[stateMsgCount++]);
 1136              		.loc 1 310 0
 1137 0452 D7F82031 		ldr	r3, [r7, #288]
 1138 0456 5A1C     		adds	r2, r3, #1
 1139 0458 C7F82021 		str	r2, [r7, #288]
 1140 045c 07F59472 		add	r2, r7, #296
 1141 0460 1344     		add	r3, r3, r2
 1142 0462 13F85C3C 		ldrb	r3, [r3, #-92]	@ zero_extendqisi2
 1143 0466 1846     		mov	r0, r3
 1144 0468 FFF7FEFF 		bl	UART_PutChar
 311:main.c        ****                                 if (stateMsgCount >= 21) break;
 1145              		.loc 1 311 0
 1146 046c D7F82031 		ldr	r3, [r7, #288]
 1147 0470 142B     		cmp	r3, #20
 1148 0472 00DD     		ble	.L45
 1149 0474 06E0     		b	.L44
 1150              	.L45:
 309:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1151              		.loc 1 309 0
 1152 0476 FFF7FEFF 		bl	UART_ReadTxStatus
 1153 047a 0346     		mov	r3, r0
 1154 047c 03F00803 		and	r3, r3, #8
 1155 0480 002B     		cmp	r3, #0
 1156 0482 E6D1     		bne	.L46
 1157              	.L44:
 308:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1158              		.loc 1 308 0
 1159 0484 D7F82031 		ldr	r3, [r7, #288]
 1160 0488 142B     		cmp	r3, #20
 1161 048a E1DD     		ble	.L47
 312:main.c        ****                             }
 313:main.c        ****                         }
 314:main.c        ****                     #endif
 315:main.c        ****                     /* at 10 seconds, change into descending */
 316:main.c        ****                     if(countdown == 10){
 1162              		.loc 1 316 0
 1163 048c 774B     		ldr	r3, .L78+40
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 28


 1164 048e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1165 0490 0A2B     		cmp	r3, #10
 1166 0492 45D1     		bne	.L48
 317:main.c        ****                         descent_time = (((depth / 13) + 3) * 2 * 500);
 1167              		.loc 1 317 0
 1168 0494 744B     		ldr	r3, .L78+36
 1169 0496 1B68     		ldr	r3, [r3]
 1170 0498 7A4A     		ldr	r2, .L78+64
 1171 049a 82FB0312 		smull	r1, r2, r2, r3
 1172 049e 9210     		asrs	r2, r2, #2
 1173 04a0 DB17     		asrs	r3, r3, #31
 1174 04a2 D31A     		subs	r3, r2, r3
 1175 04a4 0333     		adds	r3, r3, #3
 1176 04a6 4FF47A72 		mov	r2, #1000
 1177 04aa 02FB03F3 		mul	r3, r2, r3
 1178 04ae 764A     		ldr	r2, .L78+68
 1179 04b0 1360     		str	r3, [r2]
 318:main.c        ****                         /* descent time takes about 2~3 seconds to go 13 feet, add 3 for extra 10m 
 319:main.c        ****                          * number of ISR calls to get 1 second */ 
 320:main.c        ****                         STATE = DESCENDING;
 1180              		.loc 1 320 0
 1181 04b2 724B     		ldr	r3, .L78+56
 1182 04b4 0222     		movs	r2, #2
 1183 04b6 1A70     		strb	r2, [r3]
 321:main.c        ****                         #ifdef LCD
 322:main.c        ****                             setCursor(0,0);
 1184              		.loc 1 322 0
 1185 04b8 0020     		movs	r0, #0
 1186 04ba 0021     		movs	r1, #0
 1187 04bc FFF7FEFF 		bl	setCursor
 323:main.c        ****                             clear();
 1188              		.loc 1 323 0
 1189 04c0 FFF7FEFF 		bl	clear
 324:main.c        ****                             LCD_print("STATE: DESCENT");
 1190              		.loc 1 324 0
 1191 04c4 7148     		ldr	r0, .L78+72
 1192 04c6 FFF7FEFF 		bl	LCD_print
 325:main.c        ****                         #endif
 326:main.c        ****                         #ifdef BT
 327:main.c        ****                             stateMsgCount = 0;
 1193              		.loc 1 327 0
 1194 04ca 0023     		movs	r3, #0
 1195 04cc C7F82031 		str	r3, [r7, #288]
 328:main.c        ****                             while (stateMsgCount < DESCENDING_LEN){
 1196              		.loc 1 328 0
 1197 04d0 19E0     		b	.L49
 1198              	.L52:
 329:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1199              		.loc 1 329 0
 1200 04d2 11E0     		b	.L50
 1201              	.L51:
 330:main.c        ****                                     UART_PutChar(descendbuf[stateMsgCount++]);
 1202              		.loc 1 330 0
 1203 04d4 D7F82031 		ldr	r3, [r7, #288]
 1204 04d8 5A1C     		adds	r2, r3, #1
 1205 04da C7F82021 		str	r2, [r7, #288]
 1206 04de 07F59472 		add	r2, r7, #296
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 29


 1207 04e2 1344     		add	r3, r3, r2
 1208 04e4 13F8943C 		ldrb	r3, [r3, #-148]	@ zero_extendqisi2
 1209 04e8 1846     		mov	r0, r3
 1210 04ea FFF7FEFF 		bl	UART_PutChar
 331:main.c        ****                                     if (stateMsgCount >= DESCENDING_LEN) break;
 1211              		.loc 1 331 0
 1212 04ee D7F82031 		ldr	r3, [r7, #288]
 1213 04f2 122B     		cmp	r3, #18
 1214 04f4 00DD     		ble	.L50
 1215 04f6 06E0     		b	.L49
 1216              	.L50:
 329:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1217              		.loc 1 329 0
 1218 04f8 FFF7FEFF 		bl	UART_ReadTxStatus
 1219 04fc 0346     		mov	r3, r0
 1220 04fe 03F00803 		and	r3, r3, #8
 1221 0502 002B     		cmp	r3, #0
 1222 0504 E6D1     		bne	.L51
 1223              	.L49:
 328:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1224              		.loc 1 328 0
 1225 0506 D7F82031 		ldr	r3, [r7, #288]
 1226 050a 122B     		cmp	r3, #18
 1227 050c E1DD     		ble	.L52
 332:main.c        ****                                 }
 333:main.c        ****                             }
 334:main.c        ****                         #endif
 335:main.c        ****                         id=0;
 1228              		.loc 1 335 0
 1229 050e 4E4B     		ldr	r3, .L78+4
 1230 0510 0022     		movs	r2, #0
 1231 0512 1A60     		str	r2, [r3]
 336:main.c        ****                         data_time = 0;
 1232              		.loc 1 336 0
 1233 0514 4D4B     		ldr	r3, .L78+8
 1234 0516 0022     		movs	r2, #0
 1235 0518 1A60     		str	r2, [r3]
 337:main.c        ****                         countdown = 0; 
 1236              		.loc 1 337 0
 1237 051a 544B     		ldr	r3, .L78+40
 1238 051c 0022     		movs	r2, #0
 1239 051e 1A70     		strb	r2, [r3]
 1240              	.L48:
 338:main.c        ****                     }
 339:main.c        ****                     wait_flag = 0; 
 1241              		.loc 1 339 0
 1242 0520 4E4B     		ldr	r3, .L78+24
 1243 0522 0022     		movs	r2, #0
 1244 0524 1A70     		strb	r2, [r3]
 340:main.c        ****                 }
 341:main.c        ****                 break;
 1245              		.loc 1 341 0
 1246 0526 EFE2     		b	.L53
 1247              	.L43:
 1248 0528 EEE2     		b	.L53
 1249              	.L37:
 342:main.c        ****                 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 30


 343:main.c        ****             case DESCENDING:
 344:main.c        ****                 MPU6050_getRotation(&gx, &gy, &gz); // gather gyro data
 1250              		.loc 1 344 0
 1251 052a 07F14A01 		add	r1, r7, #74
 1252 052e 07F14802 		add	r2, r7, #72
 1253 0532 07F14603 		add	r3, r7, #70
 1254 0536 0846     		mov	r0, r1
 1255 0538 1146     		mov	r1, r2
 1256 053a 1A46     		mov	r2, r3
 1257 053c FFF7FEFF 		bl	MPU6050_getRotation
 345:main.c        ****                 if(collect_flag == 1){              // Check accelerometer and gyro data
 1258              		.loc 1 345 0
 1259 0540 454B     		ldr	r3, .L78+20
 1260 0542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 0544 002B     		cmp	r3, #0
 1262 0546 00F05C81 		beq	.L54
 346:main.c        ****                     if (id < MA_WINDOW){    
 1263              		.loc 1 346 0
 1264 054a 3F4B     		ldr	r3, .L78+4
 1265 054c 1B68     		ldr	r3, [r3]
 1266 054e 0E2B     		cmp	r3, #14
 1267 0550 29DC     		bgt	.L55
 347:main.c        ****                         sum += az;  
 1268              		.loc 1 347 0
 1269 0552 B7F9FE20 		ldrsh	r2, [r7, #254]
 1270 0556 3E4B     		ldr	r3, .L78+12
 1271 0558 1B68     		ldr	r3, [r3]
 1272 055a 1344     		add	r3, r3, r2
 1273 055c 3C4A     		ldr	r2, .L78+12
 1274 055e 1360     		str	r3, [r2]
 348:main.c        ****                         xsum += gx;
 1275              		.loc 1 348 0
 1276 0560 B7F84A30 		ldrh	r3, [r7, #74]
 1277 0564 1BB2     		sxth	r3, r3
 1278 0566 1846     		mov	r0, r3
 1279 0568 FFF7FEFF 		bl	__aeabi_i2f
 1280 056c 0246     		mov	r2, r0
 1281 056e 484B     		ldr	r3, .L78+76
 1282 0570 1B68     		ldr	r3, [r3]	@ float
 1283 0572 1046     		mov	r0, r2
 1284 0574 1946     		mov	r1, r3
 1285 0576 FFF7FEFF 		bl	__aeabi_fadd
 1286 057a 0346     		mov	r3, r0
 1287 057c 1A46     		mov	r2, r3
 1288 057e 444B     		ldr	r3, .L78+76
 1289 0580 1A60     		str	r2, [r3]	@ float
 349:main.c        ****                         ysum += gy;
 1290              		.loc 1 349 0
 1291 0582 B7F84830 		ldrh	r3, [r7, #72]
 1292 0586 1BB2     		sxth	r3, r3
 1293 0588 1846     		mov	r0, r3
 1294 058a FFF7FEFF 		bl	__aeabi_i2f
 1295 058e 0246     		mov	r2, r0
 1296 0590 404B     		ldr	r3, .L78+80
 1297 0592 1B68     		ldr	r3, [r3]	@ float
 1298 0594 1046     		mov	r0, r2
 1299 0596 1946     		mov	r1, r3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 31


 1300 0598 FFF7FEFF 		bl	__aeabi_fadd
 1301 059c 0346     		mov	r3, r0
 1302 059e 1A46     		mov	r2, r3
 1303 05a0 3C4B     		ldr	r3, .L78+80
 1304 05a2 1A60     		str	r2, [r3]	@ float
 1305 05a4 D9E0     		b	.L56
 1306              	.L55:
 350:main.c        ****                     }
 351:main.c        ****                     else if(id == MA_WINDOW){
 1307              		.loc 1 351 0
 1308 05a6 284B     		ldr	r3, .L78+4
 1309 05a8 1B68     		ldr	r3, [r3]
 1310 05aa 0F2B     		cmp	r3, #15
 1311 05ac 7CD1     		bne	.L57
 352:main.c        ****                         sum += az;
 1312              		.loc 1 352 0
 1313 05ae B7F9FE20 		ldrsh	r2, [r7, #254]
 1314 05b2 274B     		ldr	r3, .L78+12
 1315 05b4 1B68     		ldr	r3, [r3]
 1316 05b6 1344     		add	r3, r3, r2
 1317 05b8 254A     		ldr	r2, .L78+12
 1318 05ba 1360     		str	r3, [r2]
 353:main.c        ****                         xsum += gx;
 1319              		.loc 1 353 0
 1320 05bc B7F84A30 		ldrh	r3, [r7, #74]
 1321 05c0 1BB2     		sxth	r3, r3
 1322 05c2 1846     		mov	r0, r3
 1323 05c4 FFF7FEFF 		bl	__aeabi_i2f
 1324 05c8 0246     		mov	r2, r0
 1325 05ca 314B     		ldr	r3, .L78+76
 1326 05cc 1B68     		ldr	r3, [r3]	@ float
 1327 05ce 1046     		mov	r0, r2
 1328 05d0 1946     		mov	r1, r3
 1329 05d2 FFF7FEFF 		bl	__aeabi_fadd
 1330 05d6 0346     		mov	r3, r0
 1331 05d8 1A46     		mov	r2, r3
 1332 05da 2D4B     		ldr	r3, .L78+76
 1333 05dc 1A60     		str	r2, [r3]	@ float
 354:main.c        ****                         ysum += gy;
 1334              		.loc 1 354 0
 1335 05de B7F84830 		ldrh	r3, [r7, #72]
 1336 05e2 1BB2     		sxth	r3, r3
 1337 05e4 1846     		mov	r0, r3
 1338 05e6 FFF7FEFF 		bl	__aeabi_i2f
 1339 05ea 0246     		mov	r2, r0
 1340 05ec 294B     		ldr	r3, .L78+80
 1341 05ee 1B68     		ldr	r3, [r3]	@ float
 1342 05f0 1046     		mov	r0, r2
 1343 05f2 1946     		mov	r1, r3
 1344 05f4 FFF7FEFF 		bl	__aeabi_fadd
 1345 05f8 0346     		mov	r3, r0
 1346 05fa 1A46     		mov	r2, r3
 1347 05fc 254B     		ldr	r3, .L78+80
 1348 05fe 1A60     		str	r2, [r3]	@ float
 355:main.c        ****                         average = sum/MA_WINDOW;            //compute baseline averages for x, y ax
 1349              		.loc 1 355 0
 1350 0600 134B     		ldr	r3, .L78+12
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 32


 1351 0602 1B68     		ldr	r3, [r3]
 1352 0604 244A     		ldr	r2, .L78+84
 1353 0606 82FB0312 		smull	r1, r2, r2, r3
 1354 060a 1A44     		add	r2, r2, r3
 1355 060c D210     		asrs	r2, r2, #3
 1356 060e DB17     		asrs	r3, r3, #31
 1357 0610 D31A     		subs	r3, r2, r3
 1358 0612 9AB2     		uxth	r2, r3
 1359 0614 0F4B     		ldr	r3, .L78+16
 1360 0616 1A80     		strh	r2, [r3]	@ movhi
 356:main.c        ****                         xavg = xsum/MA_WINDOW;                            
 1361              		.loc 1 356 0
 1362 0618 1D4B     		ldr	r3, .L78+76
 1363 061a 1B68     		ldr	r3, [r3]	@ float
 1364 061c 1846     		mov	r0, r3
 1365 061e 1F49     		ldr	r1, .L78+88
 1366 0620 FFF7FEFF 		bl	__aeabi_fdiv
 1367 0624 0346     		mov	r3, r0
 1368 0626 1A46     		mov	r2, r3
 1369 0628 1D4B     		ldr	r3, .L78+92
 1370 062a 1A60     		str	r2, [r3]	@ float
 357:main.c        ****                         yavg = ysum/MA_WINDOW;
 1371              		.loc 1 357 0
 1372 062c 194B     		ldr	r3, .L78+80
 1373 062e 1B68     		ldr	r3, [r3]	@ float
 1374 0630 1846     		mov	r0, r3
 1375 0632 1A49     		ldr	r1, .L78+88
 1376 0634 FFF7FEFF 		bl	__aeabi_fdiv
 1377 0638 0346     		mov	r3, r0
 1378 063a 1A46     		mov	r2, r3
 1379 063c 194B     		ldr	r3, .L78+96
 1380 063e 1A60     		str	r2, [r3]	@ float
 1381 0640 8BE0     		b	.L56
 1382              	.L79:
 1383 0642 00BF     		.align	2
 1384              	.L78:
 1385 0644 00000000 		.word	reset
 1386 0648 00000000 		.word	id
 1387 064c 00000000 		.word	data_time
 1388 0650 00000000 		.word	sum
 1389 0654 00000000 		.word	average
 1390 0658 00000000 		.word	collect_flag
 1391 065c 00000000 		.word	wait_flag
 1392 0660 00000000 		.word	PANIC_flag
 1393 0664 00000000 		.word	testnum
 1394 0668 00000000 		.word	depth
 1395 066c 00000000 		.word	countdown
 1396 0670 00000000 		.word	msg_count
 1397 0674 00000000 		.word	dataflag
 1398 0678 00000000 		.word	transmit_flag
 1399 067c 00000000 		.word	STATE
 1400 0680 1C000000 		.word	.LC8
 1401 0684 4FECC44E 		.word	1321528399
 1402 0688 00000000 		.word	descent_time
 1403 068c 34000000 		.word	.LC9
 1404 0690 00000000 		.word	xsum
 1405 0694 00000000 		.word	ysum
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 33


 1406 0698 89888888 		.word	-2004318071
 1407 069c 00007041 		.word	1097859072
 1408 06a0 00000000 		.word	xavg
 1409 06a4 00000000 		.word	yavg
 1410              	.L57:
 358:main.c        ****                                                    
 359:main.c        ****                     }
 360:main.c        ****                     else{
 361:main.c        ****                         average = ComputeMA(average, MA_WINDOW, az);                // Compute aver
 1411              		.loc 1 361 0
 1412 06a8 964B     		ldr	r3, .L80
 1413 06aa 1B88     		ldrh	r3, [r3]
 1414 06ac 1BB2     		sxth	r3, r3
 1415 06ae 1846     		mov	r0, r3
 1416 06b0 FFF7FEFF 		bl	__aeabi_i2f
 1417 06b4 0446     		mov	r4, r0
 1418 06b6 B7F9FE30 		ldrsh	r3, [r7, #254]
 1419 06ba 1846     		mov	r0, r3
 1420 06bc FFF7FEFF 		bl	__aeabi_i2f
 1421 06c0 0346     		mov	r3, r0
 1422 06c2 2046     		mov	r0, r4
 1423 06c4 0F21     		movs	r1, #15
 1424 06c6 1A46     		mov	r2, r3
 1425 06c8 FFF7FEFF 		bl	ComputeMA
 1426 06cc 0346     		mov	r3, r0
 1427 06ce 1846     		mov	r0, r3
 1428 06d0 FFF7FEFF 		bl	__aeabi_f2iz
 1429 06d4 0346     		mov	r3, r0
 1430 06d6 9AB2     		uxth	r2, r3
 1431 06d8 8A4B     		ldr	r3, .L80
 1432 06da 1A80     		strh	r2, [r3]	@ movhi
 362:main.c        ****                         xavg = ComputeMA(xavg, MA_WINDOW, gx);
 1433              		.loc 1 362 0
 1434 06dc 8A4B     		ldr	r3, .L80+4
 1435 06de 1C68     		ldr	r4, [r3]	@ float
 1436 06e0 B7F84A30 		ldrh	r3, [r7, #74]
 1437 06e4 1BB2     		sxth	r3, r3
 1438 06e6 1846     		mov	r0, r3
 1439 06e8 FFF7FEFF 		bl	__aeabi_i2f
 1440 06ec 0346     		mov	r3, r0
 1441 06ee 2046     		mov	r0, r4
 1442 06f0 0F21     		movs	r1, #15
 1443 06f2 1A46     		mov	r2, r3
 1444 06f4 FFF7FEFF 		bl	ComputeMA
 1445 06f8 0246     		mov	r2, r0
 1446 06fa 834B     		ldr	r3, .L80+4
 1447 06fc 1A60     		str	r2, [r3]	@ float
 363:main.c        ****                         yavg = ComputeMA(yavg, MA_WINDOW, gy);
 1448              		.loc 1 363 0
 1449 06fe 834B     		ldr	r3, .L80+8
 1450 0700 1C68     		ldr	r4, [r3]	@ float
 1451 0702 B7F84830 		ldrh	r3, [r7, #72]
 1452 0706 1BB2     		sxth	r3, r3
 1453 0708 1846     		mov	r0, r3
 1454 070a FFF7FEFF 		bl	__aeabi_i2f
 1455 070e 0346     		mov	r3, r0
 1456 0710 2046     		mov	r0, r4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 34


 1457 0712 0F21     		movs	r1, #15
 1458 0714 1A46     		mov	r2, r3
 1459 0716 FFF7FEFF 		bl	ComputeMA
 1460 071a 0246     		mov	r2, r0
 1461 071c 7B4B     		ldr	r3, .L80+8
 1462 071e 1A60     		str	r2, [r3]	@ float
 364:main.c        ****                         if (abs((int)xavg) > DEGREES_70 || abs((int)yavg) > DEGREES_70){ // If gyro
 1463              		.loc 1 364 0
 1464 0720 794B     		ldr	r3, .L80+4
 1465 0722 1B68     		ldr	r3, [r3]	@ float
 1466 0724 1846     		mov	r0, r3
 1467 0726 FFF7FEFF 		bl	__aeabi_f2iz
 1468 072a 0346     		mov	r3, r0
 1469 072c 002B     		cmp	r3, #0
 1470 072e B8BF     		it	lt
 1471 0730 5B42     		rsblt	r3, r3, #0
 1472 0732 42F2D232 		movw	r2, #9170
 1473 0736 9342     		cmp	r3, r2
 1474 0738 0CDC     		bgt	.L58
 1475              		.loc 1 364 0 is_stmt 0 discriminator 1
 1476 073a 744B     		ldr	r3, .L80+8
 1477 073c 1B68     		ldr	r3, [r3]	@ float
 1478 073e 1846     		mov	r0, r3
 1479 0740 FFF7FEFF 		bl	__aeabi_f2iz
 1480 0744 0346     		mov	r3, r0
 1481 0746 002B     		cmp	r3, #0
 1482 0748 B8BF     		it	lt
 1483 074a 5B42     		rsblt	r3, r3, #0
 1484 074c 42F2D232 		movw	r2, #9170
 1485 0750 9342     		cmp	r3, r2
 1486 0752 02DD     		ble	.L56
 1487              	.L58:
 365:main.c        ****                             STATE = RESURFACE;                                        // start lift
 1488              		.loc 1 365 0 is_stmt 1
 1489 0754 6E4B     		ldr	r3, .L80+12
 1490 0756 0422     		movs	r2, #4
 1491 0758 1A70     		strb	r2, [r3]
 1492              	.L56:
 366:main.c        ****                         }
 367:main.c        ****                     }
 368:main.c        ****                     
 369:main.c        ****                     if(average > BOT_THRESHOLD){                        
 1493              		.loc 1 369 0
 1494 075a 6A4B     		ldr	r3, .L80
 1495 075c 1B88     		ldrh	r3, [r3]
 1496 075e 1BB2     		sxth	r3, r3
 1497 0760 44F62062 		movw	r2, #20000
 1498 0764 9342     		cmp	r3, r2
 1499 0766 22DD     		ble	.L59
 1500              	.LBB4:
 370:main.c        ****                         STATE = LANDED;                                     //Switch to LANDED stat
 1501              		.loc 1 370 0
 1502 0768 694B     		ldr	r3, .L80+12
 1503 076a 0322     		movs	r2, #3
 1504 076c 1A70     		strb	r2, [r3]
 371:main.c        ****                         #ifdef LCD
 372:main.c        ****                             setCursor(0,0);
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 35


 1505              		.loc 1 372 0
 1506 076e 0020     		movs	r0, #0
 1507 0770 0021     		movs	r1, #0
 1508 0772 FFF7FEFF 		bl	setCursor
 373:main.c        ****                             clear();
 1509              		.loc 1 373 0
 1510 0776 FFF7FEFF 		bl	clear
 374:main.c        ****                             LCD_print("STATE: LANDED");  
 1511              		.loc 1 374 0
 1512 077a 6648     		ldr	r0, .L80+16
 1513 077c FFF7FEFF 		bl	LCD_print
 375:main.c        ****                         #endif
 376:main.c        ****                         char sdbuf[60] = {};
 1514              		.loc 1 376 0
 1515 0780 3B46     		mov	r3, r7
 1516 0782 1A46     		mov	r2, r3
 1517 0784 3C23     		movs	r3, #60
 1518 0786 1046     		mov	r0, r2
 1519 0788 0021     		movs	r1, #0
 1520 078a 1A46     		mov	r2, r3
 1521 078c FFF7FEFF 		bl	memset
 377:main.c        ****                         #ifdef SD
 378:main.c        ****                             sprintf(sdbuf, "STATE: LANDED ***********\n");
 379:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 380:main.c        ****                         #endif
 381:main.c        ****                         
 382:main.c        ****                         #ifdef SD
 383:main.c        ****                                 memset(sdbuf, 0, 40);
 384:main.c        ****                                 sprintf(sdbuf, "STATE: VACUUMING ***********\n");
 385:main.c        ****                                 FS_Write(fsfile, sdbuf, strlen(sdbuf));
 386:main.c        ****                         #endif
 387:main.c        ****                         
 388:main.c        ****                         id=0;                                                   //reset sample coun
 1522              		.loc 1 388 0
 1523 0790 614B     		ldr	r3, .L80+20
 1524 0792 0022     		movs	r2, #0
 1525 0794 1A60     		str	r2, [r3]
 389:main.c        ****                         data_time = 0;
 1526              		.loc 1 389 0
 1527 0796 614B     		ldr	r3, .L80+24
 1528 0798 0022     		movs	r2, #0
 1529 079a 1A60     		str	r2, [r3]
 390:main.c        ****                         sum = 0;
 1530              		.loc 1 390 0
 1531 079c 604B     		ldr	r3, .L80+28
 1532 079e 0022     		movs	r2, #0
 1533 07a0 1A60     		str	r2, [r3]
 391:main.c        ****                         average = 0; 
 1534              		.loc 1 391 0
 1535 07a2 584B     		ldr	r3, .L80
 1536 07a4 0022     		movs	r2, #0
 1537 07a6 1A80     		strh	r2, [r3]	@ movhi
 392:main.c        ****                         countdown = 0;
 1538              		.loc 1 392 0
 1539 07a8 5E4B     		ldr	r3, .L80+32
 1540 07aa 0022     		movs	r2, #0
 1541 07ac 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 36


 1542              	.L59:
 1543              	.LBE4:
 393:main.c        ****                     }
 394:main.c        ****                     id++;     
 1544              		.loc 1 394 0
 1545 07ae 5A4B     		ldr	r3, .L80+20
 1546 07b0 1B68     		ldr	r3, [r3]
 1547 07b2 0133     		adds	r3, r3, #1
 1548 07b4 584A     		ldr	r2, .L80+20
 1549 07b6 1360     		str	r3, [r2]
 395:main.c        ****                     
 396:main.c        ****                     /* if desired amount of samples have been collected, switch states */
 397:main.c        ****                     if(data_time >= descent_time ){                         // variable descent tim
 1550              		.loc 1 397 0
 1551 07b8 584B     		ldr	r3, .L80+24
 1552 07ba 1A68     		ldr	r2, [r3]
 1553 07bc 5A4B     		ldr	r3, .L80+36
 1554 07be 1B68     		ldr	r3, [r3]
 1555 07c0 9A42     		cmp	r2, r3
 1556 07c2 1ADB     		blt	.L60
 398:main.c        ****                         LED2_Write(0);                                          //turn LED off
 1557              		.loc 1 398 0
 1558 07c4 0020     		movs	r0, #0
 1559 07c6 FFF7FEFF 		bl	LED2_Write
 399:main.c        ****                                                             
 400:main.c        ****                         STATE = WAIT_TO_LAUNCH;                                //Switch to Waiting 
 1560              		.loc 1 400 0
 1561 07ca 514B     		ldr	r3, .L80+12
 1562 07cc 0122     		movs	r2, #1
 1563 07ce 1A70     		strb	r2, [r3]
 401:main.c        ****                         #ifdef LCD
 402:main.c        ****                             setCursor(0,0);
 1564              		.loc 1 402 0
 1565 07d0 0020     		movs	r0, #0
 1566 07d2 0021     		movs	r1, #0
 1567 07d4 FFF7FEFF 		bl	setCursor
 403:main.c        ****                             clear();
 1568              		.loc 1 403 0
 1569 07d8 FFF7FEFF 		bl	clear
 404:main.c        ****                             LCD_print("STATE: WAIT");  
 1570              		.loc 1 404 0
 1571 07dc 5348     		ldr	r0, .L80+40
 1572 07de FFF7FEFF 		bl	LCD_print
 405:main.c        ****                         #endif
 406:main.c        ****                         id=0;                                                  //reset sample count
 1573              		.loc 1 406 0
 1574 07e2 4D4B     		ldr	r3, .L80+20
 1575 07e4 0022     		movs	r2, #0
 1576 07e6 1A60     		str	r2, [r3]
 407:main.c        ****                         data_time = 0;
 1577              		.loc 1 407 0
 1578 07e8 4C4B     		ldr	r3, .L80+24
 1579 07ea 0022     		movs	r2, #0
 1580 07ec 1A60     		str	r2, [r3]
 408:main.c        ****                         sum = 0;                                               //reset sum 
 1581              		.loc 1 408 0
 1582 07ee 4C4B     		ldr	r3, .L80+28
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 37


 1583 07f0 0022     		movs	r2, #0
 1584 07f2 1A60     		str	r2, [r3]
 409:main.c        ****                         average = 0;
 1585              		.loc 1 409 0
 1586 07f4 434B     		ldr	r3, .L80
 1587 07f6 0022     		movs	r2, #0
 1588 07f8 1A80     		strh	r2, [r3]	@ movhi
 1589              	.L60:
 410:main.c        ****                        
 411:main.c        ****                     }
 412:main.c        ****                     collect_flag = 0;
 1590              		.loc 1 412 0
 1591 07fa 4D4B     		ldr	r3, .L80+44
 1592 07fc 0022     		movs	r2, #0
 1593 07fe 1A70     		strb	r2, [r3]
 413:main.c        ****                 }
 414:main.c        ****                 break;
 1594              		.loc 1 414 0
 1595 0800 82E1     		b	.L53
 1596              	.L54:
 1597              		.loc 1 414 0 is_stmt 0 discriminator 2
 1598 0802 81E1     		b	.L53
 1599              	.L38:
 415:main.c        ****                 
 416:main.c        ****                 case LANDED:
 417:main.c        ****                     if (countdown == 7) {countdown = 0; pulse = 1; Solenoid_1_Write(1);} //turn on 
 1600              		.loc 1 417 0 is_stmt 1
 1601 0804 474B     		ldr	r3, .L80+32
 1602 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1603 0808 072B     		cmp	r3, #7
 1604 080a 08D1     		bne	.L61
 1605              		.loc 1 417 0 is_stmt 0 discriminator 1
 1606 080c 454B     		ldr	r3, .L80+32
 1607 080e 0022     		movs	r2, #0
 1608 0810 1A70     		strb	r2, [r3]
 1609 0812 0123     		movs	r3, #1
 1610 0814 C7F81C31 		str	r3, [r7, #284]
 1611 0818 0120     		movs	r0, #1
 1612 081a FFF7FEFF 		bl	Solenoid_1_Write
 1613              	.L61:
 418:main.c        ****                     
 419:main.c        ****                     MPU6050_getRotation(&gx, &gy, &gz); // gather gyro data
 1614              		.loc 1 419 0 is_stmt 1
 1615 081e 07F14A01 		add	r1, r7, #74
 1616 0822 07F14802 		add	r2, r7, #72
 1617 0826 07F14603 		add	r3, r7, #70
 1618 082a 0846     		mov	r0, r1
 1619 082c 1146     		mov	r1, r2
 1620 082e 1A46     		mov	r2, r3
 1621 0830 FFF7FEFF 		bl	MPU6050_getRotation
 420:main.c        ****                     if(collect_flag == 1){
 1622              		.loc 1 420 0
 1623 0834 3E4B     		ldr	r3, .L80+44
 1624 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1625 0838 002B     		cmp	r3, #0
 1626 083a 00F0D680 		beq	.L62
 421:main.c        ****                         if (id < MA_WINDOW){
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 38


 1627              		.loc 1 421 0
 1628 083e 364B     		ldr	r3, .L80+20
 1629 0840 1B68     		ldr	r3, [r3]
 1630 0842 0E2B     		cmp	r3, #14
 1631 0844 22DC     		bgt	.L63
 422:main.c        ****                             xsum += gx;
 1632              		.loc 1 422 0
 1633 0846 B7F84A30 		ldrh	r3, [r7, #74]
 1634 084a 1BB2     		sxth	r3, r3
 1635 084c 1846     		mov	r0, r3
 1636 084e FFF7FEFF 		bl	__aeabi_i2f
 1637 0852 0246     		mov	r2, r0
 1638 0854 374B     		ldr	r3, .L80+48
 1639 0856 1B68     		ldr	r3, [r3]	@ float
 1640 0858 1046     		mov	r0, r2
 1641 085a 1946     		mov	r1, r3
 1642 085c FFF7FEFF 		bl	__aeabi_fadd
 1643 0860 0346     		mov	r3, r0
 1644 0862 1A46     		mov	r2, r3
 1645 0864 334B     		ldr	r3, .L80+48
 1646 0866 1A60     		str	r2, [r3]	@ float
 423:main.c        ****                             ysum += gy;
 1647              		.loc 1 423 0
 1648 0868 B7F84830 		ldrh	r3, [r7, #72]
 1649 086c 1BB2     		sxth	r3, r3
 1650 086e 1846     		mov	r0, r3
 1651 0870 FFF7FEFF 		bl	__aeabi_i2f
 1652 0874 0246     		mov	r2, r0
 1653 0876 304B     		ldr	r3, .L80+52
 1654 0878 1B68     		ldr	r3, [r3]	@ float
 1655 087a 1046     		mov	r0, r2
 1656 087c 1946     		mov	r1, r3
 1657 087e FFF7FEFF 		bl	__aeabi_fadd
 1658 0882 0346     		mov	r3, r0
 1659 0884 1A46     		mov	r2, r3
 1660 0886 2C4B     		ldr	r3, .L80+52
 1661 0888 1A60     		str	r2, [r3]	@ float
 1662 088a 7BE0     		b	.L64
 1663              	.L63:
 424:main.c        ****                         }
 425:main.c        ****                         else if(id == MA_WINDOW){
 1664              		.loc 1 425 0
 1665 088c 224B     		ldr	r3, .L80+20
 1666 088e 1B68     		ldr	r3, [r3]
 1667 0890 0F2B     		cmp	r3, #15
 1668 0892 55D1     		bne	.L65
 426:main.c        ****                             xsum += gx;
 1669              		.loc 1 426 0
 1670 0894 B7F84A30 		ldrh	r3, [r7, #74]
 1671 0898 1BB2     		sxth	r3, r3
 1672 089a 1846     		mov	r0, r3
 1673 089c FFF7FEFF 		bl	__aeabi_i2f
 1674 08a0 0246     		mov	r2, r0
 1675 08a2 244B     		ldr	r3, .L80+48
 1676 08a4 1B68     		ldr	r3, [r3]	@ float
 1677 08a6 1046     		mov	r0, r2
 1678 08a8 1946     		mov	r1, r3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 39


 1679 08aa FFF7FEFF 		bl	__aeabi_fadd
 1680 08ae 0346     		mov	r3, r0
 1681 08b0 1A46     		mov	r2, r3
 1682 08b2 204B     		ldr	r3, .L80+48
 1683 08b4 1A60     		str	r2, [r3]	@ float
 427:main.c        ****                             ysum += gy;
 1684              		.loc 1 427 0
 1685 08b6 B7F84830 		ldrh	r3, [r7, #72]
 1686 08ba 1BB2     		sxth	r3, r3
 1687 08bc 1846     		mov	r0, r3
 1688 08be FFF7FEFF 		bl	__aeabi_i2f
 1689 08c2 0246     		mov	r2, r0
 1690 08c4 1C4B     		ldr	r3, .L80+52
 1691 08c6 1B68     		ldr	r3, [r3]	@ float
 1692 08c8 1046     		mov	r0, r2
 1693 08ca 1946     		mov	r1, r3
 1694 08cc FFF7FEFF 		bl	__aeabi_fadd
 1695 08d0 0346     		mov	r3, r0
 1696 08d2 1A46     		mov	r2, r3
 1697 08d4 184B     		ldr	r3, .L80+52
 1698 08d6 1A60     		str	r2, [r3]	@ float
 428:main.c        ****                             xavg = xsum/MA_WINDOW;                            //compute baseline av
 1699              		.loc 1 428 0
 1700 08d8 164B     		ldr	r3, .L80+48
 1701 08da 1B68     		ldr	r3, [r3]	@ float
 1702 08dc 1846     		mov	r0, r3
 1703 08de 1749     		ldr	r1, .L80+56
 1704 08e0 FFF7FEFF 		bl	__aeabi_fdiv
 1705 08e4 0346     		mov	r3, r0
 1706 08e6 1A46     		mov	r2, r3
 1707 08e8 074B     		ldr	r3, .L80+4
 1708 08ea 1A60     		str	r2, [r3]	@ float
 429:main.c        ****                             yavg = ysum/MA_WINDOW;
 1709              		.loc 1 429 0
 1710 08ec 124B     		ldr	r3, .L80+52
 1711 08ee 1B68     		ldr	r3, [r3]	@ float
 1712 08f0 1846     		mov	r0, r3
 1713 08f2 1249     		ldr	r1, .L80+56
 1714 08f4 FFF7FEFF 		bl	__aeabi_fdiv
 1715 08f8 0346     		mov	r3, r0
 1716 08fa 1A46     		mov	r2, r3
 1717 08fc 034B     		ldr	r3, .L80+8
 1718 08fe 1A60     		str	r2, [r3]	@ float
 1719 0900 40E0     		b	.L64
 1720              	.L81:
 1721 0902 00BF     		.align	2
 1722              	.L80:
 1723 0904 00000000 		.word	average
 1724 0908 00000000 		.word	xavg
 1725 090c 00000000 		.word	yavg
 1726 0910 00000000 		.word	STATE
 1727 0914 44000000 		.word	.LC10
 1728 0918 00000000 		.word	id
 1729 091c 00000000 		.word	data_time
 1730 0920 00000000 		.word	sum
 1731 0924 00000000 		.word	countdown
 1732 0928 00000000 		.word	descent_time
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 40


 1733 092c 54000000 		.word	.LC11
 1734 0930 00000000 		.word	collect_flag
 1735 0934 00000000 		.word	xsum
 1736 0938 00000000 		.word	ysum
 1737 093c 00007041 		.word	1097859072
 1738              	.L65:
 430:main.c        ****                         }
 431:main.c        ****                         else{
 432:main.c        ****                             xavg = ComputeMA(xavg, MA_WINDOW, gx);
 1739              		.loc 1 432 0
 1740 0940 724B     		ldr	r3, .L82
 1741 0942 1C68     		ldr	r4, [r3]	@ float
 1742 0944 B7F84A30 		ldrh	r3, [r7, #74]
 1743 0948 1BB2     		sxth	r3, r3
 1744 094a 1846     		mov	r0, r3
 1745 094c FFF7FEFF 		bl	__aeabi_i2f
 1746 0950 0346     		mov	r3, r0
 1747 0952 2046     		mov	r0, r4
 1748 0954 0F21     		movs	r1, #15
 1749 0956 1A46     		mov	r2, r3
 1750 0958 FFF7FEFF 		bl	ComputeMA
 1751 095c 0246     		mov	r2, r0
 1752 095e 6B4B     		ldr	r3, .L82
 1753 0960 1A60     		str	r2, [r3]	@ float
 433:main.c        ****                             yavg = ComputeMA(yavg, MA_WINDOW, gy);
 1754              		.loc 1 433 0
 1755 0962 6B4B     		ldr	r3, .L82+4
 1756 0964 1C68     		ldr	r4, [r3]	@ float
 1757 0966 B7F84830 		ldrh	r3, [r7, #72]
 1758 096a 1BB2     		sxth	r3, r3
 1759 096c 1846     		mov	r0, r3
 1760 096e FFF7FEFF 		bl	__aeabi_i2f
 1761 0972 0346     		mov	r3, r0
 1762 0974 2046     		mov	r0, r4
 1763 0976 0F21     		movs	r1, #15
 1764 0978 1A46     		mov	r2, r3
 1765 097a FFF7FEFF 		bl	ComputeMA
 1766 097e 0246     		mov	r2, r0
 1767 0980 634B     		ldr	r3, .L82+4
 1768 0982 1A60     		str	r2, [r3]	@ float
 1769              	.L64:
 434:main.c        ****                         }
 435:main.c        ****                         if (abs((int)xavg) > DEGREES_45 || abs((int)yavg) > DEGREES_45){ // If tilt
 1770              		.loc 1 435 0
 1771 0984 614B     		ldr	r3, .L82
 1772 0986 1B68     		ldr	r3, [r3]	@ float
 1773 0988 1846     		mov	r0, r3
 1774 098a FFF7FEFF 		bl	__aeabi_f2iz
 1775 098e 0346     		mov	r3, r0
 1776 0990 002B     		cmp	r3, #0
 1777 0992 B8BF     		it	lt
 1778 0994 5B42     		rsblt	r3, r3, #0
 1779 0996 41F20772 		movw	r2, #5895
 1780 099a 9342     		cmp	r3, r2
 1781 099c 0CDC     		bgt	.L66
 1782              		.loc 1 435 0 is_stmt 0 discriminator 1
 1783 099e 5C4B     		ldr	r3, .L82+4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 41


 1784 09a0 1B68     		ldr	r3, [r3]	@ float
 1785 09a2 1846     		mov	r0, r3
 1786 09a4 FFF7FEFF 		bl	__aeabi_f2iz
 1787 09a8 0346     		mov	r3, r0
 1788 09aa 002B     		cmp	r3, #0
 1789 09ac B8BF     		it	lt
 1790 09ae 5B42     		rsblt	r3, r3, #0
 1791 09b0 41F20772 		movw	r2, #5895
 1792 09b4 9342     		cmp	r3, r2
 1793 09b6 10DD     		ble	.L67
 1794              	.L66:
 436:main.c        ****                             STATE = RESURFACE;
 1795              		.loc 1 436 0 is_stmt 1
 1796 09b8 564B     		ldr	r3, .L82+8
 1797 09ba 0422     		movs	r2, #4
 1798 09bc 1A70     		strb	r2, [r3]
 437:main.c        ****                             clear();
 1799              		.loc 1 437 0
 1800 09be FFF7FEFF 		bl	clear
 438:main.c        ****                             LCD_print("Tilted");
 1801              		.loc 1 438 0
 1802 09c2 5548     		ldr	r0, .L82+12
 1803 09c4 FFF7FEFF 		bl	LCD_print
 439:main.c        ****                             clear();
 1804              		.loc 1 439 0
 1805 09c8 FFF7FEFF 		bl	clear
 440:main.c        ****                             LCD_print("STATE: RESURFACING");
 1806              		.loc 1 440 0
 1807 09cc 5348     		ldr	r0, .L82+16
 1808 09ce FFF7FEFF 		bl	LCD_print
 441:main.c        ****                             CyDelay(500u);
 1809              		.loc 1 441 0
 1810 09d2 4FF4FA70 		mov	r0, #500
 1811 09d6 FFF7FEFF 		bl	CyDelay
 1812              	.L67:
 442:main.c        ****                         }
 443:main.c        ****                         collect_flag = 0;
 1813              		.loc 1 443 0
 1814 09da 514B     		ldr	r3, .L82+20
 1815 09dc 0022     		movs	r2, #0
 1816 09de 1A70     		strb	r2, [r3]
 444:main.c        ****                         id++;
 1817              		.loc 1 444 0
 1818 09e0 504B     		ldr	r3, .L82+24
 1819 09e2 1B68     		ldr	r3, [r3]
 1820 09e4 0133     		adds	r3, r3, #1
 1821 09e6 4F4A     		ldr	r2, .L82+24
 1822 09e8 1360     		str	r3, [r2]
 1823              	.L62:
 445:main.c        ****                     }
 446:main.c        ****                     
 447:main.c        ****                     if (countdown == 5 && pulse){
 1824              		.loc 1 447 0
 1825 09ea 4F4B     		ldr	r3, .L82+28
 1826 09ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 09ee 052B     		cmp	r3, #5
 1828 09f0 0ED1     		bne	.L68
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 42


 1829              		.loc 1 447 0 is_stmt 0 discriminator 1
 1830 09f2 D7F81C31 		ldr	r3, [r7, #284]
 1831 09f6 002B     		cmp	r3, #0
 1832 09f8 0AD0     		beq	.L68
 448:main.c        ****                         pulse++;
 1833              		.loc 1 448 0 is_stmt 1
 1834 09fa D7F81C31 		ldr	r3, [r7, #284]
 1835 09fe 0133     		adds	r3, r3, #1
 1836 0a00 C7F81C31 		str	r3, [r7, #284]
 449:main.c        ****                         Solenoid_1_Write(0); //turn off soleniod 1
 1837              		.loc 1 449 0
 1838 0a04 0020     		movs	r0, #0
 1839 0a06 FFF7FEFF 		bl	Solenoid_1_Write
 450:main.c        ****                         countdown = 0;
 1840              		.loc 1 450 0
 1841 0a0a 474B     		ldr	r3, .L82+28
 1842 0a0c 0022     		movs	r2, #0
 1843 0a0e 1A70     		strb	r2, [r3]
 1844              	.L68:
 451:main.c        ****                         
 452:main.c        ****                     }
 453:main.c        ****                     if (countdown == 3 && pulse == 2){
 1845              		.loc 1 453 0
 1846 0a10 454B     		ldr	r3, .L82+28
 1847 0a12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1848 0a14 032B     		cmp	r3, #3
 1849 0a16 1ED1     		bne	.L69
 1850              		.loc 1 453 0 is_stmt 0 discriminator 1
 1851 0a18 D7F81C31 		ldr	r3, [r7, #284]
 1852 0a1c 022B     		cmp	r3, #2
 1853 0a1e 1AD1     		bne	.L69
 1854              	.LBB5:
 454:main.c        ****                         STATE = RESURFACE;
 1855              		.loc 1 454 0 is_stmt 1
 1856 0a20 3C4B     		ldr	r3, .L82+8
 1857 0a22 0422     		movs	r2, #4
 1858 0a24 1A70     		strb	r2, [r3]
 455:main.c        ****                         char sdbuf[60] = {};
 1859              		.loc 1 455 0
 1860 0a26 3B46     		mov	r3, r7
 1861 0a28 1A46     		mov	r2, r3
 1862 0a2a 3C23     		movs	r3, #60
 1863 0a2c 1046     		mov	r0, r2
 1864 0a2e 0021     		movs	r1, #0
 1865 0a30 1A46     		mov	r2, r3
 1866 0a32 FFF7FEFF 		bl	memset
 456:main.c        ****                         #ifdef LCD
 457:main.c        ****                             setCursor(0,0);
 1867              		.loc 1 457 0
 1868 0a36 0020     		movs	r0, #0
 1869 0a38 0021     		movs	r1, #0
 1870 0a3a FFF7FEFF 		bl	setCursor
 458:main.c        ****                             clear();
 1871              		.loc 1 458 0
 1872 0a3e FFF7FEFF 		bl	clear
 459:main.c        ****                             LCD_print("STATE: RESURFACING");  
 1873              		.loc 1 459 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 43


 1874 0a42 3648     		ldr	r0, .L82+16
 1875 0a44 FFF7FEFF 		bl	LCD_print
 460:main.c        ****                         #endif
 461:main.c        ****                         #ifdef SD
 462:main.c        ****                             memset(sdbuf, 0, 40);
 463:main.c        ****                             sprintf(sdbuf, "STATE: RESURFACING ***********\n");
 464:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 465:main.c        ****                         #endif
 466:main.c        ****                         pulse = 0;
 1876              		.loc 1 466 0
 1877 0a48 0023     		movs	r3, #0
 1878 0a4a C7F81C31 		str	r3, [r7, #284]
 467:main.c        ****                         countdown = 0;
 1879              		.loc 1 467 0
 1880 0a4e 364B     		ldr	r3, .L82+28
 1881 0a50 0022     		movs	r2, #0
 1882 0a52 1A70     		strb	r2, [r3]
 1883              	.LBE5:
 468:main.c        ****                     }
 469:main.c        ****                 break;
 1884              		.loc 1 469 0
 1885 0a54 58E0     		b	.L53
 1886              	.L69:
 1887              		.loc 1 469 0 is_stmt 0 discriminator 3
 1888 0a56 57E0     		b	.L53
 1889              	.L39:
 470:main.c        ****                 
 471:main.c        ****             case RESURFACE:
 472:main.c        ****                 if (PANIC_flag)
 1890              		.loc 1 472 0 is_stmt 1
 1891 0a58 344B     		ldr	r3, .L82+32
 1892 0a5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 0a5c 002B     		cmp	r3, #0
 1894 0a5e 02D0     		beq	.L70
 473:main.c        ****                     LCD_print("WATER DETECTED");
 1895              		.loc 1 473 0
 1896 0a60 3348     		ldr	r0, .L82+36
 1897 0a62 FFF7FEFF 		bl	LCD_print
 1898              	.L70:
 474:main.c        ****                 Solenoid_2_Write(1);
 1899              		.loc 1 474 0
 1900 0a66 0120     		movs	r0, #1
 1901 0a68 FFF7FEFF 		bl	Solenoid_2_Write
 475:main.c        ****                 
 476:main.c        ****                 //check pressure sensor to confirm we are at the surface
 477:main.c        ****                 if (countdown == 3){
 1902              		.loc 1 477 0
 1903 0a6c 2E4B     		ldr	r3, .L82+28
 1904 0a6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1905 0a70 032B     		cmp	r3, #3
 1906 0a72 0ED1     		bne	.L71
 478:main.c        ****                     Solenoid_2_Write(0);
 1907              		.loc 1 478 0
 1908 0a74 0020     		movs	r0, #0
 1909 0a76 FFF7FEFF 		bl	Solenoid_2_Write
 479:main.c        ****                     CyDelay(1000u);
 1910              		.loc 1 479 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 44


 1911 0a7a 4FF47A70 		mov	r0, #1000
 1912 0a7e FFF7FEFF 		bl	CyDelay
 480:main.c        ****                     pulse++;
 1913              		.loc 1 480 0
 1914 0a82 D7F81C31 		ldr	r3, [r7, #284]
 1915 0a86 0133     		adds	r3, r3, #1
 1916 0a88 C7F81C31 		str	r3, [r7, #284]
 481:main.c        ****                     countdown = 0;
 1917              		.loc 1 481 0
 1918 0a8c 264B     		ldr	r3, .L82+28
 1919 0a8e 0022     		movs	r2, #0
 1920 0a90 1A70     		strb	r2, [r3]
 1921              	.L71:
 482:main.c        ****                 }
 483:main.c        ****                 if (pulse == 2){
 1922              		.loc 1 483 0
 1923 0a92 D7F81C31 		ldr	r3, [r7, #284]
 1924 0a96 022B     		cmp	r3, #2
 1925 0a98 17D1     		bne	.L72
 1926              	.LBB6:
 484:main.c        ****                     char sdbuf[60] = {};
 1927              		.loc 1 484 0
 1928 0a9a 3B46     		mov	r3, r7
 1929 0a9c 1A46     		mov	r2, r3
 1930 0a9e 3C23     		movs	r3, #60
 1931 0aa0 1046     		mov	r0, r2
 1932 0aa2 0021     		movs	r1, #0
 1933 0aa4 1A46     		mov	r2, r3
 1934 0aa6 FFF7FEFF 		bl	memset
 485:main.c        ****                                                    //wait 10 seconds to lift, for testing in pool
 486:main.c        ****                     STATE = TRANSMIT;
 1935              		.loc 1 486 0
 1936 0aaa 1A4B     		ldr	r3, .L82+8
 1937 0aac 0522     		movs	r2, #5
 1938 0aae 1A70     		strb	r2, [r3]
 487:main.c        ****                     #ifdef SD                                   //close old file, open new one
 488:main.c        ****                         FS_FClose(fsfile);
 489:main.c        ****                         sprintf(file, "test%d.txt", ++testnum);
 490:main.c        ****                         fsfile = FS_FOpen(file, "w");
 491:main.c        ****                     #endif 
 492:main.c        ****                     
 493:main.c        ****                     #ifdef LCD
 494:main.c        ****                         setCursor(0,0);
 1939              		.loc 1 494 0
 1940 0ab0 0020     		movs	r0, #0
 1941 0ab2 0021     		movs	r1, #0
 1942 0ab4 FFF7FEFF 		bl	setCursor
 495:main.c        ****                         clear();
 1943              		.loc 1 495 0
 1944 0ab8 FFF7FEFF 		bl	clear
 496:main.c        ****                         LCD_print("TRANSMIT");  
 1945              		.loc 1 496 0
 1946 0abc 1D48     		ldr	r0, .L82+40
 1947 0abe FFF7FEFF 		bl	LCD_print
 497:main.c        ****                     #endif
 498:main.c        ****                     #ifdef SD
 499:main.c        ****                         memset(sdbuf, 0, 40);
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 45


 500:main.c        ****                         sprintf(sdbuf, "STATE: TRANSMIT ***********\n");
 501:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));
 502:main.c        ****                     #endif
 503:main.c        ****                     countdown = 0;
 1948              		.loc 1 503 0
 1949 0ac2 194B     		ldr	r3, .L82+28
 1950 0ac4 0022     		movs	r2, #0
 1951 0ac6 1A70     		strb	r2, [r3]
 1952              	.LBE6:
 504:main.c        ****                 }
 505:main.c        ****                 break;
 1953              		.loc 1 505 0
 1954 0ac8 1EE0     		b	.L53
 1955              	.L72:
 1956              		.loc 1 505 0 is_stmt 0 discriminator 5
 1957 0aca 1DE0     		b	.L53
 1958              	.L40:
 506:main.c        ****                 
 507:main.c        ****             case TRANSMIT:
 508:main.c        ****                 if (transmit_flag){
 1959              		.loc 1 508 0 is_stmt 1
 1960 0acc 1A4B     		ldr	r3, .L82+44
 1961 0ace 1B68     		ldr	r3, [r3]
 1962 0ad0 002B     		cmp	r3, #0
 1963 0ad2 0BD0     		beq	.L73
 509:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &t); // Here, the STATE variable only matters,
 1964              		.loc 1 509 0
 1965 0ad4 07F1B802 		add	r2, r7, #184
 1966 0ad8 07F13C03 		add	r3, r7, #60
 1967 0adc 1046     		mov	r0, r2
 1968 0ade 0D49     		ldr	r1, .L82+8
 1969 0ae0 0A22     		movs	r2, #10
 1970 0ae2 FFF7FEFF 		bl	BT_Send
 510:main.c        ****                     transmit_flag = 0;
 1971              		.loc 1 510 0
 1972 0ae6 144B     		ldr	r3, .L82+44
 1973 0ae8 0022     		movs	r2, #0
 1974 0aea 1A60     		str	r2, [r3]
 1975              	.L73:
 511:main.c        ****                 }
 512:main.c        ****                 data_time = 0;
 1976              		.loc 1 512 0
 1977 0aec 134B     		ldr	r3, .L82+48
 1978 0aee 0022     		movs	r2, #0
 1979 0af0 1A60     		str	r2, [r3]
 513:main.c        ****                 countdown = 0;
 1980              		.loc 1 513 0
 1981 0af2 0D4B     		ldr	r3, .L82+28
 1982 0af4 0022     		movs	r2, #0
 1983 0af6 1A70     		strb	r2, [r3]
 514:main.c        ****                 pulse = 0;
 1984              		.loc 1 514 0
 1985 0af8 0023     		movs	r3, #0
 1986 0afa C7F81C31 		str	r3, [r7, #284]
 515:main.c        ****                 depth = 0;
 1987              		.loc 1 515 0
 1988 0afe 104B     		ldr	r3, .L82+52
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 46


 1989 0b00 0022     		movs	r2, #0
 1990 0b02 1A60     		str	r2, [r3]
 516:main.c        ****                 
 517:main.c        ****                 break;
 1991              		.loc 1 517 0
 1992 0b04 00E0     		b	.L53
 1993              	.L75:
 518:main.c        ****                 
 519:main.c        ****             default:
 520:main.c        ****                 break;
 1994              		.loc 1 520 0
 1995 0b06 00BF     		nop
 1996              	.L53:
 1997              	.LBE2:
 521:main.c        ****         
 522:main.c        ****         
 523:main.c        ****         }
 524:main.c        ****         
 525:main.c        ****     }
 1998              		.loc 1 525 0 discriminator 6
 1999 0b08 FFF729BB 		b	.L74
 2000              	.L83:
 2001              		.align	2
 2002              	.L82:
 2003 0b0c 00000000 		.word	xavg
 2004 0b10 00000000 		.word	yavg
 2005 0b14 00000000 		.word	STATE
 2006 0b18 60000000 		.word	.LC12
 2007 0b1c 68000000 		.word	.LC13
 2008 0b20 00000000 		.word	collect_flag
 2009 0b24 00000000 		.word	id
 2010 0b28 00000000 		.word	countdown
 2011 0b2c 00000000 		.word	PANIC_flag
 2012 0b30 7C000000 		.word	.LC14
 2013 0b34 8C000000 		.word	.LC15
 2014 0b38 00000000 		.word	transmit_flag
 2015 0b3c 00000000 		.word	data_time
 2016 0b40 00000000 		.word	depth
 2017              		.cfi_endproc
 2018              	.LFE68:
 2019              		.size	main, .-main
 2020 0b44 AFF30080 		.section	.rodata
 2021 0105 000000   		.align	2
 2022              	.LC16:
 2023 0108 53642076 		.ascii	"Sd vol succeed\000"
 2023      6F6C2073 
 2023      75636365 
 2023      656400
 2024 0117 00       		.align	2
 2025              	.LC17:
 2026 0118 53642076 		.ascii	"Sd vol failed\000"
 2026      6F6C2066 
 2026      61696C65 
 2026      6400
 2027 0126 0000     		.align	2
 2028              	.LC18:
 2029 0128 666F726D 		.ascii	"format Succeeded\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 47


 2029      61742053 
 2029      75636365 
 2029      65646564 
 2029      00
 2030 0139 000000   		.align	2
 2031              	.LC19:
 2032 013c 666F726D 		.ascii	"format Failed\000"
 2032      61742046 
 2032      61696C65 
 2032      6400
 2033 014a 0000     		.align	2
 2034              	.LC20:
 2035 014c 7700     		.ascii	"w\000"
 2036 014e 0000     		.align	2
 2037              	.LC21:
 2038 0150 46696C65 		.ascii	"File \000"
 2038      2000
 2039 0156 0000     		.align	2
 2040              	.LC22:
 2041 0158 77617320 		.ascii	"was opened\000"
 2041      6F70656E 
 2041      656400
 2042 0163 00       		.align	2
 2043              	.LC23:
 2044 0164 77726974 		.ascii	"written to file\000"
 2044      74656E20 
 2044      746F2066 
 2044      696C6500 
 2045              		.align	2
 2046              	.LC24:
 2047 0174 4661696C 		.ascii	"Failed to write\000"
 2047      65642074 
 2047      6F207772 
 2047      69746500 
 2048              		.align	2
 2049              	.LC25:
 2050 0184 66696C65 		.ascii	"file not created\000"
 2050      206E6F74 
 2050      20637265 
 2050      61746564 
 2050      00
 2051 0195 000000   		.align	2
 2052              	.LC26:
 2053 0198 0A2D2D2D 		.ascii	"\012------------\012\000"
 2053      2D2D2D2D 
 2053      2D2D2D2D 
 2053      2D0A00
 2054 01a7 00       		.section	.text.SD_SETUP,"ax",%progbits
 2055              		.align	2
 2056              		.global	SD_SETUP
 2057              		.thumb
 2058              		.thumb_func
 2059              		.type	SD_SETUP, %function
 2060              	SD_SETUP:
 2061              	.LFB69:
 526:main.c        **** }
 527:main.c        **** 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 48


 528:main.c        **** int SD_SETUP(char* filename){
 2062              		.loc 1 528 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 16
 2065              		@ frame_needed = 1, uses_anonymous_args = 0
 2066 0000 90B5     		push	{r4, r7, lr}
 2067              		.cfi_def_cfa_offset 12
 2068              		.cfi_offset 4, -12
 2069              		.cfi_offset 7, -8
 2070              		.cfi_offset 14, -4
 2071 0002 85B0     		sub	sp, sp, #20
 2072              		.cfi_def_cfa_offset 32
 2073 0004 00AF     		add	r7, sp, #0
 2074              		.cfi_def_cfa_register 7
 2075 0006 7860     		str	r0, [r7, #4]
 529:main.c        **** int success = 1;
 2076              		.loc 1 529 0
 2077 0008 0123     		movs	r3, #1
 2078 000a FB60     		str	r3, [r7, #12]
 530:main.c        ****       FS_Init();
 2079              		.loc 1 530 0
 2080 000c FFF7FEFF 		bl	FS_Init
 531:main.c        ****             FS_Mount(volume);
 2081              		.loc 1 531 0
 2082 0010 3A48     		ldr	r0, .L94
 2083 0012 FFF7FEFF 		bl	FS_Mount
 532:main.c        ****             if(0 != FS_GetVolumeName(0u, volume, 9u))
 2084              		.loc 1 532 0
 2085 0016 0020     		movs	r0, #0
 2086 0018 3849     		ldr	r1, .L94
 2087 001a 0922     		movs	r2, #9
 2088 001c FFF7FEFF 		bl	FS_GetVolumeName
 2089 0020 0346     		mov	r3, r0
 2090 0022 002B     		cmp	r3, #0
 2091 0024 03D0     		beq	.L85
 533:main.c        ****                 /* Getting volume name succeeded so prompt it on the LCD */
 534:main.c        ****                 LCD_print("Sd vol succeed");
 2092              		.loc 1 534 0
 2093 0026 3648     		ldr	r0, .L94+4
 2094 0028 FFF7FEFF 		bl	LCD_print
 2095 002c 04E0     		b	.L86
 2096              	.L85:
 535:main.c        ****             else{
 536:main.c        ****                 LCD_print("Sd vol failed");
 2097              		.loc 1 536 0
 2098 002e 3548     		ldr	r0, .L94+8
 2099 0030 FFF7FEFF 		bl	LCD_print
 537:main.c        ****                 success = 0;
 2100              		.loc 1 537 0
 2101 0034 0023     		movs	r3, #0
 2102 0036 FB60     		str	r3, [r7, #12]
 2103              	.L86:
 538:main.c        ****             }
 539:main.c        ****             CyDelay(500u);
 2104              		.loc 1 539 0
 2105 0038 4FF4FA70 		mov	r0, #500
 2106 003c FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 49


 540:main.c        ****             clear();
 2107              		.loc 1 540 0
 2108 0040 FFF7FEFF 		bl	clear
 541:main.c        ****             if(0 == FS_FormatSD(volume))
 2109              		.loc 1 541 0
 2110 0044 2D48     		ldr	r0, .L94
 2111 0046 FFF7FEFF 		bl	FS_FormatSD
 2112 004a 0346     		mov	r3, r0
 2113 004c 002B     		cmp	r3, #0
 2114 004e 03D1     		bne	.L87
 542:main.c        ****                 LCD_print("format Succeeded");
 2115              		.loc 1 542 0
 2116 0050 2D48     		ldr	r0, .L94+12
 2117 0052 FFF7FEFF 		bl	LCD_print
 2118 0056 04E0     		b	.L88
 2119              	.L87:
 543:main.c        ****             else{
 544:main.c        ****                 LCD_print("format Failed");
 2120              		.loc 1 544 0
 2121 0058 2C48     		ldr	r0, .L94+16
 2122 005a FFF7FEFF 		bl	LCD_print
 545:main.c        ****                 success = 0;
 2123              		.loc 1 545 0
 2124 005e 0023     		movs	r3, #0
 2125 0060 FB60     		str	r3, [r7, #12]
 2126              	.L88:
 546:main.c        ****             }
 547:main.c        ****             
 548:main.c        ****             CyDelay(500u);
 2127              		.loc 1 548 0
 2128 0062 4FF4FA70 		mov	r0, #500
 2129 0066 FFF7FEFF 		bl	CyDelay
 549:main.c        ****             clear();
 2130              		.loc 1 549 0
 2131 006a FFF7FEFF 		bl	clear
 550:main.c        ****             
 551:main.c        ****             fsfile = FS_FOpen(filename, "w");
 2132              		.loc 1 551 0
 2133 006e 7868     		ldr	r0, [r7, #4]
 2134 0070 2749     		ldr	r1, .L94+20
 2135 0072 FFF7FEFF 		bl	FS_FOpen
 2136 0076 0246     		mov	r2, r0
 2137 0078 264B     		ldr	r3, .L94+24
 2138 007a 1A60     		str	r2, [r3]
 552:main.c        ****             if(fsfile)
 2139              		.loc 1 552 0
 2140 007c 254B     		ldr	r3, .L94+24
 2141 007e 1B68     		ldr	r3, [r3]
 2142 0080 002B     		cmp	r3, #0
 2143 0082 29D0     		beq	.L89
 553:main.c        ****             {
 554:main.c        ****                 /* Indicate successful file creation message */
 555:main.c        ****                 LCD_print("File ");
 2144              		.loc 1 555 0
 2145 0084 2448     		ldr	r0, .L94+28
 2146 0086 FFF7FEFF 		bl	LCD_print
 556:main.c        ****                 LCD_print("was opened");
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 50


 2147              		.loc 1 556 0
 2148 008a 2448     		ldr	r0, .L94+32
 2149 008c FFF7FEFF 		bl	LCD_print
 557:main.c        ****                 /* Need some delay to indicate output on the LCD */
 558:main.c        ****                 CyDelay(500u);
 2150              		.loc 1 558 0
 2151 0090 4FF4FA70 		mov	r0, #500
 2152 0094 FFF7FEFF 		bl	CyDelay
 559:main.c        ****                 clear();
 2153              		.loc 1 559 0
 2154 0098 FFF7FEFF 		bl	clear
 560:main.c        ****                 
 561:main.c        ****                 if(0 != FS_Write(fsfile, filename, strlen(filename))) 
 2155              		.loc 1 561 0
 2156 009c 1D4B     		ldr	r3, .L94+24
 2157 009e 1C68     		ldr	r4, [r3]
 2158 00a0 7868     		ldr	r0, [r7, #4]
 2159 00a2 FFF7FEFF 		bl	strlen
 2160 00a6 0346     		mov	r3, r0
 2161 00a8 2046     		mov	r0, r4
 2162 00aa 7968     		ldr	r1, [r7, #4]
 2163 00ac 1A46     		mov	r2, r3
 2164 00ae FFF7FEFF 		bl	FS_Write
 2165 00b2 0346     		mov	r3, r0
 2166 00b4 002B     		cmp	r3, #0
 2167 00b6 03D0     		beq	.L90
 562:main.c        ****                     /* Inditate that data was written to a file */
 563:main.c        ****                     LCD_print("written to file");
 2168              		.loc 1 563 0
 2169 00b8 1948     		ldr	r0, .L94+36
 2170 00ba FFF7FEFF 		bl	LCD_print
 2171 00be 06E0     		b	.L91
 2172              	.L90:
 564:main.c        ****                 else {
 565:main.c        ****                     LCD_print("Failed to write");
 2173              		.loc 1 565 0
 2174 00c0 1848     		ldr	r0, .L94+40
 2175 00c2 FFF7FEFF 		bl	LCD_print
 566:main.c        ****                     success = 0;
 2176              		.loc 1 566 0
 2177 00c6 0023     		movs	r3, #0
 2178 00c8 FB60     		str	r3, [r7, #12]
 567:main.c        ****                     clear();
 2179              		.loc 1 567 0
 2180 00ca FFF7FEFF 		bl	clear
 2181              	.L91:
 568:main.c        ****                 }
 569:main.c        ****                 CyDelay(500u);
 2182              		.loc 1 569 0
 2183 00ce 4FF4FA70 		mov	r0, #500
 2184 00d2 FFF7FEFF 		bl	CyDelay
 2185 00d6 04E0     		b	.L92
 2186              	.L89:
 570:main.c        ****             }
 571:main.c        ****             else{
 572:main.c        ****                 LCD_print("file not created");
 2187              		.loc 1 572 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 51


 2188 00d8 1348     		ldr	r0, .L94+44
 2189 00da FFF7FEFF 		bl	LCD_print
 573:main.c        ****                 success = 0;
 2190              		.loc 1 573 0
 2191 00de 0023     		movs	r3, #0
 2192 00e0 FB60     		str	r3, [r7, #12]
 2193              	.L92:
 574:main.c        ****             }
 575:main.c        ****         FS_Write(fsfile, "\n------------\n", 14);
 2194              		.loc 1 575 0
 2195 00e2 0C4B     		ldr	r3, .L94+24
 2196 00e4 1B68     		ldr	r3, [r3]
 2197 00e6 1846     		mov	r0, r3
 2198 00e8 1049     		ldr	r1, .L94+48
 2199 00ea 0E22     		movs	r2, #14
 2200 00ec FFF7FEFF 		bl	FS_Write
 576:main.c        **** return success;
 2201              		.loc 1 576 0
 2202 00f0 FB68     		ldr	r3, [r7, #12]
 577:main.c        **** }
 2203              		.loc 1 577 0
 2204 00f2 1846     		mov	r0, r3
 2205 00f4 1437     		adds	r7, r7, #20
 2206              		.cfi_def_cfa_offset 12
 2207 00f6 BD46     		mov	sp, r7
 2208              		.cfi_def_cfa_register 13
 2209              		@ sp needed
 2210 00f8 90BD     		pop	{r4, r7, pc}
 2211              	.L95:
 2212 00fa 00BF     		.align	2
 2213              	.L94:
 2214 00fc 00000000 		.word	volume
 2215 0100 08010000 		.word	.LC16
 2216 0104 18010000 		.word	.LC17
 2217 0108 28010000 		.word	.LC18
 2218 010c 3C010000 		.word	.LC19
 2219 0110 4C010000 		.word	.LC20
 2220 0114 00000000 		.word	fsfile
 2221 0118 50010000 		.word	.LC21
 2222 011c 58010000 		.word	.LC22
 2223 0120 64010000 		.word	.LC23
 2224 0124 74010000 		.word	.LC24
 2225 0128 84010000 		.word	.LC25
 2226 012c 98010000 		.word	.LC26
 2227              		.cfi_endproc
 2228              	.LFE69:
 2229              		.size	SD_SETUP, .-SD_SETUP
 2230              		.text
 2231              	.Letext0:
 2232              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2233              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2234              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2235              		.file 5 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 2236              		.file 6 "functions.h"
 2237              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2238              		.file 8 "./mpu6050.h"
 2239              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 52


 2240              	.Ldebug_info0:
 2241 0000 E1060000 		.4byte	0x6e1
 2242 0004 0400     		.2byte	0x4
 2243 0006 00000000 		.4byte	.Ldebug_abbrev0
 2244 000a 04       		.byte	0x4
 2245 000b 01       		.uleb128 0x1
 2246 000c 1F010000 		.4byte	.LASF89
 2247 0010 01       		.byte	0x1
 2248 0011 35030000 		.4byte	.LASF90
 2249 0015 B8020000 		.4byte	.LASF91
 2250 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2251 001d 00000000 		.4byte	0
 2252 0021 00000000 		.4byte	.Ldebug_line0
 2253 0025 02       		.uleb128 0x2
 2254 0026 01       		.byte	0x1
 2255 0027 06       		.byte	0x6
 2256 0028 21020000 		.4byte	.LASF0
 2257 002c 03       		.uleb128 0x3
 2258 002d 32040000 		.4byte	.LASF2
 2259 0031 02       		.byte	0x2
 2260 0032 1D       		.byte	0x1d
 2261 0033 37000000 		.4byte	0x37
 2262 0037 02       		.uleb128 0x2
 2263 0038 01       		.byte	0x1
 2264 0039 08       		.byte	0x8
 2265 003a 01020000 		.4byte	.LASF1
 2266 003e 03       		.uleb128 0x3
 2267 003f 88030000 		.4byte	.LASF3
 2268 0043 02       		.byte	0x2
 2269 0044 29       		.byte	0x29
 2270 0045 49000000 		.4byte	0x49
 2271 0049 02       		.uleb128 0x2
 2272 004a 02       		.byte	0x2
 2273 004b 05       		.byte	0x5
 2274 004c BB000000 		.4byte	.LASF4
 2275 0050 02       		.uleb128 0x2
 2276 0051 02       		.byte	0x2
 2277 0052 07       		.byte	0x7
 2278 0053 71020000 		.4byte	.LASF5
 2279 0057 03       		.uleb128 0x3
 2280 0058 7E030000 		.4byte	.LASF6
 2281 005c 02       		.byte	0x2
 2282 005d 3F       		.byte	0x3f
 2283 005e 62000000 		.4byte	0x62
 2284 0062 02       		.uleb128 0x2
 2285 0063 04       		.byte	0x4
 2286 0064 05       		.byte	0x5
 2287 0065 8E020000 		.4byte	.LASF7
 2288 0069 03       		.uleb128 0x3
 2289 006a 6B030000 		.4byte	.LASF8
 2290 006e 02       		.byte	0x2
 2291 006f 41       		.byte	0x41
 2292 0070 74000000 		.4byte	0x74
 2293 0074 02       		.uleb128 0x2
 2294 0075 04       		.byte	0x4
 2295 0076 07       		.byte	0x7
 2296 0077 41030000 		.4byte	.LASF9
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 53


 2297 007b 02       		.uleb128 0x2
 2298 007c 08       		.byte	0x8
 2299 007d 05       		.byte	0x5
 2300 007e 00010000 		.4byte	.LASF10
 2301 0082 02       		.uleb128 0x2
 2302 0083 08       		.byte	0x8
 2303 0084 07       		.byte	0x7
 2304 0085 2D020000 		.4byte	.LASF11
 2305 0089 04       		.uleb128 0x4
 2306 008a 04       		.byte	0x4
 2307 008b 05       		.byte	0x5
 2308 008c 696E7400 		.ascii	"int\000"
 2309 0090 02       		.uleb128 0x2
 2310 0091 04       		.byte	0x4
 2311 0092 07       		.byte	0x7
 2312 0093 57020000 		.4byte	.LASF12
 2313 0097 03       		.uleb128 0x3
 2314 0098 D5000000 		.4byte	.LASF13
 2315 009c 03       		.byte	0x3
 2316 009d 15       		.byte	0x15
 2317 009e 2C000000 		.4byte	0x2c
 2318 00a2 03       		.uleb128 0x3
 2319 00a3 A4020000 		.4byte	.LASF14
 2320 00a7 03       		.byte	0x3
 2321 00a8 20       		.byte	0x20
 2322 00a9 3E000000 		.4byte	0x3e
 2323 00ad 03       		.uleb128 0x3
 2324 00ae 9C020000 		.4byte	.LASF15
 2325 00b2 03       		.byte	0x3
 2326 00b3 2C       		.byte	0x2c
 2327 00b4 57000000 		.4byte	0x57
 2328 00b8 03       		.uleb128 0x3
 2329 00b9 44020000 		.4byte	.LASF16
 2330 00bd 03       		.byte	0x3
 2331 00be 2D       		.byte	0x2d
 2332 00bf 69000000 		.4byte	0x69
 2333 00c3 05       		.uleb128 0x5
 2334 00c4 AC020000 		.4byte	.LASF17
 2335 00c8 04       		.byte	0x4
 2336 00c9 9201     		.2byte	0x192
 2337 00cb 37000000 		.4byte	0x37
 2338 00cf 02       		.uleb128 0x2
 2339 00d0 04       		.byte	0x4
 2340 00d1 04       		.byte	0x4
 2341 00d2 EC000000 		.4byte	.LASF18
 2342 00d6 02       		.uleb128 0x2
 2343 00d7 08       		.byte	0x8
 2344 00d8 04       		.byte	0x4
 2345 00d9 64030000 		.4byte	.LASF19
 2346 00dd 02       		.uleb128 0x2
 2347 00de 01       		.byte	0x1
 2348 00df 08       		.byte	0x8
 2349 00e0 89020000 		.4byte	.LASF20
 2350 00e4 05       		.uleb128 0x5
 2351 00e5 3C030000 		.4byte	.LASF21
 2352 00e9 04       		.byte	0x4
 2353 00ea 3C02     		.2byte	0x23c
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 54


 2354 00ec F0000000 		.4byte	0xf0
 2355 00f0 06       		.uleb128 0x6
 2356 00f1 C3000000 		.4byte	0xc3
 2357 00f5 02       		.uleb128 0x2
 2358 00f6 04       		.byte	0x4
 2359 00f7 07       		.byte	0x7
 2360 00f8 9D030000 		.4byte	.LASF22
 2361 00fc 07       		.uleb128 0x7
 2362 00fd 04       		.byte	0x4
 2363 00fe DD000000 		.4byte	0xdd
 2364 0102 03       		.uleb128 0x3
 2365 0103 0F020000 		.4byte	.LASF23
 2366 0107 05       		.byte	0x5
 2367 0108 7E       		.byte	0x7e
 2368 0109 0D010000 		.4byte	0x10d
 2369 010d 08       		.uleb128 0x8
 2370 010e 0F020000 		.4byte	.LASF23
 2371 0112 07       		.uleb128 0x7
 2372 0113 04       		.byte	0x4
 2373 0114 02010000 		.4byte	0x102
 2374 0118 02       		.uleb128 0x2
 2375 0119 08       		.byte	0x8
 2376 011a 04       		.byte	0x4
 2377 011b E6010000 		.4byte	.LASF24
 2378 011f 09       		.uleb128 0x9
 2379 0120 43000000 		.4byte	.LASF32
 2380 0124 01       		.byte	0x1
 2381 0125 06       		.byte	0x6
 2382 0126 35       		.byte	0x35
 2383 0127 56010000 		.4byte	0x156
 2384 012b 0A       		.uleb128 0xa
 2385 012c 36000000 		.4byte	.LASF25
 2386 0130 00       		.sleb128 0
 2387 0131 0A       		.uleb128 0xa
 2388 0132 F2010000 		.4byte	.LASF26
 2389 0136 01       		.sleb128 1
 2390 0137 0A       		.uleb128 0xa
 2391 0138 53030000 		.4byte	.LASF27
 2392 013c 02       		.sleb128 2
 2393 013d 0A       		.uleb128 0xa
 2394 013e 71000000 		.4byte	.LASF28
 2395 0142 03       		.sleb128 3
 2396 0143 0A       		.uleb128 0xa
 2397 0144 0D000000 		.4byte	.LASF29
 2398 0148 04       		.sleb128 4
 2399 0149 0A       		.uleb128 0xa
 2400 014a 16010000 		.4byte	.LASF30
 2401 014e 05       		.sleb128 5
 2402 014f 0A       		.uleb128 0xa
 2403 0150 D3010000 		.4byte	.LASF31
 2404 0154 06       		.sleb128 6
 2405 0155 00       		.byte	0
 2406 0156 03       		.uleb128 0x3
 2407 0157 43000000 		.4byte	.LASF32
 2408 015b 06       		.byte	0x6
 2409 015c 3D       		.byte	0x3d
 2410 015d 1F010000 		.4byte	0x11f
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 55


 2411 0161 0B       		.uleb128 0xb
 2412 0162 8A000000 		.4byte	.LASF33
 2413 0166 01       		.byte	0x1
 2414 0167 63       		.byte	0x63
 2415 0168 00000000 		.4byte	.LFB63
 2416 016c 20000000 		.4byte	.LFE63-.LFB63
 2417 0170 01       		.uleb128 0x1
 2418 0171 9C       		.byte	0x9c
 2419 0172 0C       		.uleb128 0xc
 2420 0173 04040000 		.4byte	.LASF34
 2421 0177 01       		.byte	0x1
 2422 0178 6A       		.byte	0x6a
 2423 0179 00000000 		.4byte	.LFB64
 2424 017d 40000000 		.4byte	.LFE64-.LFB64
 2425 0181 01       		.uleb128 0x1
 2426 0182 9C       		.byte	0x9c
 2427 0183 0C       		.uleb128 0xc
 2428 0184 1F030000 		.4byte	.LASF35
 2429 0188 01       		.byte	0x1
 2430 0189 73       		.byte	0x73
 2431 018a 00000000 		.4byte	.LFB65
 2432 018e 80000000 		.4byte	.LFE65-.LFB65
 2433 0192 01       		.uleb128 0x1
 2434 0193 9C       		.byte	0x9c
 2435 0194 0B       		.uleb128 0xb
 2436 0195 D4030000 		.4byte	.LASF36
 2437 0199 01       		.byte	0x1
 2438 019a 83       		.byte	0x83
 2439 019b 00000000 		.4byte	.LFB66
 2440 019f 50000000 		.4byte	.LFE66-.LFB66
 2441 01a3 01       		.uleb128 0x1
 2442 01a4 9C       		.byte	0x9c
 2443 01a5 0C       		.uleb128 0xc
 2444 01a6 AC030000 		.4byte	.LASF37
 2445 01aa 01       		.byte	0x1
 2446 01ab 8D       		.byte	0x8d
 2447 01ac 00000000 		.4byte	.LFB67
 2448 01b0 58000000 		.4byte	.LFE67-.LFB67
 2449 01b4 01       		.uleb128 0x1
 2450 01b5 9C       		.byte	0x9c
 2451 01b6 0D       		.uleb128 0xd
 2452 01b7 97020000 		.4byte	.LASF92
 2453 01bb 01       		.byte	0x1
 2454 01bc 95       		.byte	0x95
 2455 01bd 89000000 		.4byte	0x89
 2456 01c1 00000000 		.4byte	.LFB68
 2457 01c5 440B0000 		.4byte	.LFE68-.LFB68
 2458 01c9 01       		.uleb128 0x1
 2459 01ca 9C       		.byte	0x9c
 2460 01cb C2030000 		.4byte	0x3c2
 2461 01cf 0E       		.uleb128 0xe
 2462 01d0 6E756D00 		.ascii	"num\000"
 2463 01d4 01       		.byte	0x1
 2464 01d5 97       		.byte	0x97
 2465 01d6 89000000 		.4byte	0x89
 2466 01da 02       		.uleb128 0x2
 2467 01db 91       		.byte	0x91
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 56


 2468 01dc 60       		.sleb128 -32
 2469 01dd 0F       		.uleb128 0xf
 2470 01de E3000000 		.4byte	.LASF38
 2471 01e2 01       		.byte	0x1
 2472 01e3 97       		.byte	0x97
 2473 01e4 89000000 		.4byte	0x89
 2474 01e8 02       		.uleb128 0x2
 2475 01e9 91       		.byte	0x91
 2476 01ea 5C       		.sleb128 -36
 2477 01eb 0F       		.uleb128 0xf
 2478 01ec B2010000 		.4byte	.LASF39
 2479 01f0 01       		.byte	0x1
 2480 01f1 98       		.byte	0x98
 2481 01f2 CF000000 		.4byte	0xcf
 2482 01f6 02       		.uleb128 0x2
 2483 01f7 91       		.byte	0x91
 2484 01f8 58       		.sleb128 -40
 2485 01f9 0F       		.uleb128 0xf
 2486 01fa 64020000 		.4byte	.LASF40
 2487 01fe 01       		.byte	0x1
 2488 01ff 98       		.byte	0x98
 2489 0200 CF000000 		.4byte	0xcf
 2490 0204 02       		.uleb128 0x2
 2491 0205 91       		.byte	0x91
 2492 0206 54       		.sleb128 -44
 2493 0207 0F       		.uleb128 0xf
 2494 0208 BB030000 		.4byte	.LASF41
 2495 020c 01       		.byte	0x1
 2496 020d 98       		.byte	0x98
 2497 020e CF000000 		.4byte	0xcf
 2498 0212 02       		.uleb128 0x2
 2499 0213 91       		.byte	0x91
 2500 0214 50       		.sleb128 -48
 2501 0215 0F       		.uleb128 0xf
 2502 0216 AE000000 		.4byte	.LASF42
 2503 021a 01       		.byte	0x1
 2504 021b 98       		.byte	0x98
 2505 021c CF000000 		.4byte	0xcf
 2506 0220 02       		.uleb128 0x2
 2507 0221 91       		.byte	0x91
 2508 0222 6C       		.sleb128 -20
 2509 0223 0E       		.uleb128 0xe
 2510 0224 62756600 		.ascii	"buf\000"
 2511 0228 01       		.byte	0x1
 2512 0229 99       		.byte	0x99
 2513 022a C2030000 		.4byte	0x3c2
 2514 022e 03       		.uleb128 0x3
 2515 022f 91       		.byte	0x91
 2516 0230 947F     		.sleb128 -108
 2517 0232 0F       		.uleb128 0xf
 2518 0233 76030000 		.4byte	.LASF43
 2519 0237 01       		.byte	0x1
 2520 0238 99       		.byte	0x99
 2521 0239 D2030000 		.4byte	0x3d2
 2522 023d 03       		.uleb128 0x3
 2523 023e 91       		.byte	0x91
 2524 023f 807F     		.sleb128 -128
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 57


 2525 0241 0F       		.uleb128 0xf
 2526 0242 EF020000 		.4byte	.LASF44
 2527 0246 01       		.byte	0x1
 2528 0247 99       		.byte	0x99
 2529 0248 E2030000 		.4byte	0x3e2
 2530 024c 03       		.uleb128 0x3
 2531 024d 91       		.byte	0x91
 2532 024e F07E     		.sleb128 -144
 2533 0250 0F       		.uleb128 0xf
 2534 0251 92030000 		.4byte	.LASF45
 2535 0255 01       		.byte	0x1
 2536 0256 9A       		.byte	0x9a
 2537 0257 F2030000 		.4byte	0x3f2
 2538 025b 03       		.uleb128 0x3
 2539 025c 91       		.byte	0x91
 2540 025d DC7E     		.sleb128 -164
 2541 025f 0F       		.uleb128 0xf
 2542 0260 1E040000 		.4byte	.LASF46
 2543 0264 01       		.byte	0x1
 2544 0265 9B       		.byte	0x9b
 2545 0266 E2030000 		.4byte	0x3e2
 2546 026a 03       		.uleb128 0x3
 2547 026b 91       		.byte	0x91
 2548 026c CC7E     		.sleb128 -180
 2549 026e 0F       		.uleb128 0xf
 2550 026f 9F000000 		.4byte	.LASF47
 2551 0273 01       		.byte	0x1
 2552 0274 9C       		.byte	0x9c
 2553 0275 02040000 		.4byte	0x402
 2554 0279 03       		.uleb128 0x3
 2555 027a 91       		.byte	0x91
 2556 027b B87E     		.sleb128 -200
 2557 027d 0F       		.uleb128 0xf
 2558 027e 07030000 		.4byte	.LASF48
 2559 0282 01       		.byte	0x1
 2560 0283 9D       		.byte	0x9d
 2561 0284 02040000 		.4byte	0x402
 2562 0288 03       		.uleb128 0x3
 2563 0289 91       		.byte	0x91
 2564 028a A47E     		.sleb128 -220
 2565 028c 0F       		.uleb128 0xf
 2566 028d CA010000 		.4byte	.LASF49
 2567 0291 01       		.byte	0x1
 2568 0292 9E       		.byte	0x9e
 2569 0293 12040000 		.4byte	0x412
 2570 0297 03       		.uleb128 0x3
 2571 0298 91       		.byte	0x91
 2572 0299 947E     		.sleb128 -236
 2573 029b 0F       		.uleb128 0xf
 2574 029c F2000000 		.4byte	.LASF50
 2575 02a0 01       		.byte	0x1
 2576 02a1 9F       		.byte	0x9f
 2577 02a2 89000000 		.4byte	0x89
 2578 02a6 02       		.uleb128 0x2
 2579 02a7 91       		.byte	0x91
 2580 02a8 68       		.sleb128 -24
 2581 02a9 0F       		.uleb128 0xf
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 58


 2582 02aa DD000000 		.4byte	.LASF51
 2583 02ae 01       		.byte	0x1
 2584 02af 9F       		.byte	0x9f
 2585 02b0 89000000 		.4byte	0x89
 2586 02b4 02       		.uleb128 0x2
 2587 02b5 91       		.byte	0x91
 2588 02b6 64       		.sleb128 -28
 2589 02b7 10       		.uleb128 0x10
 2590 02b8 617800   		.ascii	"ax\000"
 2591 02bb 01       		.byte	0x1
 2592 02bc A1       		.byte	0xa1
 2593 02bd A2000000 		.4byte	0xa2
 2594 02c1 10       		.uleb128 0x10
 2595 02c2 617900   		.ascii	"ay\000"
 2596 02c5 01       		.byte	0x1
 2597 02c6 A1       		.byte	0xa1
 2598 02c7 A2000000 		.4byte	0xa2
 2599 02cb 0E       		.uleb128 0xe
 2600 02cc 617A00   		.ascii	"az\000"
 2601 02cf 01       		.byte	0x1
 2602 02d0 A1       		.byte	0xa1
 2603 02d1 A2000000 		.4byte	0xa2
 2604 02d5 02       		.uleb128 0x2
 2605 02d6 91       		.byte	0x91
 2606 02d7 46       		.sleb128 -58
 2607 02d8 10       		.uleb128 0x10
 2608 02d9 6900     		.ascii	"i\000"
 2609 02db 01       		.byte	0x1
 2610 02dc A1       		.byte	0xa1
 2611 02dd A2000000 		.4byte	0xa2
 2612 02e1 0E       		.uleb128 0xe
 2613 02e2 677800   		.ascii	"gx\000"
 2614 02e5 01       		.byte	0x1
 2615 02e6 A2       		.byte	0xa2
 2616 02e7 A2000000 		.4byte	0xa2
 2617 02eb 03       		.uleb128 0x3
 2618 02ec 91       		.byte	0x91
 2619 02ed 927E     		.sleb128 -238
 2620 02ef 0E       		.uleb128 0xe
 2621 02f0 677900   		.ascii	"gy\000"
 2622 02f3 01       		.byte	0x1
 2623 02f4 A2       		.byte	0xa2
 2624 02f5 A2000000 		.4byte	0xa2
 2625 02f9 03       		.uleb128 0x3
 2626 02fa 91       		.byte	0x91
 2627 02fb 907E     		.sleb128 -240
 2628 02fd 0E       		.uleb128 0xe
 2629 02fe 677A00   		.ascii	"gz\000"
 2630 0301 01       		.byte	0x1
 2631 0302 A2       		.byte	0xa2
 2632 0303 A2000000 		.4byte	0xa2
 2633 0307 03       		.uleb128 0x3
 2634 0308 91       		.byte	0x91
 2635 0309 8E7E     		.sleb128 -242
 2636 030b 0F       		.uleb128 0xf
 2637 030c FE020000 		.4byte	.LASF52
 2638 0310 01       		.byte	0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 59


 2639 0311 A3       		.byte	0xa3
 2640 0312 A2000000 		.4byte	0xa2
 2641 0316 02       		.uleb128 0x2
 2642 0317 91       		.byte	0x91
 2643 0318 4E       		.sleb128 -50
 2644 0319 0F       		.uleb128 0xf
 2645 031a AD010000 		.4byte	.LASF53
 2646 031e 01       		.byte	0x1
 2647 031f A4       		.byte	0xa4
 2648 0320 89000000 		.4byte	0x89
 2649 0324 03       		.uleb128 0x3
 2650 0325 91       		.byte	0x91
 2651 0326 887E     		.sleb128 -248
 2652 0328 0F       		.uleb128 0xf
 2653 0329 EA020000 		.4byte	.LASF54
 2654 032d 01       		.byte	0x1
 2655 032e A4       		.byte	0xa4
 2656 032f 89000000 		.4byte	0x89
 2657 0333 02       		.uleb128 0x2
 2658 0334 91       		.byte	0x91
 2659 0335 48       		.sleb128 -56
 2660 0336 11       		.uleb128 0x11
 2661 0337 5E010000 		.4byte	.LBB2
 2662 033b AA090000 		.4byte	.LBE2-.LBB2
 2663 033f 12       		.uleb128 0x12
 2664 0340 7400     		.ascii	"t\000"
 2665 0342 01       		.byte	0x1
 2666 0343 1801     		.2byte	0x118
 2667 0345 89000000 		.4byte	0x89
 2668 0349 03       		.uleb128 0x3
 2669 034a 91       		.byte	0x91
 2670 034b 847E     		.sleb128 -252
 2671 034d 13       		.uleb128 0x13
 2672 034e 04020000 		.4byte	.LBB3
 2673 0352 62000000 		.4byte	.LBE3-.LBB3
 2674 0356 6A030000 		.4byte	0x36a
 2675 035a 0F       		.uleb128 0xf
 2676 035b 4A000000 		.4byte	.LASF55
 2677 035f 01       		.byte	0x1
 2678 0360 F3       		.byte	0xf3
 2679 0361 22040000 		.4byte	0x422
 2680 0365 03       		.uleb128 0x3
 2681 0366 91       		.byte	0x91
 2682 0367 C87D     		.sleb128 -312
 2683 0369 00       		.byte	0
 2684 036a 13       		.uleb128 0x13
 2685 036b 68070000 		.4byte	.LBB4
 2686 036f 46000000 		.4byte	.LBE4-.LBB4
 2687 0373 88030000 		.4byte	0x388
 2688 0377 14       		.uleb128 0x14
 2689 0378 4A000000 		.4byte	.LASF55
 2690 037c 01       		.byte	0x1
 2691 037d 7801     		.2byte	0x178
 2692 037f 22040000 		.4byte	0x422
 2693 0383 03       		.uleb128 0x3
 2694 0384 91       		.byte	0x91
 2695 0385 C87D     		.sleb128 -312
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 60


 2696 0387 00       		.byte	0
 2697 0388 13       		.uleb128 0x13
 2698 0389 200A0000 		.4byte	.LBB5
 2699 038d 34000000 		.4byte	.LBE5-.LBB5
 2700 0391 A6030000 		.4byte	0x3a6
 2701 0395 14       		.uleb128 0x14
 2702 0396 4A000000 		.4byte	.LASF55
 2703 039a 01       		.byte	0x1
 2704 039b C701     		.2byte	0x1c7
 2705 039d 22040000 		.4byte	0x422
 2706 03a1 03       		.uleb128 0x3
 2707 03a2 91       		.byte	0x91
 2708 03a3 C87D     		.sleb128 -312
 2709 03a5 00       		.byte	0
 2710 03a6 11       		.uleb128 0x11
 2711 03a7 9A0A0000 		.4byte	.LBB6
 2712 03ab 2E000000 		.4byte	.LBE6-.LBB6
 2713 03af 14       		.uleb128 0x14
 2714 03b0 4A000000 		.4byte	.LASF55
 2715 03b4 01       		.byte	0x1
 2716 03b5 E401     		.2byte	0x1e4
 2717 03b7 22040000 		.4byte	0x422
 2718 03bb 03       		.uleb128 0x3
 2719 03bc 91       		.byte	0x91
 2720 03bd C87D     		.sleb128 -312
 2721 03bf 00       		.byte	0
 2722 03c0 00       		.byte	0
 2723 03c1 00       		.byte	0
 2724 03c2 15       		.uleb128 0x15
 2725 03c3 DD000000 		.4byte	0xdd
 2726 03c7 D2030000 		.4byte	0x3d2
 2727 03cb 16       		.uleb128 0x16
 2728 03cc F5000000 		.4byte	0xf5
 2729 03d0 31       		.byte	0x31
 2730 03d1 00       		.byte	0
 2731 03d2 15       		.uleb128 0x15
 2732 03d3 DD000000 		.4byte	0xdd
 2733 03d7 E2030000 		.4byte	0x3e2
 2734 03db 16       		.uleb128 0x16
 2735 03dc F5000000 		.4byte	0xf5
 2736 03e0 13       		.byte	0x13
 2737 03e1 00       		.byte	0
 2738 03e2 15       		.uleb128 0x15
 2739 03e3 DD000000 		.4byte	0xdd
 2740 03e7 F2030000 		.4byte	0x3f2
 2741 03eb 16       		.uleb128 0x16
 2742 03ec F5000000 		.4byte	0xf5
 2743 03f0 0D       		.byte	0xd
 2744 03f1 00       		.byte	0
 2745 03f2 15       		.uleb128 0x15
 2746 03f3 DD000000 		.4byte	0xdd
 2747 03f7 02040000 		.4byte	0x402
 2748 03fb 16       		.uleb128 0x16
 2749 03fc F5000000 		.4byte	0xf5
 2750 0400 12       		.byte	0x12
 2751 0401 00       		.byte	0
 2752 0402 15       		.uleb128 0x15
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 61


 2753 0403 DD000000 		.4byte	0xdd
 2754 0407 12040000 		.4byte	0x412
 2755 040b 16       		.uleb128 0x16
 2756 040c F5000000 		.4byte	0xf5
 2757 0410 10       		.byte	0x10
 2758 0411 00       		.byte	0
 2759 0412 15       		.uleb128 0x15
 2760 0413 DD000000 		.4byte	0xdd
 2761 0417 22040000 		.4byte	0x422
 2762 041b 16       		.uleb128 0x16
 2763 041c F5000000 		.4byte	0xf5
 2764 0420 0F       		.byte	0xf
 2765 0421 00       		.byte	0
 2766 0422 15       		.uleb128 0x15
 2767 0423 DD000000 		.4byte	0xdd
 2768 0427 32040000 		.4byte	0x432
 2769 042b 16       		.uleb128 0x16
 2770 042c F5000000 		.4byte	0xf5
 2771 0430 3B       		.byte	0x3b
 2772 0431 00       		.byte	0
 2773 0432 17       		.uleb128 0x17
 2774 0433 EE030000 		.4byte	.LASF93
 2775 0437 01       		.byte	0x1
 2776 0438 1002     		.2byte	0x210
 2777 043a 89000000 		.4byte	0x89
 2778 043e 00000000 		.4byte	.LFB69
 2779 0442 30010000 		.4byte	.LFE69-.LFB69
 2780 0446 01       		.uleb128 0x1
 2781 0447 9C       		.byte	0x9c
 2782 0448 6B040000 		.4byte	0x46b
 2783 044c 18       		.uleb128 0x18
 2784 044d 81000000 		.4byte	.LASF94
 2785 0451 01       		.byte	0x1
 2786 0452 1002     		.2byte	0x210
 2787 0454 FC000000 		.4byte	0xfc
 2788 0458 02       		.uleb128 0x2
 2789 0459 91       		.byte	0x91
 2790 045a 64       		.sleb128 -28
 2791 045b 14       		.uleb128 0x14
 2792 045c F7030000 		.4byte	.LASF56
 2793 0460 01       		.byte	0x1
 2794 0461 1102     		.2byte	0x211
 2795 0463 89000000 		.4byte	0x89
 2796 0467 02       		.uleb128 0x2
 2797 0468 91       		.byte	0x91
 2798 0469 6C       		.sleb128 -20
 2799 046a 00       		.byte	0
 2800 046b 19       		.uleb128 0x19
 2801 046c E1030000 		.4byte	.LASF57
 2802 0470 07       		.byte	0x7
 2803 0471 9606     		.2byte	0x696
 2804 0473 77040000 		.4byte	0x477
 2805 0477 06       		.uleb128 0x6
 2806 0478 AD000000 		.4byte	0xad
 2807 047c 1A       		.uleb128 0x1a
 2808 047d 55000000 		.4byte	.LASF58
 2809 0481 08       		.byte	0x8
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 62


 2810 0482 9101     		.2byte	0x191
 2811 0484 97000000 		.4byte	0x97
 2812 0488 05       		.uleb128 0x5
 2813 0489 03       		.byte	0x3
 2814 048a 00000000 		.4byte	devAddr
 2815 048e 15       		.uleb128 0x15
 2816 048f 97000000 		.4byte	0x97
 2817 0493 9E040000 		.4byte	0x49e
 2818 0497 16       		.uleb128 0x16
 2819 0498 F5000000 		.4byte	0xf5
 2820 049c 15       		.byte	0x15
 2821 049d 00       		.byte	0
 2822 049e 1A       		.uleb128 0x1a
 2823 049f 18030000 		.4byte	.LASF59
 2824 04a3 08       		.byte	0x8
 2825 04a4 9201     		.2byte	0x192
 2826 04a6 8E040000 		.4byte	0x48e
 2827 04aa 05       		.uleb128 0x5
 2828 04ab 03       		.byte	0x3
 2829 04ac 00000000 		.4byte	buffer
 2830 04b0 1B       		.uleb128 0x1b
 2831 04b1 50000000 		.4byte	.LASF60
 2832 04b5 01       		.byte	0x1
 2833 04b6 34       		.byte	0x34
 2834 04b7 B8000000 		.4byte	0xb8
 2835 04bb 05       		.uleb128 0x5
 2836 04bc 03       		.byte	0x3
 2837 04bd 00000000 		.4byte	Addr
 2838 04c1 1C       		.uleb128 0x1c
 2839 04c2 696400   		.ascii	"id\000"
 2840 04c5 01       		.byte	0x1
 2841 04c6 35       		.byte	0x35
 2842 04c7 62000000 		.4byte	0x62
 2843 04cb 05       		.uleb128 0x5
 2844 04cc 03       		.byte	0x3
 2845 04cd 00000000 		.4byte	id
 2846 04d1 1B       		.uleb128 0x1b
 2847 04d2 C1010000 		.4byte	.LASF61
 2848 04d6 01       		.byte	0x1
 2849 04d7 35       		.byte	0x35
 2850 04d8 62000000 		.4byte	0x62
 2851 04dc 05       		.uleb128 0x5
 2852 04dd 03       		.byte	0x3
 2853 04de 00000000 		.4byte	press_id
 2854 04e2 1B       		.uleb128 0x1b
 2855 04e3 4D020000 		.4byte	.LASF62
 2856 04e7 01       		.byte	0x1
 2857 04e8 36       		.byte	0x36
 2858 04e9 62000000 		.4byte	0x62
 2859 04ed 05       		.uleb128 0x5
 2860 04ee 03       		.byte	0x3
 2861 04ef 00000000 		.4byte	data_time
 2862 04f3 1B       		.uleb128 0x1b
 2863 04f4 00000000 		.4byte	.LASF63
 2864 04f8 01       		.byte	0x1
 2865 04f9 37       		.byte	0x37
 2866 04fa 62000000 		.4byte	0x62
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 63


 2867 04fe 05       		.uleb128 0x5
 2868 04ff 03       		.byte	0x3
 2869 0500 00000000 		.4byte	descent_time
 2870 0504 1C       		.uleb128 0x1c
 2871 0505 73756D00 		.ascii	"sum\000"
 2872 0509 01       		.byte	0x1
 2873 050a 39       		.byte	0x39
 2874 050b 62000000 		.4byte	0x62
 2875 050f 05       		.uleb128 0x5
 2876 0510 03       		.byte	0x3
 2877 0511 00000000 		.4byte	sum
 2878 0515 1B       		.uleb128 0x1b
 2879 0516 D9010000 		.4byte	.LASF64
 2880 051a 01       		.byte	0x1
 2881 051b 3A       		.byte	0x3a
 2882 051c CF000000 		.4byte	0xcf
 2883 0520 05       		.uleb128 0x5
 2884 0521 03       		.byte	0x3
 2885 0522 00000000 		.4byte	pressure_sum
 2886 0526 1B       		.uleb128 0x1b
 2887 0527 0E010000 		.4byte	.LASF65
 2888 052b 01       		.byte	0x1
 2889 052c 3B       		.byte	0x3b
 2890 052d A2000000 		.4byte	0xa2
 2891 0531 05       		.uleb128 0x5
 2892 0532 03       		.byte	0x3
 2893 0533 00000000 		.4byte	average
 2894 0537 1B       		.uleb128 0x1b
 2895 0538 C7030000 		.4byte	.LASF66
 2896 053c 01       		.byte	0x1
 2897 053d 3C       		.byte	0x3c
 2898 053e 48050000 		.4byte	0x548
 2899 0542 05       		.uleb128 0x5
 2900 0543 03       		.byte	0x3
 2901 0544 00000000 		.4byte	collect_flag
 2902 0548 02       		.uleb128 0x2
 2903 0549 01       		.byte	0x1
 2904 054a 02       		.byte	0x2
 2905 054b B2020000 		.4byte	.LASF67
 2906 054f 1B       		.uleb128 0x1b
 2907 0550 28040000 		.4byte	.LASF68
 2908 0554 01       		.byte	0x1
 2909 0555 3D       		.byte	0x3d
 2910 0556 48050000 		.4byte	0x548
 2911 055a 05       		.uleb128 0x5
 2912 055b 03       		.byte	0x3
 2913 055c 00000000 		.4byte	wait_flag
 2914 0560 1B       		.uleb128 0x1b
 2915 0561 C5000000 		.4byte	.LASF69
 2916 0565 01       		.byte	0x1
 2917 0566 3E       		.byte	0x3e
 2918 0567 48050000 		.4byte	0x548
 2919 056b 05       		.uleb128 0x5
 2920 056c 03       		.byte	0x3
 2921 056d 00000000 		.4byte	PANIC_flag
 2922 0571 1B       		.uleb128 0x1b
 2923 0572 A6030000 		.4byte	.LASF70
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 64


 2924 0576 01       		.byte	0x1
 2925 0577 40       		.byte	0x40
 2926 0578 56010000 		.4byte	0x156
 2927 057c 05       		.uleb128 0x5
 2928 057d 03       		.byte	0x3
 2929 057e 00000000 		.4byte	STATE
 2930 0582 1B       		.uleb128 0x1b
 2931 0583 69020000 		.4byte	.LASF71
 2932 0587 01       		.byte	0x1
 2933 0588 41       		.byte	0x41
 2934 0589 97000000 		.4byte	0x97
 2935 058d 05       		.uleb128 0x5
 2936 058e 03       		.byte	0x3
 2937 058f 00000000 		.4byte	testnum
 2938 0593 1B       		.uleb128 0x1b
 2939 0594 17020000 		.4byte	.LASF72
 2940 0598 01       		.byte	0x1
 2941 0599 41       		.byte	0x41
 2942 059a 97000000 		.4byte	0x97
 2943 059e 05       		.uleb128 0x5
 2944 059f 03       		.byte	0x3
 2945 05a0 00000000 		.4byte	countdown
 2946 05a4 1B       		.uleb128 0x1b
 2947 05a5 21000000 		.4byte	.LASF73
 2948 05a9 01       		.byte	0x1
 2949 05aa 41       		.byte	0x41
 2950 05ab 97000000 		.4byte	0x97
 2951 05af 05       		.uleb128 0x5
 2952 05b0 03       		.byte	0x3
 2953 05b1 00000000 		.4byte	update_Data
 2954 05b5 15       		.uleb128 0x15
 2955 05b6 97000000 		.4byte	0x97
 2956 05ba C5050000 		.4byte	0x5c5
 2957 05be 16       		.uleb128 0x16
 2958 05bf F5000000 		.4byte	0xf5
 2959 05c3 3F       		.byte	0x3f
 2960 05c4 00       		.byte	0
 2961 05c5 1B       		.uleb128 0x1b
 2962 05c6 2D000000 		.4byte	.LASF74
 2963 05ca 01       		.byte	0x1
 2964 05cb 42       		.byte	0x42
 2965 05cc B5050000 		.4byte	0x5b5
 2966 05d0 05       		.uleb128 0x5
 2967 05d1 03       		.byte	0x3
 2968 05d2 00000000 		.4byte	RxBuffer
 2969 05d6 1B       		.uleb128 0x1b
 2970 05d7 17000000 		.4byte	.LASF75
 2971 05db 01       		.byte	0x1
 2972 05dc 43       		.byte	0x43
 2973 05dd 89000000 		.4byte	0x89
 2974 05e1 05       		.uleb128 0x5
 2975 05e2 03       		.byte	0x3
 2976 05e3 00000000 		.4byte	msg_count
 2977 05e7 1B       		.uleb128 0x1b
 2978 05e8 11030000 		.4byte	.LASF76
 2979 05ec 01       		.byte	0x1
 2980 05ed 43       		.byte	0x43
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 65


 2981 05ee 89000000 		.4byte	0x89
 2982 05f2 05       		.uleb128 0x5
 2983 05f3 03       		.byte	0x3
 2984 05f4 00000000 		.4byte	rxflag
 2985 05f8 1B       		.uleb128 0x1b
 2986 05f9 5E030000 		.4byte	.LASF77
 2987 05fd 01       		.byte	0x1
 2988 05fe 43       		.byte	0x43
 2989 05ff 89000000 		.4byte	0x89
 2990 0603 05       		.uleb128 0x5
 2991 0604 03       		.byte	0x3
 2992 0605 00000000 		.4byte	bytes
 2993 0609 1B       		.uleb128 0x1b
 2994 060a 78000000 		.4byte	.LASF78
 2995 060e 01       		.byte	0x1
 2996 060f 43       		.byte	0x43
 2997 0610 89000000 		.4byte	0x89
 2998 0614 05       		.uleb128 0x5
 2999 0615 03       		.byte	0x3
 3000 0616 00000000 		.4byte	dataflag
 3001 061a 1B       		.uleb128 0x1b
 3002 061b 5D000000 		.4byte	.LASF79
 3003 061f 01       		.byte	0x1
 3004 0620 43       		.byte	0x43
 3005 0621 89000000 		.4byte	0x89
 3006 0625 05       		.uleb128 0x5
 3007 0626 03       		.byte	0x3
 3008 0627 00000000 		.4byte	transmit_flag
 3009 062b 1B       		.uleb128 0x1b
 3010 062c F8020000 		.4byte	.LASF80
 3011 0630 01       		.byte	0x1
 3012 0631 44       		.byte	0x44
 3013 0632 89000000 		.4byte	0x89
 3014 0636 05       		.uleb128 0x5
 3015 0637 03       		.byte	0x3
 3016 0638 00000000 		.4byte	depth
 3017 063c 1B       		.uleb128 0x1b
 3018 063d 6B000000 		.4byte	.LASF81
 3019 0641 01       		.byte	0x1
 3020 0642 44       		.byte	0x44
 3021 0643 89000000 		.4byte	0x89
 3022 0647 05       		.uleb128 0x5
 3023 0648 03       		.byte	0x3
 3024 0649 00000000 		.4byte	reset
 3025 064d 1B       		.uleb128 0x1b
 3026 064e FF030000 		.4byte	.LASF82
 3027 0652 01       		.byte	0x1
 3028 0653 45       		.byte	0x45
 3029 0654 CF000000 		.4byte	0xcf
 3030 0658 05       		.uleb128 0x5
 3031 0659 03       		.byte	0x3
 3032 065a 00000000 		.4byte	xavg
 3033 065e 1B       		.uleb128 0x1b
 3034 065f D0000000 		.4byte	.LASF83
 3035 0663 01       		.byte	0x1
 3036 0664 45       		.byte	0x45
 3037 0665 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 66


 3038 0669 05       		.uleb128 0x5
 3039 066a 03       		.byte	0x3
 3040 066b 00000000 		.4byte	yavg
 3041 066f 1B       		.uleb128 0x1b
 3042 0670 84020000 		.4byte	.LASF84
 3043 0674 01       		.byte	0x1
 3044 0675 45       		.byte	0x45
 3045 0676 CF000000 		.4byte	0xcf
 3046 067a 05       		.uleb128 0x5
 3047 067b 03       		.byte	0x3
 3048 067c 00000000 		.4byte	xsum
 3049 0680 1B       		.uleb128 0x1b
 3050 0681 C2030000 		.4byte	.LASF85
 3051 0685 01       		.byte	0x1
 3052 0686 45       		.byte	0x45
 3053 0687 CF000000 		.4byte	0xcf
 3054 068b 05       		.uleb128 0x5
 3055 068c 03       		.byte	0x3
 3056 068d 00000000 		.4byte	ysum
 3057 0691 15       		.uleb128 0x15
 3058 0692 DD000000 		.4byte	0xdd
 3059 0696 A1060000 		.4byte	0x6a1
 3060 069a 16       		.uleb128 0x16
 3061 069b F5000000 		.4byte	0xf5
 3062 069f 0A       		.byte	0xa
 3063 06a0 00       		.byte	0
 3064 06a1 1B       		.uleb128 0x1b
 3065 06a2 A9000000 		.4byte	.LASF86
 3066 06a6 01       		.byte	0x1
 3067 06a7 46       		.byte	0x46
 3068 06a8 91060000 		.4byte	0x691
 3069 06ac 05       		.uleb128 0x5
 3070 06ad 03       		.byte	0x3
 3071 06ae 00000000 		.4byte	file
 3072 06b2 15       		.uleb128 0x15
 3073 06b3 DD000000 		.4byte	0xdd
 3074 06b7 C2060000 		.4byte	0x6c2
 3075 06bb 16       		.uleb128 0x16
 3076 06bc F5000000 		.4byte	0xf5
 3077 06c0 09       		.byte	0x9
 3078 06c1 00       		.byte	0
 3079 06c2 1B       		.uleb128 0x1b
 3080 06c3 BA010000 		.4byte	.LASF87
 3081 06c7 01       		.byte	0x1
 3082 06c8 47       		.byte	0x47
 3083 06c9 B2060000 		.4byte	0x6b2
 3084 06cd 05       		.uleb128 0x5
 3085 06ce 03       		.byte	0x3
 3086 06cf 00000000 		.4byte	volume
 3087 06d3 1B       		.uleb128 0x1b
 3088 06d4 17040000 		.4byte	.LASF88
 3089 06d8 01       		.byte	0x1
 3090 06d9 48       		.byte	0x48
 3091 06da 12010000 		.4byte	0x112
 3092 06de 05       		.uleb128 0x5
 3093 06df 03       		.byte	0x3
 3094 06e0 00000000 		.4byte	fsfile
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 67


 3095 06e4 00       		.byte	0
 3096              		.section	.debug_abbrev,"",%progbits
 3097              	.Ldebug_abbrev0:
 3098 0000 01       		.uleb128 0x1
 3099 0001 11       		.uleb128 0x11
 3100 0002 01       		.byte	0x1
 3101 0003 25       		.uleb128 0x25
 3102 0004 0E       		.uleb128 0xe
 3103 0005 13       		.uleb128 0x13
 3104 0006 0B       		.uleb128 0xb
 3105 0007 03       		.uleb128 0x3
 3106 0008 0E       		.uleb128 0xe
 3107 0009 1B       		.uleb128 0x1b
 3108 000a 0E       		.uleb128 0xe
 3109 000b 55       		.uleb128 0x55
 3110 000c 17       		.uleb128 0x17
 3111 000d 11       		.uleb128 0x11
 3112 000e 01       		.uleb128 0x1
 3113 000f 10       		.uleb128 0x10
 3114 0010 17       		.uleb128 0x17
 3115 0011 00       		.byte	0
 3116 0012 00       		.byte	0
 3117 0013 02       		.uleb128 0x2
 3118 0014 24       		.uleb128 0x24
 3119 0015 00       		.byte	0
 3120 0016 0B       		.uleb128 0xb
 3121 0017 0B       		.uleb128 0xb
 3122 0018 3E       		.uleb128 0x3e
 3123 0019 0B       		.uleb128 0xb
 3124 001a 03       		.uleb128 0x3
 3125 001b 0E       		.uleb128 0xe
 3126 001c 00       		.byte	0
 3127 001d 00       		.byte	0
 3128 001e 03       		.uleb128 0x3
 3129 001f 16       		.uleb128 0x16
 3130 0020 00       		.byte	0
 3131 0021 03       		.uleb128 0x3
 3132 0022 0E       		.uleb128 0xe
 3133 0023 3A       		.uleb128 0x3a
 3134 0024 0B       		.uleb128 0xb
 3135 0025 3B       		.uleb128 0x3b
 3136 0026 0B       		.uleb128 0xb
 3137 0027 49       		.uleb128 0x49
 3138 0028 13       		.uleb128 0x13
 3139 0029 00       		.byte	0
 3140 002a 00       		.byte	0
 3141 002b 04       		.uleb128 0x4
 3142 002c 24       		.uleb128 0x24
 3143 002d 00       		.byte	0
 3144 002e 0B       		.uleb128 0xb
 3145 002f 0B       		.uleb128 0xb
 3146 0030 3E       		.uleb128 0x3e
 3147 0031 0B       		.uleb128 0xb
 3148 0032 03       		.uleb128 0x3
 3149 0033 08       		.uleb128 0x8
 3150 0034 00       		.byte	0
 3151 0035 00       		.byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 68


 3152 0036 05       		.uleb128 0x5
 3153 0037 16       		.uleb128 0x16
 3154 0038 00       		.byte	0
 3155 0039 03       		.uleb128 0x3
 3156 003a 0E       		.uleb128 0xe
 3157 003b 3A       		.uleb128 0x3a
 3158 003c 0B       		.uleb128 0xb
 3159 003d 3B       		.uleb128 0x3b
 3160 003e 05       		.uleb128 0x5
 3161 003f 49       		.uleb128 0x49
 3162 0040 13       		.uleb128 0x13
 3163 0041 00       		.byte	0
 3164 0042 00       		.byte	0
 3165 0043 06       		.uleb128 0x6
 3166 0044 35       		.uleb128 0x35
 3167 0045 00       		.byte	0
 3168 0046 49       		.uleb128 0x49
 3169 0047 13       		.uleb128 0x13
 3170 0048 00       		.byte	0
 3171 0049 00       		.byte	0
 3172 004a 07       		.uleb128 0x7
 3173 004b 0F       		.uleb128 0xf
 3174 004c 00       		.byte	0
 3175 004d 0B       		.uleb128 0xb
 3176 004e 0B       		.uleb128 0xb
 3177 004f 49       		.uleb128 0x49
 3178 0050 13       		.uleb128 0x13
 3179 0051 00       		.byte	0
 3180 0052 00       		.byte	0
 3181 0053 08       		.uleb128 0x8
 3182 0054 13       		.uleb128 0x13
 3183 0055 00       		.byte	0
 3184 0056 03       		.uleb128 0x3
 3185 0057 0E       		.uleb128 0xe
 3186 0058 3C       		.uleb128 0x3c
 3187 0059 19       		.uleb128 0x19
 3188 005a 00       		.byte	0
 3189 005b 00       		.byte	0
 3190 005c 09       		.uleb128 0x9
 3191 005d 04       		.uleb128 0x4
 3192 005e 01       		.byte	0x1
 3193 005f 03       		.uleb128 0x3
 3194 0060 0E       		.uleb128 0xe
 3195 0061 0B       		.uleb128 0xb
 3196 0062 0B       		.uleb128 0xb
 3197 0063 3A       		.uleb128 0x3a
 3198 0064 0B       		.uleb128 0xb
 3199 0065 3B       		.uleb128 0x3b
 3200 0066 0B       		.uleb128 0xb
 3201 0067 01       		.uleb128 0x1
 3202 0068 13       		.uleb128 0x13
 3203 0069 00       		.byte	0
 3204 006a 00       		.byte	0
 3205 006b 0A       		.uleb128 0xa
 3206 006c 28       		.uleb128 0x28
 3207 006d 00       		.byte	0
 3208 006e 03       		.uleb128 0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 69


 3209 006f 0E       		.uleb128 0xe
 3210 0070 1C       		.uleb128 0x1c
 3211 0071 0D       		.uleb128 0xd
 3212 0072 00       		.byte	0
 3213 0073 00       		.byte	0
 3214 0074 0B       		.uleb128 0xb
 3215 0075 2E       		.uleb128 0x2e
 3216 0076 00       		.byte	0
 3217 0077 3F       		.uleb128 0x3f
 3218 0078 19       		.uleb128 0x19
 3219 0079 03       		.uleb128 0x3
 3220 007a 0E       		.uleb128 0xe
 3221 007b 3A       		.uleb128 0x3a
 3222 007c 0B       		.uleb128 0xb
 3223 007d 3B       		.uleb128 0x3b
 3224 007e 0B       		.uleb128 0xb
 3225 007f 27       		.uleb128 0x27
 3226 0080 19       		.uleb128 0x19
 3227 0081 11       		.uleb128 0x11
 3228 0082 01       		.uleb128 0x1
 3229 0083 12       		.uleb128 0x12
 3230 0084 06       		.uleb128 0x6
 3231 0085 40       		.uleb128 0x40
 3232 0086 18       		.uleb128 0x18
 3233 0087 9642     		.uleb128 0x2116
 3234 0089 19       		.uleb128 0x19
 3235 008a 00       		.byte	0
 3236 008b 00       		.byte	0
 3237 008c 0C       		.uleb128 0xc
 3238 008d 2E       		.uleb128 0x2e
 3239 008e 00       		.byte	0
 3240 008f 3F       		.uleb128 0x3f
 3241 0090 19       		.uleb128 0x19
 3242 0091 03       		.uleb128 0x3
 3243 0092 0E       		.uleb128 0xe
 3244 0093 3A       		.uleb128 0x3a
 3245 0094 0B       		.uleb128 0xb
 3246 0095 3B       		.uleb128 0x3b
 3247 0096 0B       		.uleb128 0xb
 3248 0097 27       		.uleb128 0x27
 3249 0098 19       		.uleb128 0x19
 3250 0099 11       		.uleb128 0x11
 3251 009a 01       		.uleb128 0x1
 3252 009b 12       		.uleb128 0x12
 3253 009c 06       		.uleb128 0x6
 3254 009d 40       		.uleb128 0x40
 3255 009e 18       		.uleb128 0x18
 3256 009f 9742     		.uleb128 0x2117
 3257 00a1 19       		.uleb128 0x19
 3258 00a2 00       		.byte	0
 3259 00a3 00       		.byte	0
 3260 00a4 0D       		.uleb128 0xd
 3261 00a5 2E       		.uleb128 0x2e
 3262 00a6 01       		.byte	0x1
 3263 00a7 3F       		.uleb128 0x3f
 3264 00a8 19       		.uleb128 0x19
 3265 00a9 03       		.uleb128 0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 70


 3266 00aa 0E       		.uleb128 0xe
 3267 00ab 3A       		.uleb128 0x3a
 3268 00ac 0B       		.uleb128 0xb
 3269 00ad 3B       		.uleb128 0x3b
 3270 00ae 0B       		.uleb128 0xb
 3271 00af 49       		.uleb128 0x49
 3272 00b0 13       		.uleb128 0x13
 3273 00b1 11       		.uleb128 0x11
 3274 00b2 01       		.uleb128 0x1
 3275 00b3 12       		.uleb128 0x12
 3276 00b4 06       		.uleb128 0x6
 3277 00b5 40       		.uleb128 0x40
 3278 00b6 18       		.uleb128 0x18
 3279 00b7 9642     		.uleb128 0x2116
 3280 00b9 19       		.uleb128 0x19
 3281 00ba 01       		.uleb128 0x1
 3282 00bb 13       		.uleb128 0x13
 3283 00bc 00       		.byte	0
 3284 00bd 00       		.byte	0
 3285 00be 0E       		.uleb128 0xe
 3286 00bf 34       		.uleb128 0x34
 3287 00c0 00       		.byte	0
 3288 00c1 03       		.uleb128 0x3
 3289 00c2 08       		.uleb128 0x8
 3290 00c3 3A       		.uleb128 0x3a
 3291 00c4 0B       		.uleb128 0xb
 3292 00c5 3B       		.uleb128 0x3b
 3293 00c6 0B       		.uleb128 0xb
 3294 00c7 49       		.uleb128 0x49
 3295 00c8 13       		.uleb128 0x13
 3296 00c9 02       		.uleb128 0x2
 3297 00ca 18       		.uleb128 0x18
 3298 00cb 00       		.byte	0
 3299 00cc 00       		.byte	0
 3300 00cd 0F       		.uleb128 0xf
 3301 00ce 34       		.uleb128 0x34
 3302 00cf 00       		.byte	0
 3303 00d0 03       		.uleb128 0x3
 3304 00d1 0E       		.uleb128 0xe
 3305 00d2 3A       		.uleb128 0x3a
 3306 00d3 0B       		.uleb128 0xb
 3307 00d4 3B       		.uleb128 0x3b
 3308 00d5 0B       		.uleb128 0xb
 3309 00d6 49       		.uleb128 0x49
 3310 00d7 13       		.uleb128 0x13
 3311 00d8 02       		.uleb128 0x2
 3312 00d9 18       		.uleb128 0x18
 3313 00da 00       		.byte	0
 3314 00db 00       		.byte	0
 3315 00dc 10       		.uleb128 0x10
 3316 00dd 34       		.uleb128 0x34
 3317 00de 00       		.byte	0
 3318 00df 03       		.uleb128 0x3
 3319 00e0 08       		.uleb128 0x8
 3320 00e1 3A       		.uleb128 0x3a
 3321 00e2 0B       		.uleb128 0xb
 3322 00e3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 71


 3323 00e4 0B       		.uleb128 0xb
 3324 00e5 49       		.uleb128 0x49
 3325 00e6 13       		.uleb128 0x13
 3326 00e7 00       		.byte	0
 3327 00e8 00       		.byte	0
 3328 00e9 11       		.uleb128 0x11
 3329 00ea 0B       		.uleb128 0xb
 3330 00eb 01       		.byte	0x1
 3331 00ec 11       		.uleb128 0x11
 3332 00ed 01       		.uleb128 0x1
 3333 00ee 12       		.uleb128 0x12
 3334 00ef 06       		.uleb128 0x6
 3335 00f0 00       		.byte	0
 3336 00f1 00       		.byte	0
 3337 00f2 12       		.uleb128 0x12
 3338 00f3 34       		.uleb128 0x34
 3339 00f4 00       		.byte	0
 3340 00f5 03       		.uleb128 0x3
 3341 00f6 08       		.uleb128 0x8
 3342 00f7 3A       		.uleb128 0x3a
 3343 00f8 0B       		.uleb128 0xb
 3344 00f9 3B       		.uleb128 0x3b
 3345 00fa 05       		.uleb128 0x5
 3346 00fb 49       		.uleb128 0x49
 3347 00fc 13       		.uleb128 0x13
 3348 00fd 02       		.uleb128 0x2
 3349 00fe 18       		.uleb128 0x18
 3350 00ff 00       		.byte	0
 3351 0100 00       		.byte	0
 3352 0101 13       		.uleb128 0x13
 3353 0102 0B       		.uleb128 0xb
 3354 0103 01       		.byte	0x1
 3355 0104 11       		.uleb128 0x11
 3356 0105 01       		.uleb128 0x1
 3357 0106 12       		.uleb128 0x12
 3358 0107 06       		.uleb128 0x6
 3359 0108 01       		.uleb128 0x1
 3360 0109 13       		.uleb128 0x13
 3361 010a 00       		.byte	0
 3362 010b 00       		.byte	0
 3363 010c 14       		.uleb128 0x14
 3364 010d 34       		.uleb128 0x34
 3365 010e 00       		.byte	0
 3366 010f 03       		.uleb128 0x3
 3367 0110 0E       		.uleb128 0xe
 3368 0111 3A       		.uleb128 0x3a
 3369 0112 0B       		.uleb128 0xb
 3370 0113 3B       		.uleb128 0x3b
 3371 0114 05       		.uleb128 0x5
 3372 0115 49       		.uleb128 0x49
 3373 0116 13       		.uleb128 0x13
 3374 0117 02       		.uleb128 0x2
 3375 0118 18       		.uleb128 0x18
 3376 0119 00       		.byte	0
 3377 011a 00       		.byte	0
 3378 011b 15       		.uleb128 0x15
 3379 011c 01       		.uleb128 0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 72


 3380 011d 01       		.byte	0x1
 3381 011e 49       		.uleb128 0x49
 3382 011f 13       		.uleb128 0x13
 3383 0120 01       		.uleb128 0x1
 3384 0121 13       		.uleb128 0x13
 3385 0122 00       		.byte	0
 3386 0123 00       		.byte	0
 3387 0124 16       		.uleb128 0x16
 3388 0125 21       		.uleb128 0x21
 3389 0126 00       		.byte	0
 3390 0127 49       		.uleb128 0x49
 3391 0128 13       		.uleb128 0x13
 3392 0129 2F       		.uleb128 0x2f
 3393 012a 0B       		.uleb128 0xb
 3394 012b 00       		.byte	0
 3395 012c 00       		.byte	0
 3396 012d 17       		.uleb128 0x17
 3397 012e 2E       		.uleb128 0x2e
 3398 012f 01       		.byte	0x1
 3399 0130 3F       		.uleb128 0x3f
 3400 0131 19       		.uleb128 0x19
 3401 0132 03       		.uleb128 0x3
 3402 0133 0E       		.uleb128 0xe
 3403 0134 3A       		.uleb128 0x3a
 3404 0135 0B       		.uleb128 0xb
 3405 0136 3B       		.uleb128 0x3b
 3406 0137 05       		.uleb128 0x5
 3407 0138 27       		.uleb128 0x27
 3408 0139 19       		.uleb128 0x19
 3409 013a 49       		.uleb128 0x49
 3410 013b 13       		.uleb128 0x13
 3411 013c 11       		.uleb128 0x11
 3412 013d 01       		.uleb128 0x1
 3413 013e 12       		.uleb128 0x12
 3414 013f 06       		.uleb128 0x6
 3415 0140 40       		.uleb128 0x40
 3416 0141 18       		.uleb128 0x18
 3417 0142 9642     		.uleb128 0x2116
 3418 0144 19       		.uleb128 0x19
 3419 0145 01       		.uleb128 0x1
 3420 0146 13       		.uleb128 0x13
 3421 0147 00       		.byte	0
 3422 0148 00       		.byte	0
 3423 0149 18       		.uleb128 0x18
 3424 014a 05       		.uleb128 0x5
 3425 014b 00       		.byte	0
 3426 014c 03       		.uleb128 0x3
 3427 014d 0E       		.uleb128 0xe
 3428 014e 3A       		.uleb128 0x3a
 3429 014f 0B       		.uleb128 0xb
 3430 0150 3B       		.uleb128 0x3b
 3431 0151 05       		.uleb128 0x5
 3432 0152 49       		.uleb128 0x49
 3433 0153 13       		.uleb128 0x13
 3434 0154 02       		.uleb128 0x2
 3435 0155 18       		.uleb128 0x18
 3436 0156 00       		.byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 73


 3437 0157 00       		.byte	0
 3438 0158 19       		.uleb128 0x19
 3439 0159 34       		.uleb128 0x34
 3440 015a 00       		.byte	0
 3441 015b 03       		.uleb128 0x3
 3442 015c 0E       		.uleb128 0xe
 3443 015d 3A       		.uleb128 0x3a
 3444 015e 0B       		.uleb128 0xb
 3445 015f 3B       		.uleb128 0x3b
 3446 0160 05       		.uleb128 0x5
 3447 0161 49       		.uleb128 0x49
 3448 0162 13       		.uleb128 0x13
 3449 0163 3F       		.uleb128 0x3f
 3450 0164 19       		.uleb128 0x19
 3451 0165 3C       		.uleb128 0x3c
 3452 0166 19       		.uleb128 0x19
 3453 0167 00       		.byte	0
 3454 0168 00       		.byte	0
 3455 0169 1A       		.uleb128 0x1a
 3456 016a 34       		.uleb128 0x34
 3457 016b 00       		.byte	0
 3458 016c 03       		.uleb128 0x3
 3459 016d 0E       		.uleb128 0xe
 3460 016e 3A       		.uleb128 0x3a
 3461 016f 0B       		.uleb128 0xb
 3462 0170 3B       		.uleb128 0x3b
 3463 0171 05       		.uleb128 0x5
 3464 0172 49       		.uleb128 0x49
 3465 0173 13       		.uleb128 0x13
 3466 0174 3F       		.uleb128 0x3f
 3467 0175 19       		.uleb128 0x19
 3468 0176 02       		.uleb128 0x2
 3469 0177 18       		.uleb128 0x18
 3470 0178 00       		.byte	0
 3471 0179 00       		.byte	0
 3472 017a 1B       		.uleb128 0x1b
 3473 017b 34       		.uleb128 0x34
 3474 017c 00       		.byte	0
 3475 017d 03       		.uleb128 0x3
 3476 017e 0E       		.uleb128 0xe
 3477 017f 3A       		.uleb128 0x3a
 3478 0180 0B       		.uleb128 0xb
 3479 0181 3B       		.uleb128 0x3b
 3480 0182 0B       		.uleb128 0xb
 3481 0183 49       		.uleb128 0x49
 3482 0184 13       		.uleb128 0x13
 3483 0185 3F       		.uleb128 0x3f
 3484 0186 19       		.uleb128 0x19
 3485 0187 02       		.uleb128 0x2
 3486 0188 18       		.uleb128 0x18
 3487 0189 00       		.byte	0
 3488 018a 00       		.byte	0
 3489 018b 1C       		.uleb128 0x1c
 3490 018c 34       		.uleb128 0x34
 3491 018d 00       		.byte	0
 3492 018e 03       		.uleb128 0x3
 3493 018f 08       		.uleb128 0x8
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 74


 3494 0190 3A       		.uleb128 0x3a
 3495 0191 0B       		.uleb128 0xb
 3496 0192 3B       		.uleb128 0x3b
 3497 0193 0B       		.uleb128 0xb
 3498 0194 49       		.uleb128 0x49
 3499 0195 13       		.uleb128 0x13
 3500 0196 3F       		.uleb128 0x3f
 3501 0197 19       		.uleb128 0x19
 3502 0198 02       		.uleb128 0x2
 3503 0199 18       		.uleb128 0x18
 3504 019a 00       		.byte	0
 3505 019b 00       		.byte	0
 3506 019c 00       		.byte	0
 3507              		.section	.debug_aranges,"",%progbits
 3508 0000 4C000000 		.4byte	0x4c
 3509 0004 0200     		.2byte	0x2
 3510 0006 00000000 		.4byte	.Ldebug_info0
 3511 000a 04       		.byte	0x4
 3512 000b 00       		.byte	0
 3513 000c 0000     		.2byte	0
 3514 000e 0000     		.2byte	0
 3515 0010 00000000 		.4byte	.LFB63
 3516 0014 20000000 		.4byte	.LFE63-.LFB63
 3517 0018 00000000 		.4byte	.LFB64
 3518 001c 40000000 		.4byte	.LFE64-.LFB64
 3519 0020 00000000 		.4byte	.LFB65
 3520 0024 80000000 		.4byte	.LFE65-.LFB65
 3521 0028 00000000 		.4byte	.LFB66
 3522 002c 50000000 		.4byte	.LFE66-.LFB66
 3523 0030 00000000 		.4byte	.LFB67
 3524 0034 58000000 		.4byte	.LFE67-.LFB67
 3525 0038 00000000 		.4byte	.LFB68
 3526 003c 440B0000 		.4byte	.LFE68-.LFB68
 3527 0040 00000000 		.4byte	.LFB69
 3528 0044 30010000 		.4byte	.LFE69-.LFB69
 3529 0048 00000000 		.4byte	0
 3530 004c 00000000 		.4byte	0
 3531              		.section	.debug_ranges,"",%progbits
 3532              	.Ldebug_ranges0:
 3533 0000 00000000 		.4byte	.LFB63
 3534 0004 20000000 		.4byte	.LFE63
 3535 0008 00000000 		.4byte	.LFB64
 3536 000c 40000000 		.4byte	.LFE64
 3537 0010 00000000 		.4byte	.LFB65
 3538 0014 80000000 		.4byte	.LFE65
 3539 0018 00000000 		.4byte	.LFB66
 3540 001c 50000000 		.4byte	.LFE66
 3541 0020 00000000 		.4byte	.LFB67
 3542 0024 58000000 		.4byte	.LFE67
 3543 0028 00000000 		.4byte	.LFB68
 3544 002c 440B0000 		.4byte	.LFE68
 3545 0030 00000000 		.4byte	.LFB69
 3546 0034 30010000 		.4byte	.LFE69
 3547 0038 00000000 		.4byte	0
 3548 003c 00000000 		.4byte	0
 3549              		.section	.debug_line,"",%progbits
 3550              	.Ldebug_line0:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 75


 3551 0000 9E030000 		.section	.debug_str,"MS",%progbits,1
 3551      02009501 
 3551      00000201 
 3551      FB0E0D00 
 3551      01010101 
 3552              	.LASF63:
 3553 0000 64657363 		.ascii	"descent_time\000"
 3553      656E745F 
 3553      74696D65 
 3553      00
 3554              	.LASF29:
 3555 000d 52455355 		.ascii	"RESURFACE\000"
 3555      52464143 
 3555      4500
 3556              	.LASF75:
 3557 0017 6D73675F 		.ascii	"msg_count\000"
 3557      636F756E 
 3557      7400
 3558              	.LASF73:
 3559 0021 75706461 		.ascii	"update_Data\000"
 3559      74655F44 
 3559      61746100 
 3560              	.LASF74:
 3561 002d 52784275 		.ascii	"RxBuffer\000"
 3561      66666572 
 3561      00
 3562              	.LASF25:
 3563 0036 53595354 		.ascii	"SYSTEM_CHECK\000"
 3563      454D5F43 
 3563      4845434B 
 3563      00
 3564              	.LASF32:
 3565 0043 53544154 		.ascii	"STATES\000"
 3565      455300
 3566              	.LASF55:
 3567 004a 73646275 		.ascii	"sdbuf\000"
 3567      6600
 3568              	.LASF60:
 3569 0050 41646472 		.ascii	"Addr\000"
 3569      00
 3570              	.LASF58:
 3571 0055 64657641 		.ascii	"devAddr\000"
 3571      64647200 
 3572              	.LASF79:
 3573 005d 7472616E 		.ascii	"transmit_flag\000"
 3573      736D6974 
 3573      5F666C61 
 3573      6700
 3574              	.LASF81:
 3575 006b 72657365 		.ascii	"reset\000"
 3575      7400
 3576              	.LASF28:
 3577 0071 4C414E44 		.ascii	"LANDED\000"
 3577      454400
 3578              	.LASF78:
 3579 0078 64617461 		.ascii	"dataflag\000"
 3579      666C6167 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 76


 3579      00
 3580              	.LASF94:
 3581 0081 66696C65 		.ascii	"filename\000"
 3581      6E616D65 
 3581      00
 3582              	.LASF33:
 3583 008a 4D6F6973 		.ascii	"Moisture_ISR_Handler\000"
 3583      74757265 
 3583      5F495352 
 3583      5F48616E 
 3583      646C6572 
 3584              	.LASF47:
 3585 009f 76616375 		.ascii	"vacuumbuf\000"
 3585      756D6275 
 3585      6600
 3586              	.LASF86:
 3587 00a9 66696C65 		.ascii	"file\000"
 3587      00
 3588              	.LASF42:
 3589 00ae 70726573 		.ascii	"pressure_avg\000"
 3589      73757265 
 3589      5F617667 
 3589      00
 3590              	.LASF4:
 3591 00bb 73686F72 		.ascii	"short int\000"
 3591      7420696E 
 3591      7400
 3592              	.LASF69:
 3593 00c5 50414E49 		.ascii	"PANIC_flag\000"
 3593      435F666C 
 3593      616700
 3594              	.LASF83:
 3595 00d0 79617667 		.ascii	"yavg\000"
 3595      00
 3596              	.LASF13:
 3597 00d5 75696E74 		.ascii	"uint8_t\000"
 3597      385F7400 
 3598              	.LASF51:
 3599 00dd 70756C73 		.ascii	"pulse\000"
 3599      6500
 3600              	.LASF38:
 3601 00e3 64656369 		.ascii	"decimals\000"
 3601      6D616C73 
 3601      00
 3602              	.LASF18:
 3603 00ec 666C6F61 		.ascii	"float\000"
 3603      7400
 3604              	.LASF50:
 3605 00f2 73746174 		.ascii	"stateMsgCount\000"
 3605      654D7367 
 3605      436F756E 
 3605      7400
 3606              	.LASF10:
 3607 0100 6C6F6E67 		.ascii	"long long int\000"
 3607      206C6F6E 
 3607      6720696E 
 3607      7400
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 77


 3608              	.LASF65:
 3609 010e 61766572 		.ascii	"average\000"
 3609      61676500 
 3610              	.LASF30:
 3611 0116 5452414E 		.ascii	"TRANSMIT\000"
 3611      534D4954 
 3611      00
 3612              	.LASF89:
 3613 011f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3613      4320342E 
 3613      392E3320 
 3613      32303135 
 3613      30333033 
 3614 0152 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3614      20726576 
 3614      6973696F 
 3614      6E203232 
 3614      31323230 
 3615 0185 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3615      66756E63 
 3615      74696F6E 
 3615      2D736563 
 3615      74696F6E 
 3616              	.LASF53:
 3617 01ad 74656E73 		.ascii	"tens\000"
 3617      00
 3618              	.LASF39:
 3619 01b2 766F6C74 		.ascii	"voltage\000"
 3619      61676500 
 3620              	.LASF87:
 3621 01ba 766F6C75 		.ascii	"volume\000"
 3621      6D6500
 3622              	.LASF61:
 3623 01c1 70726573 		.ascii	"press_id\000"
 3623      735F6964 
 3623      00
 3624              	.LASF49:
 3625 01ca 7472616E 		.ascii	"transbuf\000"
 3625      73627566 
 3625      00
 3626              	.LASF31:
 3627 01d3 4552524F 		.ascii	"ERROR\000"
 3627      5200
 3628              	.LASF64:
 3629 01d9 70726573 		.ascii	"pressure_sum\000"
 3629      73757265 
 3629      5F73756D 
 3629      00
 3630              	.LASF24:
 3631 01e6 6C6F6E67 		.ascii	"long double\000"
 3631      20646F75 
 3631      626C6500 
 3632              	.LASF26:
 3633 01f2 57414954 		.ascii	"WAIT_TO_LAUNCH\000"
 3633      5F544F5F 
 3633      4C41554E 
 3633      434800
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 78


 3634              	.LASF1:
 3635 0201 756E7369 		.ascii	"unsigned char\000"
 3635      676E6564 
 3635      20636861 
 3635      7200
 3636              	.LASF23:
 3637 020f 46535F46 		.ascii	"FS_FILE\000"
 3637      494C4500 
 3638              	.LASF72:
 3639 0217 636F756E 		.ascii	"countdown\000"
 3639      74646F77 
 3639      6E00
 3640              	.LASF0:
 3641 0221 7369676E 		.ascii	"signed char\000"
 3641      65642063 
 3641      68617200 
 3642              	.LASF11:
 3643 022d 6C6F6E67 		.ascii	"long long unsigned int\000"
 3643      206C6F6E 
 3643      6720756E 
 3643      7369676E 
 3643      65642069 
 3644              	.LASF16:
 3645 0244 75696E74 		.ascii	"uint32_t\000"
 3645      33325F74 
 3645      00
 3646              	.LASF62:
 3647 024d 64617461 		.ascii	"data_time\000"
 3647      5F74696D 
 3647      6500
 3648              	.LASF12:
 3649 0257 756E7369 		.ascii	"unsigned int\000"
 3649      676E6564 
 3649      20696E74 
 3649      00
 3650              	.LASF40:
 3651 0264 74656D70 		.ascii	"temp\000"
 3651      00
 3652              	.LASF71:
 3653 0269 74657374 		.ascii	"testnum\000"
 3653      6E756D00 
 3654              	.LASF5:
 3655 0271 73686F72 		.ascii	"short unsigned int\000"
 3655      7420756E 
 3655      7369676E 
 3655      65642069 
 3655      6E7400
 3656              	.LASF84:
 3657 0284 7873756D 		.ascii	"xsum\000"
 3657      00
 3658              	.LASF20:
 3659 0289 63686172 		.ascii	"char\000"
 3659      00
 3660              	.LASF7:
 3661 028e 6C6F6E67 		.ascii	"long int\000"
 3661      20696E74 
 3661      00
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 79


 3662              	.LASF92:
 3663 0297 6D61696E 		.ascii	"main\000"
 3663      00
 3664              	.LASF15:
 3665 029c 696E7433 		.ascii	"int32_t\000"
 3665      325F7400 
 3666              	.LASF14:
 3667 02a4 696E7431 		.ascii	"int16_t\000"
 3667      365F7400 
 3668              	.LASF17:
 3669 02ac 75696E74 		.ascii	"uint8\000"
 3669      3800
 3670              	.LASF67:
 3671 02b2 5F426F6F 		.ascii	"_Bool\000"
 3671      6C00
 3672              	.LASF91:
 3673 02b8 433A5C55 		.ascii	"C:\\Users\\gding\\Documents\\Project_O-Vac\\OVac.cy"
 3673      73657273 
 3673      5C676469 
 3673      6E675C44 
 3673      6F63756D 
 3674 02e6 64736E00 		.ascii	"dsn\000"
 3675              	.LASF54:
 3676 02ea 6F6E6573 		.ascii	"ones\000"
 3676      00
 3677              	.LASF44:
 3678 02ef 63757253 		.ascii	"curState\000"
 3678      74617465 
 3678      00
 3679              	.LASF80:
 3680 02f8 64657074 		.ascii	"depth\000"
 3680      6800
 3681              	.LASF52:
 3682 02fe 7A5F6F66 		.ascii	"z_offset\000"
 3682      66736574 
 3682      00
 3683              	.LASF48:
 3684 0307 72657375 		.ascii	"resurfbuf\000"
 3684      72666275 
 3684      6600
 3685              	.LASF76:
 3686 0311 7278666C 		.ascii	"rxflag\000"
 3686      616700
 3687              	.LASF59:
 3688 0318 62756666 		.ascii	"buffer\000"
 3688      657200
 3689              	.LASF35:
 3690 031f 436F756E 		.ascii	"Countdown_ISR_Handler\000"
 3690      74646F77 
 3690      6E5F4953 
 3690      525F4861 
 3690      6E646C65 
 3691              	.LASF90:
 3692 0335 6D61696E 		.ascii	"main.c\000"
 3692      2E6300
 3693              	.LASF21:
 3694 033c 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 80


 3694      00
 3695              	.LASF9:
 3696 0341 6C6F6E67 		.ascii	"long unsigned int\000"
 3696      20756E73 
 3696      69676E65 
 3696      6420696E 
 3696      7400
 3697              	.LASF27:
 3698 0353 44455343 		.ascii	"DESCENDING\000"
 3698      454E4449 
 3698      4E4700
 3699              	.LASF77:
 3700 035e 62797465 		.ascii	"bytes\000"
 3700      7300
 3701              	.LASF19:
 3702 0364 646F7562 		.ascii	"double\000"
 3702      6C6500
 3703              	.LASF8:
 3704 036b 5F5F7569 		.ascii	"__uint32_t\000"
 3704      6E743332 
 3704      5F7400
 3705              	.LASF43:
 3706 0376 74656D70 		.ascii	"tempbuf\000"
 3706      62756600 
 3707              	.LASF6:
 3708 037e 5F5F696E 		.ascii	"__int32_t\000"
 3708      7433325F 
 3708      7400
 3709              	.LASF3:
 3710 0388 5F5F696E 		.ascii	"__int16_t\000"
 3710      7431365F 
 3710      7400
 3711              	.LASF45:
 3712 0392 64657363 		.ascii	"descendbuf\000"
 3712      656E6462 
 3712      756600
 3713              	.LASF22:
 3714 039d 73697A65 		.ascii	"sizetype\000"
 3714      74797065 
 3714      00
 3715              	.LASF70:
 3716 03a6 53544154 		.ascii	"STATE\000"
 3716      4500
 3717              	.LASF37:
 3718 03ac 74656D70 		.ascii	"temp_interrupt\000"
 3718      5F696E74 
 3718      65727275 
 3718      707400
 3719              	.LASF41:
 3720 03bb 6F757470 		.ascii	"output\000"
 3720      757400
 3721              	.LASF85:
 3722 03c2 7973756D 		.ascii	"ysum\000"
 3722      00
 3723              	.LASF66:
 3724 03c7 636F6C6C 		.ascii	"collect_flag\000"
 3724      6563745F 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccZ622PV.s 			page 81


 3724      666C6167 
 3724      00
 3725              	.LASF36:
 3726 03d4 72785F69 		.ascii	"rx_interrupt\000"
 3726      6E746572 
 3726      72757074 
 3726      00
 3727              	.LASF57:
 3728 03e1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3728      52784275 
 3728      66666572 
 3728      00
 3729              	.LASF93:
 3730 03ee 53445F53 		.ascii	"SD_SETUP\000"
 3730      45545550 
 3730      00
 3731              	.LASF56:
 3732 03f7 73756363 		.ascii	"success\000"
 3732      65737300 
 3733              	.LASF82:
 3734 03ff 78617667 		.ascii	"xavg\000"
 3734      00
 3735              	.LASF34:
 3736 0404 53616D70 		.ascii	"Sample_ISR_Handler\000"
 3736      6C655F49 
 3736      53525F48 
 3736      616E646C 
 3736      657200
 3737              	.LASF88:
 3738 0417 66736669 		.ascii	"fsfile\000"
 3738      6C6500
 3739              	.LASF46:
 3740 041e 6C616E64 		.ascii	"landedbuf\000"
 3740      65646275 
 3740      6600
 3741              	.LASF68:
 3742 0428 77616974 		.ascii	"wait_flag\000"
 3742      5F666C61 
 3742      6700
 3743              	.LASF2:
 3744 0432 5F5F7569 		.ascii	"__uint8_t\000"
 3744      6E74385F 
 3744      7400
 3745              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
