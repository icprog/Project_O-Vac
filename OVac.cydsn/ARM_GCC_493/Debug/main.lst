ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	devAddr,1,1
  19              		.comm	buffer,22,4
  20              		.global	Addr
  21              		.data
  22              		.align	2
  23              		.type	Addr, %object
  24              		.size	Addr, 4
  25              	Addr:
  26 0000 3F000000 		.word	63
  27              		.global	id
  28              		.align	2
  29              		.type	id, %object
  30              		.size	id, 4
  31              	id:
  32 0004 01000000 		.word	1
  33              		.global	press_id
  34              		.align	2
  35              		.type	press_id, %object
  36              		.size	press_id, 4
  37              	press_id:
  38 0008 01000000 		.word	1
  39              		.global	data_time
  40              		.bss
  41              		.align	2
  42              		.type	data_time, %object
  43              		.size	data_time, 4
  44              	data_time:
  45 0000 00000000 		.space	4
  46              		.global	sum
  47              		.align	2
  48              		.type	sum, %object
  49              		.size	sum, 4
  50              	sum:
  51 0004 00000000 		.space	4
  52              		.global	pressure_sum
  53              		.align	2
  54              		.type	pressure_sum, %object
  55              		.size	pressure_sum, 4
  56              	pressure_sum:
  57 0008 00000000 		.space	4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 2


  58              		.global	average
  59              		.align	1
  60              		.type	average, %object
  61              		.size	average, 2
  62              	average:
  63 000c 0000     		.space	2
  64              		.global	collect_flag
  65              		.type	collect_flag, %object
  66              		.size	collect_flag, 1
  67              	collect_flag:
  68 000e 00       		.space	1
  69              		.global	wait_flag
  70              		.type	wait_flag, %object
  71              		.size	wait_flag, 1
  72              	wait_flag:
  73 000f 00       		.space	1
  74              		.global	PANIC_flag
  75              		.type	PANIC_flag, %object
  76              		.size	PANIC_flag, 1
  77              	PANIC_flag:
  78 0010 00       		.space	1
  79              		.global	STATE
  80              		.data
  81              		.type	STATE, %object
  82              		.size	STATE, 1
  83              	STATE:
  84 000c 01       		.byte	1
  85              		.global	testnum
  86              		.type	testnum, %object
  87              		.size	testnum, 1
  88              	testnum:
  89 000d 01       		.byte	1
  90              		.global	countdown
  91              		.bss
  92              		.type	countdown, %object
  93              		.size	countdown, 1
  94              	countdown:
  95 0011 00       		.space	1
  96              		.global	update_Data
  97              		.type	update_Data, %object
  98              		.size	update_Data, 1
  99              	update_Data:
 100 0012 00       		.space	1
 101              		.global	RxBuffer
 102 0013 00       		.align	2
 103              		.type	RxBuffer, %object
 104              		.size	RxBuffer, 64
 105              	RxBuffer:
 106 0014 00000000 		.space	64
 106      00000000 
 106      00000000 
 106      00000000 
 106      00000000 
 107              		.global	msg_count
 108              		.align	2
 109              		.type	msg_count, %object
 110              		.size	msg_count, 4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 3


 111              	msg_count:
 112 0054 00000000 		.space	4
 113              		.global	rxflag
 114              		.align	2
 115              		.type	rxflag, %object
 116              		.size	rxflag, 4
 117              	rxflag:
 118 0058 00000000 		.space	4
 119              		.global	bytes
 120              		.align	2
 121              		.type	bytes, %object
 122              		.size	bytes, 4
 123              	bytes:
 124 005c 00000000 		.space	4
 125              		.global	dataflag
 126              		.align	2
 127              		.type	dataflag, %object
 128              		.size	dataflag, 4
 129              	dataflag:
 130 0060 00000000 		.space	4
 131              		.global	transmit_flag
 132              		.align	2
 133              		.type	transmit_flag, %object
 134              		.size	transmit_flag, 4
 135              	transmit_flag:
 136 0064 00000000 		.space	4
 137              		.global	file
 138              		.data
 139 000e 0000     		.align	2
 140              		.type	file, %object
 141              		.size	file, 11
 142              	file:
 143 0010 74657374 		.ascii	"test_1.txt\000"
 143      5F312E74 
 143      787400
 144              		.global	volume
 145 001b 00       		.bss
 146              		.align	2
 147              		.type	volume, %object
 148              		.size	volume, 10
 149              	volume:
 150 0068 00000000 		.space	10
 150      00000000 
 150      0000
 151              		.comm	fsfile,4,4
 152 0072 0000     		.section	.text.Moisture_ISR_Handler,"ax",%progbits
 153              		.align	2
 154              		.global	Moisture_ISR_Handler
 155              		.thumb
 156              		.thumb_func
 157              		.type	Moisture_ISR_Handler, %function
 158              	Moisture_ISR_Handler:
 159              	.LFB63:
 160              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 4


   4:main.c        **** * Version: 2.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   This is a source code for example project of ADC single ended mode.
   8:main.c        **** *
   9:main.c        **** *   Variable resistor(pot) is connected to +ve input of ADC using the I/O pin.
  10:main.c        **** *   P0.0. When voltage to positive terminal of ADC is 0, the output displayed
  11:main.c        **** *   on the LCD pannel is 0x0000. As voltage on positive terminal goes on
  12:main.c        **** *   increasing, the  converted value goes on increasing from 0x0000 and reaches
  13:main.c        **** *   0xFFFF when voltage becomes 1.024V. Futher increase in voltage value,
  14:main.c        **** *   doesn't cause any changes to values displayed in the LCD.
  15:main.c        **** *
  16:main.c        **** * Hardware Connections: 
  17:main.c        **** *  Connect analog input from Variable resistor to port P0[0] of DVK1 board.
  18:main.c        **** *
  19:main.c        **** ********************************************************************************
  20:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  21:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  22:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  23:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  24:main.c        **** * accompanying the software package from which you obtained this software.
  25:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  27:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  28:main.c        **** *******************************************************************************/
  29:main.c        **** 
  30:main.c        **** #include <project.h>
  31:main.c        **** #include <mpu6050.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include <string.h>
  34:main.c        **** #include <FS.h>
  35:main.c        **** #include "LiquidCrystal_I2C.h"
  36:main.c        **** #include "functions.h"
  37:main.c        **** 
  38:main.c        **** #define MPU6050 
  39:main.c        **** #define LCD
  40:main.c        **** #define SD
  41:main.c        **** #define BT
  42:main.c        **** 
  43:main.c        **** #define MA_WINDOW 15                    // Number of samples in the moving average window.
  44:main.c        **** #define BOT_THRESHOLD 20000             // Z-Aacceleration threshold for transition into LANDED sta
  45:main.c        **** #define WAIT_TIME 1000                  // Number of ISR calls until transition into DESCENDING sta
  46:main.c        **** #define DATA_TIME 5000                  // Number of ISR calls until transition into WAIT_TO_LAUNCH
  47:main.c        **** #define BUFFER_LEN  64u                 // Buffer length for UART rx
  48:main.c        **** 
  49:main.c        **** 
  50:main.c        **** uint32_t Addr = 0x3F;                       // I2C address of LCD.
  51:main.c        **** long id = 1, press_id = 1;                 // Interrupt count.
  52:main.c        **** long data_time = 0;                        // data point num
  53:main.c        **** 
  54:main.c        **** long sum = 0;                               // Sum of accelerometer values
  55:main.c        **** float pressure_sum = 0;                     // Sum of pressure values. 
  56:main.c        **** int16_t average = 0;                        // Moving average variable, accelerometer.
  57:main.c        **** bool collect_flag = 0;                      // flag indicating when to record acceleration sample.
  58:main.c        **** bool wait_flag = 0;                         // flag indicating when to increment interrupt counter.
  59:main.c        **** bool PANIC_flag = 0;                        // flag indicating water is present in housing.
  60:main.c        **** //bool first_test = 1;                        // flag indicating first test(longer countdown)
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 5


  61:main.c        **** STATES STATE = WAIT_TO_LAUNCH;                  // Set initial state. 
  62:main.c        **** uint8_t testnum = 1, countdown = 0, update_Data = 0;
  63:main.c        **** uint8_t RxBuffer[BUFFER_LEN] = {};            // Rx Buffer
  64:main.c        **** int msg_count = 0, rxflag = 0, bytes = 0, dataflag = 0, transmit_flag = 0;    // UART variables
  65:main.c        **** char file[11] = "test_1.txt";
  66:main.c        **** char volume[10] = {};
  67:main.c        **** FS_FILE *fsfile;
  68:main.c        **** 
  69:main.c        **** /*******************************************************************************
  70:main.c        **** * Function Name: main
  71:main.c        **** ********************************************************************************
  72:main.c        **** *
  73:main.c        **** * Summary:
  74:main.c        **** *  main() performs following functions:
  75:main.c        **** *  1: Initializes the LCD.
  76:main.c        **** *  2: Initializes timer module and sampling interrupt.
  77:main.c        **** *  3: Initializes MPU6050 Accelerometer/Gyroscope module.
  78:main.c        **** *  4: Samples Z-axis acceleration data from module @ 500hz.
  79:main.c        **** *  5: Computes moving average of Z-axis acceleration values.
  80:main.c        **** *  6: Transitions from DESCENDING to LANDED state when sudden acceleration occurs
  81:main.c        **** *     (ie. moving average > 200000).
  82:main.c        **** *
  83:main.c        **** * Parameters:
  84:main.c        **** *  None.
  85:main.c        **** *
  86:main.c        **** * Return:
  87:main.c        **** *  None.
  88:main.c        **** *
  89:main.c        **** *******************************************************************************/
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** /* Moisture sensor ISR */
  93:main.c        **** CY_ISR (Moisture_ISR_Handler){
 161              		.loc 1 93 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
  94:main.c        ****     PANIC_flag = 1;                             // Set flag to indicate water
 171              		.loc 1 94 0
 172 0004 044B     		ldr	r3, .L2
 173 0006 0122     		movs	r2, #1
 174 0008 1A70     		strb	r2, [r3]
  95:main.c        ****     STATE = RESURFACE;                          // Go to surface
 175              		.loc 1 95 0
 176 000a 044B     		ldr	r3, .L2+4
 177 000c 0422     		movs	r2, #4
 178 000e 1A70     		strb	r2, [r3]
  96:main.c        ****     Comp_Stop();                                // Stop comparator for interrupt
 179              		.loc 1 96 0
 180 0010 FFF7FEFF 		bl	Comp_Stop
  97:main.c        **** }
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 6


 181              		.loc 1 97 0
 182 0014 80BD     		pop	{r7, pc}
 183              	.L3:
 184 0016 00BF     		.align	2
 185              	.L2:
 186 0018 00000000 		.word	PANIC_flag
 187 001c 00000000 		.word	STATE
 188              		.cfi_endproc
 189              	.LFE63:
 190              		.size	Moisture_ISR_Handler, .-Moisture_ISR_Handler
 191              		.section	.text.Sample_ISR_Handler,"ax",%progbits
 192              		.align	2
 193              		.global	Sample_ISR_Handler
 194              		.thumb
 195              		.thumb_func
 196              		.type	Sample_ISR_Handler, %function
 197              	Sample_ISR_Handler:
 198              	.LFB64:
  98:main.c        **** 
  99:main.c        **** /* Sampling ISR */
 100:main.c        **** CY_ISR (Sample_ISR_Handler){
 199              		.loc 1 100 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 101:main.c        ****     Sample_Timer_STATUS;                        // Clears interrupt by accessing timer status regis
 209              		.loc 1 101 0
 210 0004 084B     		ldr	r3, .L6
 211 0006 1B78     		ldrb	r3, [r3]
 102:main.c        ****     if (STATE == DESCENDING){ 
 212              		.loc 1 102 0
 213 0008 084B     		ldr	r3, .L6+4
 214 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 215 000c 022B     		cmp	r3, #2
 216 000e 07D1     		bne	.L4
 103:main.c        ****         collect_flag = 1;
 217              		.loc 1 103 0
 218 0010 074B     		ldr	r3, .L6+8
 219 0012 0122     		movs	r2, #1
 220 0014 1A70     		strb	r2, [r3]
 104:main.c        ****         data_time++;
 221              		.loc 1 104 0
 222 0016 074B     		ldr	r3, .L6+12
 223 0018 1B68     		ldr	r3, [r3]
 224 001a 0133     		adds	r3, r3, #1
 225 001c 054A     		ldr	r2, .L6+12
 226 001e 1360     		str	r3, [r2]
 227              	.L4:
 105:main.c        ****     }
 106:main.c        **** }
 228              		.loc 1 106 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 7


 229 0020 BD46     		mov	sp, r7
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
 232 0022 5DF8047B 		ldr	r7, [sp], #4
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 0026 7047     		bx	lr
 236              	.L7:
 237              		.align	2
 238              	.L6:
 239 0028 034F0040 		.word	1073762051
 240 002c 00000000 		.word	STATE
 241 0030 00000000 		.word	collect_flag
 242 0034 00000000 		.word	data_time
 243              		.cfi_endproc
 244              	.LFE64:
 245              		.size	Sample_ISR_Handler, .-Sample_ISR_Handler
 246              		.section	.text.Countdown_ISR_Handler,"ax",%progbits
 247              		.align	2
 248              		.global	Countdown_ISR_Handler
 249              		.thumb
 250              		.thumb_func
 251              		.type	Countdown_ISR_Handler, %function
 252              	Countdown_ISR_Handler:
 253              	.LFB65:
 107:main.c        **** 
 108:main.c        **** /* Countdown ISR*/
 109:main.c        **** CY_ISR (Countdown_ISR_Handler){
 254              		.loc 1 109 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259 0000 80B4     		push	{r7}
 260              		.cfi_def_cfa_offset 4
 261              		.cfi_offset 7, -4
 262 0002 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 110:main.c        ****     Countdown_timer_STATUS;                        // Clears interrupt by accessing timer status re
 264              		.loc 1 110 0
 265 0004 164B     		ldr	r3, .L13
 266 0006 1B78     		ldrb	r3, [r3]
 111:main.c        ****     if (STATE == DESCENDING || STATE == LANDED || STATE == RESURFACE){
 267              		.loc 1 111 0
 268 0008 164B     		ldr	r3, .L13+4
 269 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 000c 022B     		cmp	r3, #2
 271 000e 07D0     		beq	.L9
 272              		.loc 1 111 0 is_stmt 0 discriminator 1
 273 0010 144B     		ldr	r3, .L13+4
 274 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0014 032B     		cmp	r3, #3
 276 0016 03D0     		beq	.L9
 277              		.loc 1 111 0 discriminator 2
 278 0018 124B     		ldr	r3, .L13+4
 279 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 001c 042B     		cmp	r3, #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 8


 281 001e 02D1     		bne	.L10
 282              	.L9:
 112:main.c        ****         wait_flag = 1;
 283              		.loc 1 112 0 is_stmt 1
 284 0020 114B     		ldr	r3, .L13+8
 285 0022 0122     		movs	r2, #1
 286 0024 1A70     		strb	r2, [r3]
 287              	.L10:
 113:main.c        ****     }
 114:main.c        ****     #ifdef BT
 115:main.c        ****         if (STATE == TRANSMIT || STATE == WAIT_TO_LAUNCH){
 288              		.loc 1 115 0
 289 0026 0F4B     		ldr	r3, .L13+4
 290 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 291 002a 052B     		cmp	r3, #5
 292 002c 03D0     		beq	.L11
 293              		.loc 1 115 0 is_stmt 0 discriminator 1
 294 002e 0D4B     		ldr	r3, .L13+4
 295 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296 0032 012B     		cmp	r3, #1
 297 0034 0FD1     		bne	.L8
 298              	.L11:
 116:main.c        ****             update_Data++;
 299              		.loc 1 116 0 is_stmt 1
 300 0036 0D4B     		ldr	r3, .L13+12
 301 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 003a 0133     		adds	r3, r3, #1
 303 003c DAB2     		uxtb	r2, r3
 304 003e 0B4B     		ldr	r3, .L13+12
 305 0040 1A70     		strb	r2, [r3]
 117:main.c        ****             if (update_Data == 50){
 306              		.loc 1 117 0
 307 0042 0A4B     		ldr	r3, .L13+12
 308 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 0046 322B     		cmp	r3, #50
 310 0048 05D1     		bne	.L8
 118:main.c        ****                 transmit_flag = 1;
 311              		.loc 1 118 0
 312 004a 094B     		ldr	r3, .L13+16
 313 004c 0122     		movs	r2, #1
 314 004e 1A60     		str	r2, [r3]
 119:main.c        ****                 update_Data = 0;
 315              		.loc 1 119 0
 316 0050 064B     		ldr	r3, .L13+12
 317 0052 0022     		movs	r2, #0
 318 0054 1A70     		strb	r2, [r3]
 319              	.L8:
 120:main.c        ****             }
 121:main.c        ****         }
 122:main.c        ****             
 123:main.c        ****     #endif
 124:main.c        **** }
 320              		.loc 1 124 0
 321 0056 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 0058 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 9


 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 005c 7047     		bx	lr
 328              	.L14:
 329 005e 00BF     		.align	2
 330              	.L13:
 331 0060 6D640040 		.word	1073767533
 332 0064 00000000 		.word	STATE
 333 0068 00000000 		.word	wait_flag
 334 006c 00000000 		.word	update_Data
 335 0070 00000000 		.word	transmit_flag
 336              		.cfi_endproc
 337              	.LFE65:
 338              		.size	Countdown_ISR_Handler, .-Countdown_ISR_Handler
 339              		.section	.text.rx_interrupt,"ax",%progbits
 340              		.align	2
 341              		.global	rx_interrupt
 342              		.thumb
 343              		.thumb_func
 344              		.type	rx_interrupt, %function
 345              	rx_interrupt:
 346              	.LFB66:
 125:main.c        **** 
 126:main.c        **** CY_ISR(rx_interrupt){
 347              		.loc 1 126 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 98B5     		push	{r3, r4, r7, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 3, -16
 354              		.cfi_offset 4, -12
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 127:main.c        ****     #ifdef BT
 128:main.c        ****     while (UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 359              		.loc 1 128 0
 360 0004 14E0     		b	.L16
 361              	.L17:
 129:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 362              		.loc 1 129 0
 363 0006 0E4B     		ldr	r3, .L18
 364 0008 1C68     		ldr	r4, [r3]
 365 000a 631C     		adds	r3, r4, #1
 366 000c 0C4A     		ldr	r2, .L18
 367 000e 1360     		str	r3, [r2]
 368 0010 FFF7FEFF 		bl	UART_GetChar
 369 0014 0346     		mov	r3, r0
 370 0016 1A46     		mov	r2, r3
 371 0018 0A4B     		ldr	r3, .L18+4
 372 001a 1A55     		strb	r2, [r3, r4]
 130:main.c        ****         if ((msg_count - 3) == bytes)
 373              		.loc 1 130 0
 374 001c 084B     		ldr	r3, .L18
 375 001e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 10


 376 0020 DA1E     		subs	r2, r3, #3
 377 0022 094B     		ldr	r3, .L18+8
 378 0024 1B68     		ldr	r3, [r3]
 379 0026 9A42     		cmp	r2, r3
 380 0028 02D1     		bne	.L16
 131:main.c        ****             rxflag = 1;
 381              		.loc 1 131 0
 382 002a 084B     		ldr	r3, .L18+12
 383 002c 0122     		movs	r2, #1
 384 002e 1A60     		str	r2, [r3]
 385              	.L16:
 128:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 386              		.loc 1 128 0
 387 0030 FFF7FEFF 		bl	UART_ReadRxStatus
 388 0034 0346     		mov	r3, r0
 389 0036 03F02003 		and	r3, r3, #32
 390 003a 002B     		cmp	r3, #0
 391 003c E3D1     		bne	.L17
 132:main.c        ****     }
 133:main.c        ****     #endif
 134:main.c        **** }
 392              		.loc 1 134 0
 393 003e 98BD     		pop	{r3, r4, r7, pc}
 394              	.L19:
 395              		.align	2
 396              	.L18:
 397 0040 00000000 		.word	msg_count
 398 0044 00000000 		.word	RxBuffer
 399 0048 00000000 		.word	bytes
 400 004c 00000000 		.word	rxflag
 401              		.cfi_endproc
 402              	.LFE66:
 403              		.size	rx_interrupt, .-rx_interrupt
 404              		.section	.text.temp_interrupt,"ax",%progbits
 405              		.align	2
 406              		.global	temp_interrupt
 407              		.thumb
 408              		.thumb_func
 409              		.type	temp_interrupt, %function
 410              	temp_interrupt:
 411              	.LFB67:
 135:main.c        **** 
 136:main.c        **** CY_ISR(temp_interrupt){
 412              		.loc 1 136 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 137:main.c        ****     adjust_timer_STATUS;
 422              		.loc 1 137 0
 423 0004 0D4B     		ldr	r3, .L23
 424 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 11


 138:main.c        ****     if (STATE == WAIT_TO_LAUNCH || STATE == LANDED || STATE == RESURFACE){ 
 425              		.loc 1 138 0
 426 0008 0D4B     		ldr	r3, .L23+4
 427 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 000c 012B     		cmp	r3, #1
 429 000e 07D0     		beq	.L21
 430              		.loc 1 138 0 is_stmt 0 discriminator 1
 431 0010 0B4B     		ldr	r3, .L23+4
 432 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 433 0014 032B     		cmp	r3, #3
 434 0016 03D0     		beq	.L21
 435              		.loc 1 138 0 discriminator 2
 436 0018 094B     		ldr	r3, .L23+4
 437 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 438 001c 042B     		cmp	r3, #4
 439 001e 08D1     		bne	.L20
 440              	.L21:
 139:main.c        ****         wait_flag = 1;
 441              		.loc 1 139 0 is_stmt 1
 442 0020 084B     		ldr	r3, .L23+8
 443 0022 0122     		movs	r2, #1
 444 0024 1A70     		strb	r2, [r3]
 140:main.c        ****         countdown++;
 445              		.loc 1 140 0
 446 0026 084B     		ldr	r3, .L23+12
 447 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 448 002a 0133     		adds	r3, r3, #1
 449 002c DAB2     		uxtb	r2, r3
 450 002e 064B     		ldr	r3, .L23+12
 451 0030 1A70     		strb	r2, [r3]
 452              	.L20:
 141:main.c        ****     }
 142:main.c        **** }
 453              		.loc 1 142 0
 454 0032 BD46     		mov	sp, r7
 455              		.cfi_def_cfa_register 13
 456              		@ sp needed
 457 0034 5DF8047B 		ldr	r7, [sp], #4
 458              		.cfi_restore 7
 459              		.cfi_def_cfa_offset 0
 460 0038 7047     		bx	lr
 461              	.L24:
 462 003a 00BF     		.align	2
 463              	.L23:
 464 003c 67650040 		.word	1073767783
 465 0040 00000000 		.word	STATE
 466 0044 00000000 		.word	wait_flag
 467 0048 00000000 		.word	countdown
 468              		.cfi_endproc
 469              	.LFE67:
 470              		.size	temp_interrupt, .-temp_interrupt
 471              		.section	.rodata
 472              		.align	2
 473              	.LC6:
 474 0000 50536F43 		.ascii	"PSoC 5LP: O-Vac\000"
 474      20354C50 
 474      3A204F2D 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 12


 474      56616300 
 475              		.align	2
 476              	.LC7:
 477 0010 49324320 		.ascii	"I2C Working\000"
 477      576F726B 
 477      696E6700 
 478              		.align	2
 479              	.LC8:
 480 001c 53642076 		.ascii	"Sd vol succeed\000"
 480      6F6C2073 
 480      75636365 
 480      656400
 481 002b 00       		.align	2
 482              	.LC9:
 483 002c 53642076 		.ascii	"Sd vol failed\000"
 483      6F6C2066 
 483      61696C65 
 483      6400
 484 003a 0000     		.align	2
 485              	.LC10:
 486 003c 666F726D 		.ascii	"format Succeeded\000"
 486      61742053 
 486      75636365 
 486      65646564 
 486      00
 487 004d 000000   		.align	2
 488              	.LC11:
 489 0050 666F726D 		.ascii	"format Failed\000"
 489      61742046 
 489      61696C65 
 489      6400
 490 005e 0000     		.align	2
 491              	.LC12:
 492 0060 7700     		.ascii	"w\000"
 493 0062 0000     		.align	2
 494              	.LC13:
 495 0064 46696C65 		.ascii	"File \000"
 495      2000
 496 006a 0000     		.align	2
 497              	.LC14:
 498 006c 77617320 		.ascii	"was opened\000"
 498      6F70656E 
 498      656400
 499 0077 00       		.align	2
 500              	.LC15:
 501 0078 77726974 		.ascii	"written to file\000"
 501      74656E20 
 501      746F2066 
 501      696C6500 
 502              		.align	2
 503              	.LC16:
 504 0088 4661696C 		.ascii	"Failed to write\000"
 504      65642074 
 504      6F207772 
 504      69746500 
 505              		.align	2
 506              	.LC17:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 13


 507 0098 66696C65 		.ascii	"file not created\000"
 507      206E6F74 
 507      20637265 
 507      61746564 
 507      00
 508 00a9 000000   		.align	2
 509              	.LC18:
 510 00ac 0A2D2D2D 		.ascii	"\012------------\012\000"
 510      2D2D2D2D 
 510      2D2D2D2D 
 510      2D0A00
 511              		.global	__aeabi_i2f
 512              		.global	__aeabi_f2d
 513              		.global	__aeabi_dmul
 514              		.global	__aeabi_d2f
 515              		.global	__aeabi_fadd
 516              		.global	__aeabi_fdiv
 517              		.global	__aeabi_f2iz
 518              		.global	__aeabi_fsub
 519              		.global	__aeabi_fmul
 520 00bb 00       		.align	2
 521              	.LC19:
 522 00bc 70726573 		.ascii	"pressure: %d.%04d, %d\012\000"
 522      73757265 
 522      3A202564 
 522      2E253034 
 522      642C2025 
 523 00d3 00       		.align	2
 524              	.LC20:
 525 00d4 25642564 		.ascii	"%d%d\000"
 525      00
 526 00d9 000000   		.align	2
 527              	.LC21:
 528 00dc 53544154 		.ascii	"STATE: DESCENT\000"
 528      453A2044 
 528      45534345 
 528      4E5400
 529 00eb 00       		.align	2
 530              	.LC22:
 531 00ec 542D6D69 		.ascii	"T-minus %d seconds\012\000"
 531      6E757320 
 531      25642073 
 531      65636F6E 
 531      64730A00 
 532              		.align	2
 533              	.LC23:
 534 0100 53544154 		.ascii	"STATE: LANDED\000"
 534      453A204C 
 534      414E4445 
 534      4400
 535 010e 0000     		.align	2
 536              	.LC24:
 537 0110 53544154 		.ascii	"STATE: LANDED ***********\012\000"
 537      453A204C 
 537      414E4445 
 537      44202A2A 
 537      2A2A2A2A 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 14


 538 012b 00       		.align	2
 539              	.LC25:
 540 012c 56414355 		.ascii	"VACUUMING\000"
 540      554D494E 
 540      4700
 541 0136 0000     		.align	2
 542              	.LC26:
 543 0138 53544154 		.ascii	"STATE: VACUUMING ***********\012\000"
 543      453A2056 
 543      41435555 
 543      4D494E47 
 543      202A2A2A 
 544 0156 0000     		.align	2
 545              	.LC27:
 546 0158 53544154 		.ascii	"STATE: WAIT\000"
 546      453A2057 
 546      41495400 
 547              		.align	2
 548              	.LC28:
 549 0164 53544154 		.ascii	"STATE: RESURFACING\000"
 549      453A2052 
 549      45535552 
 549      46414349 
 549      4E4700
 550 0177 00       		.align	2
 551              	.LC29:
 552 0178 53544154 		.ascii	"STATE: RESURFACING ***********\012\000"
 552      453A2052 
 552      45535552 
 552      46414349 
 552      4E47202A 
 553              		.align	2
 554              	.LC30:
 555 0198 57415445 		.ascii	"WATER DETECTED\000"
 555      52204445 
 555      54454354 
 555      454400
 556 01a7 00       		.align	2
 557              	.LC31:
 558 01a8 5452414E 		.ascii	"TRANSMIT\000"
 558      534D4954 
 558      00
 559 01b1 000000   		.align	2
 560              	.LC32:
 561 01b4 53544154 		.ascii	"STATE: TRANSMIT ***********\012\000"
 561      453A2054 
 561      52414E53 
 561      4D495420 
 561      2A2A2A2A 
 562 01d1 000000   		.align	2
 563              	.LC0:
 564 01d4 53595354 		.ascii	"SYSTEM_CHECK\000"
 564      454D5F43 
 564      4845434B 
 564      00
 565 01e1 00       		.space	1
 566 01e2 0000     		.align	2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 15


 567              	.LC1:
 568 01e4 53544154 		.ascii	"STATE: DESCENDING\012\000"
 568      453A2044 
 568      45534345 
 568      4E44494E 
 568      470A00
 569 01f7 00       		.align	2
 570              	.LC2:
 571 01f8 53544154 		.ascii	"STATE: LANDED\012\000"
 571      453A204C 
 571      414E4445 
 571      440A00
 572 0207 00       		.align	2
 573              	.LC3:
 574 0208 53544154 		.ascii	"STATE: VACUUMING\012\000"
 574      453A2056 
 574      41435555 
 574      4D494E47 
 574      0A00
 575 021a 0000     		.align	2
 576              	.LC4:
 577 021c 53544154 		.ascii	"STATE: RESURFACE\012\000"
 577      453A2052 
 577      45535552 
 577      46414345 
 577      0A00
 578 022e 0000     		.align	2
 579              	.LC5:
 580 0230 53544154 		.ascii	"STATE: TRANSMIT\012\000"
 580      453A2054 
 580      52414E53 
 580      4D49540A 
 580      00
 581 0241 000000   		.section	.text.main,"ax",%progbits
 582              		.align	2
 583              		.global	main
 584              		.thumb
 585              		.thumb_func
 586              		.type	main, %function
 587              	main:
 588              	.LFB68:
 143:main.c        **** 
 144:main.c        **** int main()
 145:main.c        **** {
 589              		.loc 1 145 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 296
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593 0000 B0B5     		push	{r4, r5, r7, lr}
 594              		.cfi_def_cfa_offset 16
 595              		.cfi_offset 4, -16
 596              		.cfi_offset 5, -12
 597              		.cfi_offset 7, -8
 598              		.cfi_offset 14, -4
 599 0002 CCB0     		sub	sp, sp, #304
 600              		.cfi_def_cfa_offset 320
 601 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 16


 602              		.cfi_def_cfa 7, 312
 146:main.c        ****     int num = 0, decimals = 0;                                       // ADC Voltage conversion plac
 603              		.loc 1 146 0
 604 0006 0023     		movs	r3, #0
 605 0008 C7F81831 		str	r3, [r7, #280]
 606 000c 0023     		movs	r3, #0
 607 000e C7F81431 		str	r3, [r7, #276]
 147:main.c        ****     float voltage = 0, temp = 0, output = 0, pressure_avg = 0;       // ADC Voltage conversion vari
 608              		.loc 1 147 0
 609 0012 4FF00003 		mov	r3, #0
 610 0016 C7F81031 		str	r3, [r7, #272]	@ float
 611 001a 4FF00003 		mov	r3, #0
 612 001e C7F80C31 		str	r3, [r7, #268]	@ float
 613 0022 4FF00003 		mov	r3, #0
 614 0026 C7F80831 		str	r3, [r7, #264]	@ float
 615 002a 4FF00003 		mov	r3, #0
 616 002e C7F82431 		str	r3, [r7, #292]	@ float
 148:main.c        ****     char buf[50], tempbuf[20] = {}, curState[14] = "SYSTEM_CHECK";  // buffers, UART and initial st
 617              		.loc 1 148 0
 618 0032 07F1B803 		add	r3, r7, #184
 619 0036 0022     		movs	r2, #0
 620 0038 1A60     		str	r2, [r3]
 621 003a 0433     		adds	r3, r3, #4
 622 003c 0022     		movs	r2, #0
 623 003e 1A60     		str	r2, [r3]
 624 0040 0433     		adds	r3, r3, #4
 625 0042 0022     		movs	r2, #0
 626 0044 1A60     		str	r2, [r3]
 627 0046 0433     		adds	r3, r3, #4
 628 0048 0022     		movs	r2, #0
 629 004a 1A60     		str	r2, [r3]
 630 004c 0433     		adds	r3, r3, #4
 631 004e 0022     		movs	r2, #0
 632 0050 1A60     		str	r2, [r3]
 633 0052 0433     		adds	r3, r3, #4
 634 0054 A24B     		ldr	r3, .L91+8
 635 0056 07F1A804 		add	r4, r7, #168
 636 005a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 637 005c 07C4     		stmia	r4!, {r0, r1, r2}
 638 005e 2370     		strb	r3, [r4]
 639 0060 0023     		movs	r3, #0
 640 0062 87F8B530 		strb	r3, [r7, #181]
 149:main.c        ****     char descendbuf[DESCENDING_LEN] = STATE_DESCENDING;             // buffers for transmitting sta
 641              		.loc 1 149 0
 642 0066 9F4B     		ldr	r3, .L91+12
 643 0068 07F19404 		add	r4, r7, #148
 644 006c 1D46     		mov	r5, r3
 645 006e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 646 0070 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 647 0072 2B68     		ldr	r3, [r5]
 648 0074 2380     		strh	r3, [r4]	@ movhi
 150:main.c        ****     char landedbuf[LANDED_LEN] = STATE_LANDED;              
 649              		.loc 1 150 0
 650 0076 9C4B     		ldr	r3, .L91+16
 651 0078 07F18404 		add	r4, r7, #132
 652 007c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 653 007e 07C4     		stmia	r4!, {r0, r1, r2}
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 17


 654 0080 2380     		strh	r3, [r4]	@ movhi
 151:main.c        ****     char vacuumbuf[VACUUM_LEN] = STATE_VACUUM;
 655              		.loc 1 151 0
 656 0082 9A4B     		ldr	r3, .L91+20
 657 0084 07F17004 		add	r4, r7, #112
 658 0088 1D46     		mov	r5, r3
 659 008a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 660 008c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 661 008e 2B68     		ldr	r3, [r5]
 662 0090 2370     		strb	r3, [r4]
 152:main.c        ****     char resurfbuf[RESURFACE_LEN] = STATE_RESURFACE;
 663              		.loc 1 152 0
 664 0092 974B     		ldr	r3, .L91+24
 665 0094 07F15C04 		add	r4, r7, #92
 666 0098 1D46     		mov	r5, r3
 667 009a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 668 009c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 669 009e 2B68     		ldr	r3, [r5]
 670 00a0 2370     		strb	r3, [r4]
 153:main.c        ****     char transbuf[TRANSMIT_LEN] = STATE_TRANSMIT;
 671              		.loc 1 153 0
 672 00a2 944B     		ldr	r3, .L91+28
 673 00a4 07F14C04 		add	r4, r7, #76
 674 00a8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 675 00aa 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 154:main.c        ****     int stateMsgCount = 0;
 676              		.loc 1 154 0
 677 00ae 0023     		movs	r3, #0
 678 00b0 C7F82031 		str	r3, [r7, #288]
 155:main.c        ****     
 156:main.c        ****     int16_t ax, ay, az, i;
 157:main.c        ****     int16_t gx, gy, gz;
 158:main.c        ****     int16_t z_offset = 0;
 679              		.loc 1 158 0
 680 00b4 0023     		movs	r3, #0
 681 00b6 A7F80631 		strh	r3, [r7, #262]	@ movhi
 159:main.c        ****     int tens = 0, ones = 0;                     // digit place variables for message len of bluetoo
 682              		.loc 1 159 0
 683 00ba 0023     		movs	r3, #0
 684 00bc BB64     		str	r3, [r7, #72]
 685 00be 0023     		movs	r3, #0
 686 00c0 C7F80031 		str	r3, [r7, #256]
 160:main.c        ****     
 161:main.c        ****     /* Start the components */
 162:main.c        ****     CYGlobalIntEnable;                          // enable global interrupts
 687              		.loc 1 162 0
 688              	@ 162 "main.c" 1
 689 00c4 62B6     		CPSIE   i
 690              	@ 0 "" 2
 163:main.c        ****     I2C_Master_Start(); 
 691              		.loc 1 163 0
 692              		.thumb
 693 00c6 FFF7FEFF 		bl	I2C_Master_Start
 164:main.c        ****     ADC_Start();
 694              		.loc 1 164 0
 695 00ca FFF7FEFF 		bl	ADC_Start
 165:main.c        ****     Sample_Timer_Start();                       // start timer module
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 18


 696              		.loc 1 165 0
 697 00ce FFF7FEFF 		bl	Sample_Timer_Start
 166:main.c        ****     Sample_ISR_StartEx(Sample_ISR_Handler);     // reference ISR function
 698              		.loc 1 166 0
 699 00d2 8948     		ldr	r0, .L91+32
 700 00d4 FFF7FEFF 		bl	Sample_ISR_StartEx
 167:main.c        ****     rx_interrupt_StartEx(rx_interrupt);
 701              		.loc 1 167 0
 702 00d8 8848     		ldr	r0, .L91+36
 703 00da FFF7FEFF 		bl	rx_interrupt_StartEx
 168:main.c        ****     //moisture_isr_StartEx(Moisture_ISR_Handler); // moisture isr start
 169:main.c        ****     //Comp_Start();                               // comparator for moisture start
 170:main.c        ****     UART_Start();
 704              		.loc 1 170 0
 705 00de FFF7FEFF 		bl	UART_Start
 171:main.c        ****     
 172:main.c        ****     
 173:main.c        ****     #ifdef LCD
 174:main.c        ****         LiquidCrystal_I2C_init(Addr,16,2,0);        // initialize I2C communication with LCD
 706              		.loc 1 174 0
 707 00e2 874B     		ldr	r3, .L91+40
 708 00e4 1B68     		ldr	r3, [r3]
 709 00e6 DBB2     		uxtb	r3, r3
 710 00e8 1846     		mov	r0, r3
 711 00ea 1021     		movs	r1, #16
 712 00ec 0222     		movs	r2, #2
 713 00ee 0023     		movs	r3, #0
 714 00f0 FFF7FEFF 		bl	LiquidCrystal_I2C_init
 175:main.c        ****         begin(); 
 715              		.loc 1 175 0
 716 00f4 FFF7FEFF 		bl	begin
 176:main.c        ****     
 177:main.c        ****     #endif
 178:main.c        ****    
 179:main.c        ****     /* initialize MPU6050 */
 180:main.c        ****     #ifdef MPU6050
 181:main.c        ****         MPU6050_init();    
 717              		.loc 1 181 0
 718 00f8 FFF7FEFF 		bl	MPU6050_init
 182:main.c        **** 	    MPU6050_initialize(); 
 719              		.loc 1 182 0
 720 00fc FFF7FEFF 		bl	MPU6050_initialize
 183:main.c        ****     #endif
 184:main.c        ****         
 185:main.c        ****     #ifdef LCD
 186:main.c        ****         /* Startup Display */
 187:main.c        ****         LCD_print("PSoC 5LP: O-Vac");
 721              		.loc 1 187 0
 722 0100 8048     		ldr	r0, .L91+44
 723 0102 FFF7FEFF 		bl	LCD_print
 188:main.c        ****         setCursor(0,1);
 724              		.loc 1 188 0
 725 0106 0020     		movs	r0, #0
 726 0108 0121     		movs	r1, #1
 727 010a FFF7FEFF 		bl	setCursor
 189:main.c        ****         LCD_print("I2C Working");
 728              		.loc 1 189 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 19


 729 010e 7E48     		ldr	r0, .L91+48
 730 0110 FFF7FEFF 		bl	LCD_print
 190:main.c        ****         
 191:main.c        ****         CyDelay(1000u);   
 731              		.loc 1 191 0
 732 0114 4FF47A70 		mov	r0, #1000
 733 0118 FFF7FEFF 		bl	CyDelay
 192:main.c        ****         clear();
 734              		.loc 1 192 0
 735 011c FFF7FEFF 		bl	clear
 193:main.c        ****     #endif
 194:main.c        ****     
 195:main.c        ****     /* Start the ADC conversion */
 196:main.c        ****     ADC_StartConvert();
 736              		.loc 1 196 0
 737 0120 FFF7FEFF 		bl	ADC_StartConvert
 197:main.c        **** 
 198:main.c        ****     /* Start SD card*/
 199:main.c        ****     #ifdef SD
 200:main.c        ****         {
 201:main.c        ****             FS_Init();
 738              		.loc 1 201 0
 739 0124 FFF7FEFF 		bl	FS_Init
 202:main.c        ****             FS_Mount(volume);
 740              		.loc 1 202 0
 741 0128 7848     		ldr	r0, .L91+52
 742 012a FFF7FEFF 		bl	FS_Mount
 203:main.c        ****             if(0 != FS_GetVolumeName(0u, volume, 9u))
 743              		.loc 1 203 0
 744 012e 0020     		movs	r0, #0
 745 0130 7649     		ldr	r1, .L91+52
 746 0132 0922     		movs	r2, #9
 747 0134 FFF7FEFF 		bl	FS_GetVolumeName
 748 0138 0346     		mov	r3, r0
 749 013a 002B     		cmp	r3, #0
 750 013c 03D0     		beq	.L26
 204:main.c        ****                 /* Getting volume name succeeded so prompt it on the LCD */
 205:main.c        ****                 LCD_print("Sd vol succeed");
 751              		.loc 1 205 0
 752 013e 7448     		ldr	r0, .L91+56
 753 0140 FFF7FEFF 		bl	LCD_print
 754 0144 02E0     		b	.L27
 755              	.L26:
 206:main.c        ****             else
 207:main.c        ****                 LCD_print("Sd vol failed");
 756              		.loc 1 207 0
 757 0146 7348     		ldr	r0, .L91+60
 758 0148 FFF7FEFF 		bl	LCD_print
 759              	.L27:
 208:main.c        ****                 
 209:main.c        ****             CyDelay(500u);
 760              		.loc 1 209 0
 761 014c 4FF4FA70 		mov	r0, #500
 762 0150 FFF7FEFF 		bl	CyDelay
 210:main.c        ****             clear();
 763              		.loc 1 210 0
 764 0154 FFF7FEFF 		bl	clear
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 20


 211:main.c        ****             if(0 == FS_FormatSD(volume))
 765              		.loc 1 211 0
 766 0158 6C48     		ldr	r0, .L91+52
 767 015a FFF7FEFF 		bl	FS_FormatSD
 768 015e 0346     		mov	r3, r0
 769 0160 002B     		cmp	r3, #0
 770 0162 03D1     		bne	.L28
 212:main.c        ****                 LCD_print("format Succeeded");
 771              		.loc 1 212 0
 772 0164 6C48     		ldr	r0, .L91+64
 773 0166 FFF7FEFF 		bl	LCD_print
 774 016a 02E0     		b	.L29
 775              	.L28:
 213:main.c        ****             else
 214:main.c        ****                 LCD_print("format Failed");
 776              		.loc 1 214 0
 777 016c 6B48     		ldr	r0, .L91+68
 778 016e FFF7FEFF 		bl	LCD_print
 779              	.L29:
 215:main.c        ****           
 216:main.c        ****             CyDelay(500u);
 780              		.loc 1 216 0
 781 0172 4FF4FA70 		mov	r0, #500
 782 0176 FFF7FEFF 		bl	CyDelay
 217:main.c        ****             clear();
 783              		.loc 1 217 0
 784 017a FFF7FEFF 		bl	clear
 218:main.c        ****             
 219:main.c        ****             fsfile = FS_FOpen(file, "w");
 785              		.loc 1 219 0
 786 017e 6848     		ldr	r0, .L91+72
 787 0180 6849     		ldr	r1, .L91+76
 788 0182 FFF7FEFF 		bl	FS_FOpen
 789 0186 0246     		mov	r2, r0
 790 0188 674B     		ldr	r3, .L91+80
 791 018a 1A60     		str	r2, [r3]
 220:main.c        ****             if(fsfile)
 792              		.loc 1 220 0
 793 018c 664B     		ldr	r3, .L91+80
 794 018e 1B68     		ldr	r3, [r3]
 795 0190 002B     		cmp	r3, #0
 796 0192 27D0     		beq	.L30
 221:main.c        ****             {
 222:main.c        ****                 /* Indicate successful file creation message */
 223:main.c        ****                 LCD_print("File ");
 797              		.loc 1 223 0
 798 0194 6548     		ldr	r0, .L91+84
 799 0196 FFF7FEFF 		bl	LCD_print
 224:main.c        ****                 LCD_print("was opened");
 800              		.loc 1 224 0
 801 019a 6548     		ldr	r0, .L91+88
 802 019c FFF7FEFF 		bl	LCD_print
 225:main.c        ****                 /* Need some delay to indicate output on the LCD */
 226:main.c        ****                 CyDelay(500u);
 803              		.loc 1 226 0
 804 01a0 4FF4FA70 		mov	r0, #500
 805 01a4 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 21


 227:main.c        ****                 clear();
 806              		.loc 1 227 0
 807 01a8 FFF7FEFF 		bl	clear
 228:main.c        ****                 
 229:main.c        ****                 if(0 != FS_Write(fsfile, file, strlen(file))) 
 808              		.loc 1 229 0
 809 01ac 5E4B     		ldr	r3, .L91+80
 810 01ae 1C68     		ldr	r4, [r3]
 811 01b0 5B48     		ldr	r0, .L91+72
 812 01b2 FFF7FEFF 		bl	strlen
 813 01b6 0346     		mov	r3, r0
 814 01b8 2046     		mov	r0, r4
 815 01ba 5949     		ldr	r1, .L91+72
 816 01bc 1A46     		mov	r2, r3
 817 01be FFF7FEFF 		bl	FS_Write
 818 01c2 0346     		mov	r3, r0
 819 01c4 002B     		cmp	r3, #0
 820 01c6 03D0     		beq	.L31
 230:main.c        ****                     /* Inditate that data was written to a file */
 231:main.c        ****                     LCD_print("written to file");
 821              		.loc 1 231 0
 822 01c8 5A48     		ldr	r0, .L91+92
 823 01ca FFF7FEFF 		bl	LCD_print
 824 01ce 02E0     		b	.L32
 825              	.L31:
 232:main.c        ****                 else
 233:main.c        ****                     LCD_print("Failed to write");
 826              		.loc 1 233 0
 827 01d0 5948     		ldr	r0, .L91+96
 828 01d2 FFF7FEFF 		bl	LCD_print
 829              	.L32:
 234:main.c        ****                     clear();
 830              		.loc 1 234 0
 831 01d6 FFF7FEFF 		bl	clear
 235:main.c        ****                 CyDelay(500u);
 832              		.loc 1 235 0
 833 01da 4FF4FA70 		mov	r0, #500
 834 01de FFF7FEFF 		bl	CyDelay
 835 01e2 02E0     		b	.L33
 836              	.L30:
 236:main.c        ****             }
 237:main.c        ****             else
 238:main.c        ****                 LCD_print("file not created");
 837              		.loc 1 238 0
 838 01e4 5548     		ldr	r0, .L91+100
 839 01e6 FFF7FEFF 		bl	LCD_print
 840              	.L33:
 239:main.c        ****         }
 240:main.c        ****         FS_Write(fsfile, "\n------------\n", 14);
 841              		.loc 1 240 0
 842 01ea 4F4B     		ldr	r3, .L91+80
 843 01ec 1B68     		ldr	r3, [r3]
 844 01ee 1846     		mov	r0, r3
 845 01f0 5349     		ldr	r1, .L91+104
 846 01f2 0E22     		movs	r2, #14
 847 01f4 FFF7FEFF 		bl	FS_Write
 241:main.c        ****     #endif
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 22


 242:main.c        ****     
 243:main.c        ****     #ifdef LCD
 244:main.c        ****         /* Display the current State */
 245:main.c        ****         setCursor(0,0);    
 848              		.loc 1 245 0
 849 01f8 0020     		movs	r0, #0
 850 01fa 0021     		movs	r1, #0
 851 01fc FFF7FEFF 		bl	setCursor
 246:main.c        ****         LCD_print(curState);
 852              		.loc 1 246 0
 853 0200 07F1A803 		add	r3, r7, #168
 854 0204 1846     		mov	r0, r3
 855 0206 FFF7FEFF 		bl	LCD_print
 247:main.c        ****     #endif
 248:main.c        ****     STATE = WAIT_TO_LAUNCH;
 856              		.loc 1 248 0
 857 020a 4E4B     		ldr	r3, .L91+108
 858 020c 0122     		movs	r2, #1
 859 020e 1A70     		strb	r2, [r3]
 249:main.c        ****     
 250:main.c        ****     Countdown_timer_Start();
 860              		.loc 1 250 0
 861 0210 FFF7FEFF 		bl	Countdown_timer_Start
 251:main.c        ****     adjust_timer_Start();
 862              		.loc 1 251 0
 863 0214 FFF7FEFF 		bl	adjust_timer_Start
 252:main.c        ****     countdown_StartEx(Countdown_ISR_Handler);
 864              		.loc 1 252 0
 865 0218 4B48     		ldr	r0, .L91+112
 866 021a FFF7FEFF 		bl	countdown_StartEx
 253:main.c        ****     temp_isr_StartEx(temp_interrupt);
 867              		.loc 1 253 0
 868 021e 4B48     		ldr	r0, .L91+116
 869 0220 FFF7FEFF 		bl	temp_isr_StartEx
 254:main.c        ****     int pulse = 0;
 870              		.loc 1 254 0
 871 0224 0023     		movs	r3, #0
 872 0226 C7F81C31 		str	r3, [r7, #284]
 873              	.L89:
 874              	.LBB2:
 255:main.c        ****     for(;;)
 256:main.c        ****     {
 257:main.c        ****         
 258:main.c        ****         if(ADC_IsEndConversion(ADC_RETURN_STATUS))
 875              		.loc 1 258 0
 876 022a 0120     		movs	r0, #1
 877 022c FFF7FEFF 		bl	ADC_IsEndConversion
 878 0230 0346     		mov	r3, r0
 879 0232 002B     		cmp	r3, #0
 880 0234 00F0EA80 		beq	.L34
 259:main.c        ****         {
 260:main.c        ****             output = ADC_GetResult32();
 881              		.loc 1 260 0
 882 0238 FFF7FEFF 		bl	ADC_GetResult32
 883 023c 0346     		mov	r3, r0
 884 023e 1846     		mov	r0, r3
 885 0240 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 23


 886 0244 0346     		mov	r3, r0
 887 0246 C7F80831 		str	r3, [r7, #264]	@ float
 261:main.c        **** 
 262:main.c        ****             voltage = output * (3.32 / 4096);
 888              		.loc 1 262 0
 889 024a D7F80801 		ldr	r0, [r7, #264]	@ float
 890 024e FFF7FEFF 		bl	__aeabi_f2d
 891 0252 0246     		mov	r2, r0
 892 0254 0B46     		mov	r3, r1
 893 0256 1046     		mov	r0, r2
 894 0258 1946     		mov	r1, r3
 895 025a 1FA3     		adr	r3, .L91
 896 025c D3E90023 		ldrd	r2, [r3]
 897 0260 FFF7FEFF 		bl	__aeabi_dmul
 898 0264 0246     		mov	r2, r0
 899 0266 0B46     		mov	r3, r1
 900 0268 1046     		mov	r0, r2
 901 026a 1946     		mov	r1, r3
 902 026c FFF7FEFF 		bl	__aeabi_d2f
 903 0270 0346     		mov	r3, r0
 904 0272 C7F81031 		str	r3, [r7, #272]	@ float
 263:main.c        ****             if(wait_flag == 1){
 905              		.loc 1 263 0
 906 0276 364B     		ldr	r3, .L91+120
 907 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908 027a 002B     		cmp	r3, #0
 909 027c 00F0C680 		beq	.L34
 264:main.c        ****                 if (press_id < MA_WINDOW){
 910              		.loc 1 264 0
 911 0280 344B     		ldr	r3, .L91+124
 912 0282 1B68     		ldr	r3, [r3]
 913 0284 0E2B     		cmp	r3, #14
 914 0286 0BDC     		bgt	.L35
 265:main.c        ****                     pressure_sum += voltage;     
 915              		.loc 1 265 0
 916 0288 334B     		ldr	r3, .L91+128
 917 028a 1B68     		ldr	r3, [r3]	@ float
 918 028c 1846     		mov	r0, r3
 919 028e D7F81011 		ldr	r1, [r7, #272]	@ float
 920 0292 FFF7FEFF 		bl	__aeabi_fadd
 921 0296 0346     		mov	r3, r0
 922 0298 1A46     		mov	r2, r3
 923 029a 2F4B     		ldr	r3, .L91+128
 924 029c 1A60     		str	r2, [r3]	@ float
 925 029e ADE0     		b	.L36
 926              	.L35:
 266:main.c        ****                 }
 267:main.c        ****                 else if(press_id == MA_WINDOW){
 927              		.loc 1 267 0
 928 02a0 2C4B     		ldr	r3, .L91+124
 929 02a2 1B68     		ldr	r3, [r3]
 930 02a4 0F2B     		cmp	r3, #15
 931 02a6 5BD1     		bne	.L37
 268:main.c        ****                     pressure_sum += voltage;
 932              		.loc 1 268 0
 933 02a8 2B4B     		ldr	r3, .L91+128
 934 02aa 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 24


 935 02ac 1846     		mov	r0, r3
 936 02ae D7F81011 		ldr	r1, [r7, #272]	@ float
 937 02b2 FFF7FEFF 		bl	__aeabi_fadd
 938 02b6 0346     		mov	r3, r0
 939 02b8 1A46     		mov	r2, r3
 940 02ba 274B     		ldr	r3, .L91+128
 941 02bc 1A60     		str	r2, [r3]	@ float
 269:main.c        ****                     pressure_avg = pressure_sum/MA_WINDOW;                            // compute ba
 942              		.loc 1 269 0
 943 02be 264B     		ldr	r3, .L91+128
 944 02c0 1B68     		ldr	r3, [r3]	@ float
 945 02c2 1846     		mov	r0, r3
 946 02c4 2549     		ldr	r1, .L91+132
 947 02c6 FFF7FEFF 		bl	__aeabi_fdiv
 948 02ca 0346     		mov	r3, r0
 949 02cc C7F82431 		str	r3, [r7, #292]	@ float
 950 02d0 94E0     		b	.L36
 951              	.L92:
 952 02d2 00BFAFF3 		.align	3
 952      0080
 953              	.L91:
 954 02d8 8FC2F528 		.word	687194767
 955 02dc 5C8F4A3F 		.word	1061850972
 956 02e0 D4010000 		.word	.LC0
 957 02e4 E4010000 		.word	.LC1
 958 02e8 F8010000 		.word	.LC2
 959 02ec 08020000 		.word	.LC3
 960 02f0 1C020000 		.word	.LC4
 961 02f4 30020000 		.word	.LC5
 962 02f8 00000000 		.word	Sample_ISR_Handler
 963 02fc 00000000 		.word	rx_interrupt
 964 0300 00000000 		.word	Addr
 965 0304 00000000 		.word	.LC6
 966 0308 10000000 		.word	.LC7
 967 030c 00000000 		.word	volume
 968 0310 1C000000 		.word	.LC8
 969 0314 2C000000 		.word	.LC9
 970 0318 3C000000 		.word	.LC10
 971 031c 50000000 		.word	.LC11
 972 0320 00000000 		.word	file
 973 0324 60000000 		.word	.LC12
 974 0328 00000000 		.word	fsfile
 975 032c 64000000 		.word	.LC13
 976 0330 6C000000 		.word	.LC14
 977 0334 78000000 		.word	.LC15
 978 0338 88000000 		.word	.LC16
 979 033c 98000000 		.word	.LC17
 980 0340 AC000000 		.word	.LC18
 981 0344 00000000 		.word	STATE
 982 0348 00000000 		.word	Countdown_ISR_Handler
 983 034c 00000000 		.word	temp_interrupt
 984 0350 00000000 		.word	wait_flag
 985 0354 00000000 		.word	press_id
 986 0358 00000000 		.word	pressure_sum
 987 035c 00007041 		.word	1097859072
 988              	.L37:
 989              	.LBB3:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 25


 270:main.c        ****                 }
 271:main.c        ****                 else{
 272:main.c        ****                     pressure_avg = ComputeMA(pressure_avg, MA_WINDOW, voltage);
 990              		.loc 1 272 0
 991 0360 D7F82401 		ldr	r0, [r7, #292]	@ float
 992 0364 0F21     		movs	r1, #15
 993 0366 D7F81021 		ldr	r2, [r7, #272]	@ float
 994 036a FFF7FEFF 		bl	ComputeMA
 995 036e C7F82401 		str	r0, [r7, #292]	@ float
 273:main.c        ****                     num = pressure_avg;
 996              		.loc 1 273 0
 997 0372 D7F82401 		ldr	r0, [r7, #292]	@ float
 998 0376 FFF7FEFF 		bl	__aeabi_f2iz
 999 037a 0346     		mov	r3, r0
 1000 037c C7F81831 		str	r3, [r7, #280]
 274:main.c        ****                     temp = pressure_avg - num;
 1001              		.loc 1 274 0
 1002 0380 D7F81801 		ldr	r0, [r7, #280]
 1003 0384 FFF7FEFF 		bl	__aeabi_i2f
 1004 0388 0346     		mov	r3, r0
 1005 038a D7F82401 		ldr	r0, [r7, #292]	@ float
 1006 038e 1946     		mov	r1, r3
 1007 0390 FFF7FEFF 		bl	__aeabi_fsub
 1008 0394 0346     		mov	r3, r0
 1009 0396 C7F80C31 		str	r3, [r7, #268]	@ float
 275:main.c        ****                     decimals = temp * 10000;
 1010              		.loc 1 275 0
 1011 039a D7F80C01 		ldr	r0, [r7, #268]	@ float
 1012 039e B649     		ldr	r1, .L93
 1013 03a0 FFF7FEFF 		bl	__aeabi_fmul
 1014 03a4 0346     		mov	r3, r0
 1015 03a6 1846     		mov	r0, r3
 1016 03a8 FFF7FEFF 		bl	__aeabi_f2iz
 1017 03ac 0346     		mov	r3, r0
 1018 03ae C7F81431 		str	r3, [r7, #276]
 276:main.c        ****                     char sdbuf[60] = {};
 1019              		.loc 1 276 0
 1020 03b2 3B46     		mov	r3, r7
 1021 03b4 1A46     		mov	r2, r3
 1022 03b6 3C23     		movs	r3, #60
 1023 03b8 1046     		mov	r0, r2
 1024 03ba 0021     		movs	r1, #0
 1025 03bc 1A46     		mov	r2, r3
 1026 03be FFF7FEFF 		bl	memset
 277:main.c        ****                     #ifdef SD
 278:main.c        ****                         sprintf(sdbuf, "pressure: %d.%04d, %d\n", num, decimals, (int16)output); //
 1027              		.loc 1 278 0
 1028 03c2 D7F80801 		ldr	r0, [r7, #264]	@ float
 1029 03c6 FFF7FEFF 		bl	__aeabi_f2iz
 1030 03ca 0346     		mov	r3, r0
 1031 03cc 9BB2     		uxth	r3, r3
 1032 03ce 1BB2     		sxth	r3, r3
 1033 03d0 3A46     		mov	r2, r7
 1034 03d2 0093     		str	r3, [sp]
 1035 03d4 1046     		mov	r0, r2
 1036 03d6 A949     		ldr	r1, .L93+4
 1037 03d8 D7F81821 		ldr	r2, [r7, #280]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 26


 1038 03dc D7F81431 		ldr	r3, [r7, #276]
 1039 03e0 FFF7FEFF 		bl	sprintf
 279:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));                           
 1040              		.loc 1 279 0
 1041 03e4 A64B     		ldr	r3, .L93+8
 1042 03e6 1C68     		ldr	r4, [r3]
 1043 03e8 3B46     		mov	r3, r7
 1044 03ea 1846     		mov	r0, r3
 1045 03ec FFF7FEFF 		bl	strlen
 1046 03f0 0246     		mov	r2, r0
 1047 03f2 3B46     		mov	r3, r7
 1048 03f4 2046     		mov	r0, r4
 1049 03f6 1946     		mov	r1, r3
 1050 03f8 FFF7FEFF 		bl	FS_Write
 1051              	.L36:
 1052              	.LBE3:
 280:main.c        ****                     #endif 
 281:main.c        ****                 }
 282:main.c        ****                 wait_flag = 0;
 1053              		.loc 1 282 0
 1054 03fc A14B     		ldr	r3, .L93+12
 1055 03fe 0022     		movs	r2, #0
 1056 0400 1A70     		strb	r2, [r3]
 283:main.c        ****                 press_id++;
 1057              		.loc 1 283 0
 1058 0402 A14B     		ldr	r3, .L93+16
 1059 0404 1B68     		ldr	r3, [r3]
 1060 0406 0133     		adds	r3, r3, #1
 1061 0408 9F4A     		ldr	r2, .L93+16
 1062 040a 1360     		str	r3, [r2]
 1063              	.L34:
 284:main.c        ****             }
 285:main.c        ****             
 286:main.c        ****         }
 287:main.c        ****         
 288:main.c        ****     /* Bluetooth message response*/
 289:main.c        ****     #ifdef BT
 290:main.c        ****         if (msg_count >= 2){
 1064              		.loc 1 290 0
 1065 040c 9F4B     		ldr	r3, .L93+20
 1066 040e 1B68     		ldr	r3, [r3]
 1067 0410 012B     		cmp	r3, #1
 1068 0412 2BDD     		ble	.L38
 1069              	.LBB4:
 291:main.c        ****             tens = RxBuffer[0] - 48;
 1070              		.loc 1 291 0
 1071 0414 9E4B     		ldr	r3, .L93+24
 1072 0416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 0418 303B     		subs	r3, r3, #48
 1074 041a BB64     		str	r3, [r7, #72]
 292:main.c        ****             ones = RxBuffer[1] - 48;
 1075              		.loc 1 292 0
 1076 041c 9C4B     		ldr	r3, .L93+24
 1077 041e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1078 0420 303B     		subs	r3, r3, #48
 1079 0422 C7F80031 		str	r3, [r7, #256]
 293:main.c        ****             bytes = (tens * 10) + ones;
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 27


 1080              		.loc 1 293 0
 1081 0426 BA6C     		ldr	r2, [r7, #72]
 1082 0428 1346     		mov	r3, r2
 1083 042a 9B00     		lsls	r3, r3, #2
 1084 042c 1344     		add	r3, r3, r2
 1085 042e 5B00     		lsls	r3, r3, #1
 1086 0430 1A46     		mov	r2, r3
 1087 0432 D7F80031 		ldr	r3, [r7, #256]
 1088 0436 1344     		add	r3, r3, r2
 1089 0438 964A     		ldr	r2, .L93+28
 1090 043a 1360     		str	r3, [r2]
 294:main.c        ****             char t[5] = {};
 1091              		.loc 1 294 0
 1092 043c 0023     		movs	r3, #0
 1093 043e FB63     		str	r3, [r7, #60]
 1094 0440 0023     		movs	r3, #0
 1095 0442 87F84030 		strb	r3, [r7, #64]
 295:main.c        ****             sprintf(t, "%d%d", tens, ones);
 1096              		.loc 1 295 0
 1097 0446 BB6C     		ldr	r3, [r7, #72]
 1098 0448 07F13C02 		add	r2, r7, #60
 1099 044c 1046     		mov	r0, r2
 1100 044e 9249     		ldr	r1, .L93+32
 1101 0450 1A46     		mov	r2, r3
 1102 0452 D7F80031 		ldr	r3, [r7, #256]
 1103 0456 FFF7FEFF 		bl	sprintf
 296:main.c        ****             setCursor(1, 0);
 1104              		.loc 1 296 0
 1105 045a 0120     		movs	r0, #1
 1106 045c 0021     		movs	r1, #0
 1107 045e FFF7FEFF 		bl	setCursor
 297:main.c        ****             LCD_print(t);
 1108              		.loc 1 297 0
 1109 0462 07F13C03 		add	r3, r7, #60
 1110 0466 1846     		mov	r0, r3
 1111 0468 FFF7FEFF 		bl	LCD_print
 1112              	.L38:
 1113              	.LBE4:
 298:main.c        ****         } 
 299:main.c        ****         
 300:main.c        ****         if(rxflag) {
 1114              		.loc 1 300 0
 1115 046c 8B4B     		ldr	r3, .L93+36
 1116 046e 1B68     		ldr	r3, [r3]
 1117 0470 002B     		cmp	r3, #0
 1118 0472 57D0     		beq	.L39
 301:main.c        ****             uint8_to_char(RxBuffer, &tempbuf[0], 20);
 1119              		.loc 1 301 0
 1120 0474 07F1B803 		add	r3, r7, #184
 1121 0478 8548     		ldr	r0, .L93+24
 1122 047a 1946     		mov	r1, r3
 1123 047c 1422     		movs	r2, #20
 1124 047e FFF7FEFF 		bl	uint8_to_char
 302:main.c        ****             BT_Process(&tempbuf[3], &STATE, bytes, &dataflag);
 1125              		.loc 1 302 0
 1126 0482 844B     		ldr	r3, .L93+28
 1127 0484 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 28


 1128 0486 07F1B803 		add	r3, r7, #184
 1129 048a 0333     		adds	r3, r3, #3
 1130 048c 1846     		mov	r0, r3
 1131 048e 8449     		ldr	r1, .L93+40
 1132 0490 844B     		ldr	r3, .L93+44
 1133 0492 FFF7FEFF 		bl	BT_Process
 303:main.c        ****             if (STATE == DESCENDING){
 1134              		.loc 1 303 0
 1135 0496 824B     		ldr	r3, .L93+40
 1136 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 049a 022B     		cmp	r3, #2
 1138 049c 2DD1     		bne	.L40
 304:main.c        ****                 #ifdef LCD
 305:main.c        ****                     setCursor(0,0);
 1139              		.loc 1 305 0
 1140 049e 0020     		movs	r0, #0
 1141 04a0 0021     		movs	r1, #0
 1142 04a2 FFF7FEFF 		bl	setCursor
 306:main.c        ****                     clear();
 1143              		.loc 1 306 0
 1144 04a6 FFF7FEFF 		bl	clear
 307:main.c        ****                     LCD_print("STATE: DESCENT");
 1145              		.loc 1 307 0
 1146 04aa 7F48     		ldr	r0, .L93+48
 1147 04ac FFF7FEFF 		bl	LCD_print
 308:main.c        ****                 #endif
 309:main.c        ****                 #ifdef BT
 310:main.c        ****                     stateMsgCount = 0;
 1148              		.loc 1 310 0
 1149 04b0 0023     		movs	r3, #0
 1150 04b2 C7F82031 		str	r3, [r7, #288]
 311:main.c        ****                     while (stateMsgCount < DESCENDING_LEN){
 1151              		.loc 1 311 0
 1152 04b6 19E0     		b	.L41
 1153              	.L44:
 312:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1154              		.loc 1 312 0
 1155 04b8 11E0     		b	.L42
 1156              	.L43:
 313:main.c        ****                             UART_PutChar(descendbuf[stateMsgCount++]);
 1157              		.loc 1 313 0
 1158 04ba D7F82031 		ldr	r3, [r7, #288]
 1159 04be 5A1C     		adds	r2, r3, #1
 1160 04c0 C7F82021 		str	r2, [r7, #288]
 1161 04c4 07F59472 		add	r2, r7, #296
 1162 04c8 1344     		add	r3, r3, r2
 1163 04ca 13F8943C 		ldrb	r3, [r3, #-148]	@ zero_extendqisi2
 1164 04ce 1846     		mov	r0, r3
 1165 04d0 FFF7FEFF 		bl	UART_PutChar
 314:main.c        ****                             if (stateMsgCount >= DESCENDING_LEN) break;
 1166              		.loc 1 314 0
 1167 04d4 D7F82031 		ldr	r3, [r7, #288]
 1168 04d8 112B     		cmp	r3, #17
 1169 04da 00DD     		ble	.L42
 1170 04dc 06E0     		b	.L41
 1171              	.L42:
 312:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 29


 1172              		.loc 1 312 0
 1173 04de FFF7FEFF 		bl	UART_ReadTxStatus
 1174 04e2 0346     		mov	r3, r0
 1175 04e4 03F00803 		and	r3, r3, #8
 1176 04e8 002B     		cmp	r3, #0
 1177 04ea E6D1     		bne	.L43
 1178              	.L41:
 311:main.c        ****                         while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1179              		.loc 1 311 0
 1180 04ec D7F82031 		ldr	r3, [r7, #288]
 1181 04f0 112B     		cmp	r3, #17
 1182 04f2 E1DD     		ble	.L44
 315:main.c        ****                         }
 316:main.c        ****                     }
 317:main.c        ****                 #endif
 318:main.c        ****                 countdown = 0;
 1183              		.loc 1 318 0
 1184 04f4 6D4B     		ldr	r3, .L93+52
 1185 04f6 0022     		movs	r2, #0
 1186 04f8 1A70     		strb	r2, [r3]
 1187              	.L40:
 319:main.c        ****             }
 320:main.c        ****             msg_count = 0; bytes = 0;
 1188              		.loc 1 320 0
 1189 04fa 644B     		ldr	r3, .L93+20
 1190 04fc 0022     		movs	r2, #0
 1191 04fe 1A60     		str	r2, [r3]
 1192 0500 644B     		ldr	r3, .L93+28
 1193 0502 0022     		movs	r2, #0
 1194 0504 1A60     		str	r2, [r3]
 321:main.c        ****             memset(RxBuffer, 0, BUFFER_LEN);
 1195              		.loc 1 321 0
 1196 0506 6248     		ldr	r0, .L93+24
 1197 0508 0021     		movs	r1, #0
 1198 050a 4022     		movs	r2, #64
 1199 050c FFF7FEFF 		bl	memset
 322:main.c        ****             memset(tempbuf, 0, 20);
 1200              		.loc 1 322 0
 1201 0510 07F1B803 		add	r3, r7, #184
 1202 0514 1846     		mov	r0, r3
 1203 0516 0021     		movs	r1, #0
 1204 0518 1422     		movs	r2, #20
 1205 051a FFF7FEFF 		bl	memset
 323:main.c        ****             rxflag = 0;
 1206              		.loc 1 323 0
 1207 051e 5F4B     		ldr	r3, .L93+36
 1208 0520 0022     		movs	r2, #0
 1209 0522 1A60     		str	r2, [r3]
 1210              	.L39:
 324:main.c        ****         }
 325:main.c        ****     #endif
 326:main.c        ****     
 327:main.c        ****         /* Display Z-Acceleration */
 328:main.c        **** 
 329:main.c        ****         az = MPU6050_getAccelerationZ();
 1211              		.loc 1 329 0
 1212 0524 FFF7FEFF 		bl	MPU6050_getAccelerationZ
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 30


 1213 0528 0346     		mov	r3, r0
 1214 052a A7F8FE30 		strh	r3, [r7, #254]	@ movhi
 330:main.c        **** 
 331:main.c        ****         int t = 1;
 1215              		.loc 1 331 0
 1216 052e 0123     		movs	r3, #1
 1217 0530 7B64     		str	r3, [r7, #68]
 332:main.c        ****         /* State Machine */
 333:main.c        ****         switch (STATE){
 1218              		.loc 1 333 0
 1219 0532 5B4B     		ldr	r3, .L93+40
 1220 0534 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 0536 013B     		subs	r3, r3, #1
 1222 0538 042B     		cmp	r3, #4
 1223 053a 00F20783 		bhi	.L90
 1224 053e 01A2     		adr	r2, .L47
 1225 0540 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1226              		.p2align 2
 1227              	.L47:
 1228 0544 59050000 		.word	.L46+1
 1229 0548 57060000 		.word	.L48+1
 1230 054c E9080000 		.word	.L49+1
 1231 0550 2F0A0000 		.word	.L50+1
 1232 0554 1F0B0000 		.word	.L51+1
 1233              		.p2align 1
 1234              	.L46:
 334:main.c        ****     
 335:main.c        ****             case WAIT_TO_LAUNCH:
 336:main.c        ****                 id = 1;                                // Interrupt count.
 1235              		.loc 1 336 0
 1236 0558 554B     		ldr	r3, .L93+56
 1237 055a 0122     		movs	r2, #1
 1238 055c 1A60     		str	r2, [r3]
 337:main.c        ****                 data_time = 0;                        // data point num
 1239              		.loc 1 337 0
 1240 055e 554B     		ldr	r3, .L93+60
 1241 0560 0022     		movs	r2, #0
 1242 0562 1A60     		str	r2, [r3]
 338:main.c        ****                 sum = 0;                               // Sum of accelerometer values. 
 1243              		.loc 1 338 0
 1244 0564 544B     		ldr	r3, .L93+64
 1245 0566 0022     		movs	r2, #0
 1246 0568 1A60     		str	r2, [r3]
 339:main.c        ****                 average = 0;                        // Moving average variable.
 1247              		.loc 1 339 0
 1248 056a 544B     		ldr	r3, .L93+68
 1249 056c 0022     		movs	r2, #0
 1250 056e 1A80     		strh	r2, [r3]	@ movhi
 340:main.c        ****                 collect_flag = 0;                      // flag indicating when to record accelerati
 1251              		.loc 1 340 0
 1252 0570 534B     		ldr	r3, .L93+72
 1253 0572 0022     		movs	r2, #0
 1254 0574 1A70     		strb	r2, [r3]
 341:main.c        ****                 //wait_flag = 0;                         // flag indicating when to increment inter
 342:main.c        ****                 PANIC_flag = 0;                        // flag indicating water is present in housi
 1255              		.loc 1 342 0
 1256 0576 534B     		ldr	r3, .L93+76
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 31


 1257 0578 0022     		movs	r2, #0
 1258 057a 1A70     		strb	r2, [r3]
 343:main.c        ****                 //bool first_test = 1;                        // flag indicating first test(longer 
 344:main.c        ****                 testnum = 1; //countdown = 0;
 1259              		.loc 1 344 0
 1260 057c 524B     		ldr	r3, .L93+80
 1261 057e 0122     		movs	r2, #1
 1262 0580 1A70     		strb	r2, [r3]
 345:main.c        ****             
 346:main.c        ****                 if (transmit_flag){
 1263              		.loc 1 346 0
 1264 0582 524B     		ldr	r3, .L93+84
 1265 0584 1B68     		ldr	r3, [r3]
 1266 0586 002B     		cmp	r3, #0
 1267 0588 0BD0     		beq	.L52
 347:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &tens); // Here, the STATE variable only matte
 1268              		.loc 1 347 0
 1269 058a 07F1B802 		add	r2, r7, #184
 1270 058e 07F14803 		add	r3, r7, #72
 1271 0592 1046     		mov	r0, r2
 1272 0594 4249     		ldr	r1, .L93+40
 1273 0596 0A22     		movs	r2, #10
 1274 0598 FFF7FEFF 		bl	BT_Send
 348:main.c        ****                     transmit_flag = 0;
 1275              		.loc 1 348 0
 1276 059c 4B4B     		ldr	r3, .L93+84
 1277 059e 0022     		movs	r2, #0
 1278 05a0 1A60     		str	r2, [r3]
 1279              	.L52:
 349:main.c        ****                 }
 350:main.c        ****                 if(wait_flag == 1){
 1280              		.loc 1 350 0
 1281 05a2 384B     		ldr	r3, .L93+12
 1282 05a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1283 05a6 002B     		cmp	r3, #0
 1284 05a8 54D0     		beq	.L53
 351:main.c        ****                     #ifdef LCD
 352:main.c        ****                         setCursor(0,0);
 1285              		.loc 1 352 0
 1286 05aa 0020     		movs	r0, #0
 1287 05ac 0021     		movs	r1, #0
 1288 05ae FFF7FEFF 		bl	setCursor
 353:main.c        ****                         clear();
 1289              		.loc 1 353 0
 1290 05b2 FFF7FEFF 		bl	clear
 354:main.c        ****                         
 355:main.c        ****                         sprintf(buf, "T-minus %d seconds\n", (60 - countdown)); // countdown
 1291              		.loc 1 355 0
 1292 05b6 3D4B     		ldr	r3, .L93+52
 1293 05b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1294 05ba C3F13C03 		rsb	r3, r3, #60
 1295 05be 07F1CC02 		add	r2, r7, #204
 1296 05c2 1046     		mov	r0, r2
 1297 05c4 4249     		ldr	r1, .L93+88
 1298 05c6 1A46     		mov	r2, r3
 1299 05c8 FFF7FEFF 		bl	sprintf
 356:main.c        ****                         LCD_print(buf);
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 32


 1300              		.loc 1 356 0
 1301 05cc 07F1CC03 		add	r3, r7, #204
 1302 05d0 1846     		mov	r0, r3
 1303 05d2 FFF7FEFF 		bl	LCD_print
 357:main.c        ****                     #endif
 358:main.c        ****                     if(countdown == 60){
 1304              		.loc 1 358 0
 1305 05d6 354B     		ldr	r3, .L93+52
 1306 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1307 05da 3C2B     		cmp	r3, #60
 1308 05dc 36D1     		bne	.L54
 359:main.c        ****                         STATE = DESCENDING;
 1309              		.loc 1 359 0
 1310 05de 304B     		ldr	r3, .L93+40
 1311 05e0 0222     		movs	r2, #2
 1312 05e2 1A70     		strb	r2, [r3]
 360:main.c        ****                         #ifdef LCD
 361:main.c        ****                             setCursor(0,0);
 1313              		.loc 1 361 0
 1314 05e4 0020     		movs	r0, #0
 1315 05e6 0021     		movs	r1, #0
 1316 05e8 FFF7FEFF 		bl	setCursor
 362:main.c        ****                             clear();
 1317              		.loc 1 362 0
 1318 05ec FFF7FEFF 		bl	clear
 363:main.c        ****                             LCD_print("STATE: DESCENT");
 1319              		.loc 1 363 0
 1320 05f0 2D48     		ldr	r0, .L93+48
 1321 05f2 FFF7FEFF 		bl	LCD_print
 364:main.c        ****                         #endif
 365:main.c        ****                         #ifdef BT
 366:main.c        ****                             stateMsgCount = 0;
 1322              		.loc 1 366 0
 1323 05f6 0023     		movs	r3, #0
 1324 05f8 C7F82031 		str	r3, [r7, #288]
 367:main.c        ****                             while (stateMsgCount < DESCENDING_LEN){
 1325              		.loc 1 367 0
 1326 05fc 19E0     		b	.L55
 1327              	.L58:
 368:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1328              		.loc 1 368 0
 1329 05fe 11E0     		b	.L56
 1330              	.L57:
 369:main.c        ****                                     UART_PutChar(descendbuf[stateMsgCount++]);
 1331              		.loc 1 369 0
 1332 0600 D7F82031 		ldr	r3, [r7, #288]
 1333 0604 5A1C     		adds	r2, r3, #1
 1334 0606 C7F82021 		str	r2, [r7, #288]
 1335 060a 07F59472 		add	r2, r7, #296
 1336 060e 1344     		add	r3, r3, r2
 1337 0610 13F8943C 		ldrb	r3, [r3, #-148]	@ zero_extendqisi2
 1338 0614 1846     		mov	r0, r3
 1339 0616 FFF7FEFF 		bl	UART_PutChar
 370:main.c        ****                                     if (stateMsgCount >= DESCENDING_LEN) break;
 1340              		.loc 1 370 0
 1341 061a D7F82031 		ldr	r3, [r7, #288]
 1342 061e 112B     		cmp	r3, #17
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 33


 1343 0620 00DD     		ble	.L56
 1344 0622 06E0     		b	.L55
 1345              	.L56:
 368:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1346              		.loc 1 368 0
 1347 0624 FFF7FEFF 		bl	UART_ReadTxStatus
 1348 0628 0346     		mov	r3, r0
 1349 062a 03F00803 		and	r3, r3, #8
 1350 062e 002B     		cmp	r3, #0
 1351 0630 E6D1     		bne	.L57
 1352              	.L55:
 367:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1353              		.loc 1 367 0
 1354 0632 D7F82031 		ldr	r3, [r7, #288]
 1355 0636 112B     		cmp	r3, #17
 1356 0638 E1DD     		ble	.L58
 371:main.c        ****                                 }
 372:main.c        ****                             }
 373:main.c        ****                         #endif
 374:main.c        ****                         id=0;
 1357              		.loc 1 374 0
 1358 063a 1D4B     		ldr	r3, .L93+56
 1359 063c 0022     		movs	r2, #0
 1360 063e 1A60     		str	r2, [r3]
 375:main.c        ****                         data_time = 0;
 1361              		.loc 1 375 0
 1362 0640 1C4B     		ldr	r3, .L93+60
 1363 0642 0022     		movs	r2, #0
 1364 0644 1A60     		str	r2, [r3]
 376:main.c        ****                         countdown = 9; 
 1365              		.loc 1 376 0
 1366 0646 194B     		ldr	r3, .L93+52
 1367 0648 0922     		movs	r2, #9
 1368 064a 1A70     		strb	r2, [r3]
 1369              	.L54:
 377:main.c        ****                     }
 378:main.c        ****                     wait_flag = 0; 
 1370              		.loc 1 378 0
 1371 064c 0D4B     		ldr	r3, .L93+12
 1372 064e 0022     		movs	r2, #0
 1373 0650 1A70     		strb	r2, [r3]
 379:main.c        ****                 }
 380:main.c        ****                 break;
 1374              		.loc 1 380 0
 1375 0652 7CE2     		b	.L59
 1376              	.L53:
 1377 0654 7BE2     		b	.L59
 1378              	.L48:
 381:main.c        ****                 
 382:main.c        ****             case DESCENDING:
 383:main.c        ****                 if(collect_flag == 1){
 1379              		.loc 1 383 0
 1380 0656 1A4B     		ldr	r3, .L93+72
 1381 0658 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 065a 002B     		cmp	r3, #0
 1383 065c 00F04381 		beq	.L60
 384:main.c        ****                     if (id < MA_WINDOW){
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 34


 1384              		.loc 1 384 0
 1385 0660 134B     		ldr	r3, .L93+56
 1386 0662 1B68     		ldr	r3, [r3]
 1387 0664 0E2B     		cmp	r3, #14
 1388 0666 35DC     		bgt	.L61
 385:main.c        ****                         sum += az;     
 1389              		.loc 1 385 0
 1390 0668 B7F9FE20 		ldrsh	r2, [r7, #254]
 1391 066c 124B     		ldr	r3, .L93+64
 1392 066e 1B68     		ldr	r3, [r3]
 1393 0670 1344     		add	r3, r3, r2
 1394 0672 114A     		ldr	r2, .L93+64
 1395 0674 1360     		str	r3, [r2]
 1396 0676 5FE0     		b	.L62
 1397              	.L94:
 1398              		.align	2
 1399              	.L93:
 1400 0678 00401C46 		.word	1176256512
 1401 067c BC000000 		.word	.LC19
 1402 0680 00000000 		.word	fsfile
 1403 0684 00000000 		.word	wait_flag
 1404 0688 00000000 		.word	press_id
 1405 068c 00000000 		.word	msg_count
 1406 0690 00000000 		.word	RxBuffer
 1407 0694 00000000 		.word	bytes
 1408 0698 D4000000 		.word	.LC20
 1409 069c 00000000 		.word	rxflag
 1410 06a0 00000000 		.word	STATE
 1411 06a4 00000000 		.word	dataflag
 1412 06a8 DC000000 		.word	.LC21
 1413 06ac 00000000 		.word	countdown
 1414 06b0 00000000 		.word	id
 1415 06b4 00000000 		.word	data_time
 1416 06b8 00000000 		.word	sum
 1417 06bc 00000000 		.word	average
 1418 06c0 00000000 		.word	collect_flag
 1419 06c4 00000000 		.word	PANIC_flag
 1420 06c8 00000000 		.word	testnum
 1421 06cc 00000000 		.word	transmit_flag
 1422 06d0 EC000000 		.word	.LC22
 1423              	.L61:
 386:main.c        ****                     }
 387:main.c        ****                     else if(id == MA_WINDOW){
 1424              		.loc 1 387 0
 1425 06d4 BC4B     		ldr	r3, .L95
 1426 06d6 1B68     		ldr	r3, [r3]
 1427 06d8 0F2B     		cmp	r3, #15
 1428 06da 13D1     		bne	.L63
 388:main.c        ****                         sum += az;
 1429              		.loc 1 388 0
 1430 06dc B7F9FE20 		ldrsh	r2, [r7, #254]
 1431 06e0 BA4B     		ldr	r3, .L95+4
 1432 06e2 1B68     		ldr	r3, [r3]
 1433 06e4 1344     		add	r3, r3, r2
 1434 06e6 B94A     		ldr	r2, .L95+4
 1435 06e8 1360     		str	r3, [r2]
 389:main.c        ****                         average = sum/MA_WINDOW;                            //compute baseline aver
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 35


 1436              		.loc 1 389 0
 1437 06ea B84B     		ldr	r3, .L95+4
 1438 06ec 1B68     		ldr	r3, [r3]
 1439 06ee B84A     		ldr	r2, .L95+8
 1440 06f0 82FB0312 		smull	r1, r2, r2, r3
 1441 06f4 1A44     		add	r2, r2, r3
 1442 06f6 D210     		asrs	r2, r2, #3
 1443 06f8 DB17     		asrs	r3, r3, #31
 1444 06fa D31A     		subs	r3, r2, r3
 1445 06fc 9AB2     		uxth	r2, r3
 1446 06fe B54B     		ldr	r3, .L95+12
 1447 0700 1A80     		strh	r2, [r3]	@ movhi
 1448 0702 19E0     		b	.L62
 1449              	.L63:
 390:main.c        ****                     }
 391:main.c        ****                     else{
 392:main.c        ****                         average = ComputeMA(average, MA_WINDOW, az);
 1450              		.loc 1 392 0
 1451 0704 B34B     		ldr	r3, .L95+12
 1452 0706 1B88     		ldrh	r3, [r3]
 1453 0708 1BB2     		sxth	r3, r3
 1454 070a 1846     		mov	r0, r3
 1455 070c FFF7FEFF 		bl	__aeabi_i2f
 1456 0710 0446     		mov	r4, r0
 1457 0712 B7F9FE30 		ldrsh	r3, [r7, #254]
 1458 0716 1846     		mov	r0, r3
 1459 0718 FFF7FEFF 		bl	__aeabi_i2f
 1460 071c 0346     		mov	r3, r0
 1461 071e 2046     		mov	r0, r4
 1462 0720 0F21     		movs	r1, #15
 1463 0722 1A46     		mov	r2, r3
 1464 0724 FFF7FEFF 		bl	ComputeMA
 1465 0728 0346     		mov	r3, r0
 1466 072a 1846     		mov	r0, r3
 1467 072c FFF7FEFF 		bl	__aeabi_f2iz
 1468 0730 0346     		mov	r3, r0
 1469 0732 9AB2     		uxth	r2, r3
 1470 0734 A74B     		ldr	r3, .L95+12
 1471 0736 1A80     		strh	r2, [r3]	@ movhi
 1472              	.L62:
 393:main.c        ****                     }
 394:main.c        ****                     
 395:main.c        ****                     if(average > BOT_THRESHOLD){                        
 1473              		.loc 1 395 0
 1474 0738 A64B     		ldr	r3, .L95+12
 1475 073a 1B88     		ldrh	r3, [r3]
 1476 073c 1BB2     		sxth	r3, r3
 1477 073e 44F62062 		movw	r2, #20000
 1478 0742 9342     		cmp	r3, r2
 1479 0744 40F3A580 		ble	.L64
 1480              	.LBB5:
 396:main.c        ****                         STATE = LANDED;                                     //Switch to LANDED stat
 1481              		.loc 1 396 0
 1482 0748 A34B     		ldr	r3, .L95+16
 1483 074a 0322     		movs	r2, #3
 1484 074c 1A70     		strb	r2, [r3]
 397:main.c        ****                         #ifdef LCD
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 36


 398:main.c        ****                             setCursor(0,0);
 1485              		.loc 1 398 0
 1486 074e 0020     		movs	r0, #0
 1487 0750 0021     		movs	r1, #0
 1488 0752 FFF7FEFF 		bl	setCursor
 399:main.c        ****                             clear();
 1489              		.loc 1 399 0
 1490 0756 FFF7FEFF 		bl	clear
 400:main.c        ****                             LCD_print("STATE: LANDED");  
 1491              		.loc 1 400 0
 1492 075a A048     		ldr	r0, .L95+20
 1493 075c FFF7FEFF 		bl	LCD_print
 401:main.c        ****                         #endif
 402:main.c        ****                         char sdbuf[60] = {};
 1494              		.loc 1 402 0
 1495 0760 3B46     		mov	r3, r7
 1496 0762 1A46     		mov	r2, r3
 1497 0764 3C23     		movs	r3, #60
 1498 0766 1046     		mov	r0, r2
 1499 0768 0021     		movs	r1, #0
 1500 076a 1A46     		mov	r2, r3
 1501 076c FFF7FEFF 		bl	memset
 403:main.c        ****                         #ifdef SD
 404:main.c        ****                             sprintf(sdbuf, "STATE: LANDED ***********\n");
 1502              		.loc 1 404 0
 1503 0770 3B46     		mov	r3, r7
 1504 0772 9B4A     		ldr	r2, .L95+24
 1505 0774 1C46     		mov	r4, r3
 1506 0776 1546     		mov	r5, r2
 1507 0778 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1508 077a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1509 077c 95E80700 		ldmia	r5, {r0, r1, r2}
 1510 0780 03C4     		stmia	r4!, {r0, r1}
 1511 0782 2280     		strh	r2, [r4]	@ movhi
 1512 0784 0234     		adds	r4, r4, #2
 1513 0786 130C     		lsrs	r3, r2, #16
 1514 0788 2370     		strb	r3, [r4]
 405:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1515              		.loc 1 405 0
 1516 078a 964B     		ldr	r3, .L95+28
 1517 078c 1C68     		ldr	r4, [r3]
 1518 078e 3B46     		mov	r3, r7
 1519 0790 1846     		mov	r0, r3
 1520 0792 FFF7FEFF 		bl	strlen
 1521 0796 0246     		mov	r2, r0
 1522 0798 3B46     		mov	r3, r7
 1523 079a 2046     		mov	r0, r4
 1524 079c 1946     		mov	r1, r3
 1525 079e FFF7FEFF 		bl	FS_Write
 406:main.c        ****                         #endif
 407:main.c        ****                         #ifdef BT
 408:main.c        ****                             stateMsgCount = 0;
 1526              		.loc 1 408 0
 1527 07a2 0023     		movs	r3, #0
 1528 07a4 C7F82031 		str	r3, [r7, #288]
 409:main.c        ****                             while (stateMsgCount < LANDED_LEN){
 1529              		.loc 1 409 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 37


 1530 07a8 19E0     		b	.L65
 1531              	.L68:
 410:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1532              		.loc 1 410 0
 1533 07aa 11E0     		b	.L66
 1534              	.L67:
 411:main.c        ****                                     UART_PutChar(landedbuf[stateMsgCount++]);
 1535              		.loc 1 411 0
 1536 07ac D7F82031 		ldr	r3, [r7, #288]
 1537 07b0 5A1C     		adds	r2, r3, #1
 1538 07b2 C7F82021 		str	r2, [r7, #288]
 1539 07b6 07F59472 		add	r2, r7, #296
 1540 07ba 1344     		add	r3, r3, r2
 1541 07bc 13F8A43C 		ldrb	r3, [r3, #-164]	@ zero_extendqisi2
 1542 07c0 1846     		mov	r0, r3
 1543 07c2 FFF7FEFF 		bl	UART_PutChar
 412:main.c        ****                                     if (stateMsgCount >= LANDED_LEN) break;
 1544              		.loc 1 412 0
 1545 07c6 D7F82031 		ldr	r3, [r7, #288]
 1546 07ca 0D2B     		cmp	r3, #13
 1547 07cc 00DD     		ble	.L66
 1548 07ce 06E0     		b	.L65
 1549              	.L66:
 410:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1550              		.loc 1 410 0
 1551 07d0 FFF7FEFF 		bl	UART_ReadTxStatus
 1552 07d4 0346     		mov	r3, r0
 1553 07d6 03F00803 		and	r3, r3, #8
 1554 07da 002B     		cmp	r3, #0
 1555 07dc E6D1     		bne	.L67
 1556              	.L65:
 409:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1557              		.loc 1 409 0
 1558 07de D7F82031 		ldr	r3, [r7, #288]
 1559 07e2 0D2B     		cmp	r3, #13
 1560 07e4 E1DD     		ble	.L68
 413:main.c        ****                                 }
 414:main.c        ****                             }
 415:main.c        ****                         #endif
 416:main.c        ****                         #ifdef LCD
 417:main.c        ****                             setCursor(0,0);
 1561              		.loc 1 417 0
 1562 07e6 0020     		movs	r0, #0
 1563 07e8 0021     		movs	r1, #0
 1564 07ea FFF7FEFF 		bl	setCursor
 418:main.c        ****                             clear();
 1565              		.loc 1 418 0
 1566 07ee FFF7FEFF 		bl	clear
 419:main.c        ****                             LCD_print("VACUUMING");  
 1567              		.loc 1 419 0
 1568 07f2 7D48     		ldr	r0, .L95+32
 1569 07f4 FFF7FEFF 		bl	LCD_print
 420:main.c        ****                         #endif
 421:main.c        ****                         
 422:main.c        ****                         #ifdef SD
 423:main.c        ****                                 memset(sdbuf, 0, 40);
 1570              		.loc 1 423 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 38


 1571 07f8 3B46     		mov	r3, r7
 1572 07fa 1846     		mov	r0, r3
 1573 07fc 0021     		movs	r1, #0
 1574 07fe 2822     		movs	r2, #40
 1575 0800 FFF7FEFF 		bl	memset
 424:main.c        ****                                 sprintf(sdbuf, "STATE: VACUUMING ***********\n");
 1576              		.loc 1 424 0
 1577 0804 3B46     		mov	r3, r7
 1578 0806 794A     		ldr	r2, .L95+36
 1579 0808 1C46     		mov	r4, r3
 1580 080a 1546     		mov	r5, r2
 1581 080c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1582 080e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1583 0810 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1584 0814 07C4     		stmia	r4!, {r0, r1, r2}
 1585 0816 2380     		strh	r3, [r4]	@ movhi
 425:main.c        ****                                 FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1586              		.loc 1 425 0
 1587 0818 724B     		ldr	r3, .L95+28
 1588 081a 1C68     		ldr	r4, [r3]
 1589 081c 3B46     		mov	r3, r7
 1590 081e 1846     		mov	r0, r3
 1591 0820 FFF7FEFF 		bl	strlen
 1592 0824 0246     		mov	r2, r0
 1593 0826 3B46     		mov	r3, r7
 1594 0828 2046     		mov	r0, r4
 1595 082a 1946     		mov	r1, r3
 1596 082c FFF7FEFF 		bl	FS_Write
 426:main.c        ****                         #endif
 427:main.c        ****                         #ifdef BT
 428:main.c        ****                             stateMsgCount = 0;
 1597              		.loc 1 428 0
 1598 0830 0023     		movs	r3, #0
 1599 0832 C7F82031 		str	r3, [r7, #288]
 429:main.c        ****                             while (stateMsgCount < VACUUM_LEN){
 1600              		.loc 1 429 0
 1601 0836 19E0     		b	.L69
 1602              	.L72:
 430:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1603              		.loc 1 430 0
 1604 0838 11E0     		b	.L70
 1605              	.L71:
 431:main.c        ****                                     UART_PutChar(vacuumbuf[stateMsgCount++]);
 1606              		.loc 1 431 0
 1607 083a D7F82031 		ldr	r3, [r7, #288]
 1608 083e 5A1C     		adds	r2, r3, #1
 1609 0840 C7F82021 		str	r2, [r7, #288]
 1610 0844 07F59472 		add	r2, r7, #296
 1611 0848 1344     		add	r3, r3, r2
 1612 084a 13F8B83C 		ldrb	r3, [r3, #-184]	@ zero_extendqisi2
 1613 084e 1846     		mov	r0, r3
 1614 0850 FFF7FEFF 		bl	UART_PutChar
 432:main.c        ****                                     if (stateMsgCount >= VACUUM_LEN) break;
 1615              		.loc 1 432 0
 1616 0854 D7F82031 		ldr	r3, [r7, #288]
 1617 0858 102B     		cmp	r3, #16
 1618 085a 00DD     		ble	.L70
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 39


 1619 085c 06E0     		b	.L69
 1620              	.L70:
 430:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1621              		.loc 1 430 0
 1622 085e FFF7FEFF 		bl	UART_ReadTxStatus
 1623 0862 0346     		mov	r3, r0
 1624 0864 03F00803 		and	r3, r3, #8
 1625 0868 002B     		cmp	r3, #0
 1626 086a E6D1     		bne	.L71
 1627              	.L69:
 429:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1628              		.loc 1 429 0
 1629 086c D7F82031 		ldr	r3, [r7, #288]
 1630 0870 102B     		cmp	r3, #16
 1631 0872 E1DD     		ble	.L72
 433:main.c        ****                                 }
 434:main.c        ****                             }
 435:main.c        ****                         #endif
 436:main.c        ****                             id=0;                                                   //reset sample 
 1632              		.loc 1 436 0
 1633 0874 544B     		ldr	r3, .L95
 1634 0876 0022     		movs	r2, #0
 1635 0878 1A60     		str	r2, [r3]
 437:main.c        ****                             data_time = 0;
 1636              		.loc 1 437 0
 1637 087a 5D4B     		ldr	r3, .L95+40
 1638 087c 0022     		movs	r2, #0
 1639 087e 1A60     		str	r2, [r3]
 438:main.c        ****                             sum = 0;
 1640              		.loc 1 438 0
 1641 0880 524B     		ldr	r3, .L95+4
 1642 0882 0022     		movs	r2, #0
 1643 0884 1A60     		str	r2, [r3]
 439:main.c        ****                             average = 0; 
 1644              		.loc 1 439 0
 1645 0886 534B     		ldr	r3, .L95+12
 1646 0888 0022     		movs	r2, #0
 1647 088a 1A80     		strh	r2, [r3]	@ movhi
 440:main.c        ****                         countdown = 0;
 1648              		.loc 1 440 0
 1649 088c 594B     		ldr	r3, .L95+44
 1650 088e 0022     		movs	r2, #0
 1651 0890 1A70     		strb	r2, [r3]
 1652              	.L64:
 1653              	.LBE5:
 441:main.c        ****                     }
 442:main.c        ****                     id++;     
 1654              		.loc 1 442 0
 1655 0892 4D4B     		ldr	r3, .L95
 1656 0894 1B68     		ldr	r3, [r3]
 1657 0896 0133     		adds	r3, r3, #1
 1658 0898 4B4A     		ldr	r2, .L95
 1659 089a 1360     		str	r3, [r2]
 443:main.c        ****                     
 444:main.c        ****                     /*if desired amount of samples have been collected, switch states*/
 445:main.c        ****                     if(data_time >= DATA_TIME * 2){
 1660              		.loc 1 445 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 40


 1661 089c 544B     		ldr	r3, .L95+40
 1662 089e 1B68     		ldr	r3, [r3]
 1663 08a0 42F20F72 		movw	r2, #9999
 1664 08a4 9342     		cmp	r3, r2
 1665 08a6 1ADD     		ble	.L73
 446:main.c        ****                         LED2_Write(0);                                          //turn LED off
 1666              		.loc 1 446 0
 1667 08a8 0020     		movs	r0, #0
 1668 08aa FFF7FEFF 		bl	LED2_Write
 447:main.c        ****                                                             
 448:main.c        ****                         STATE = WAIT_TO_LAUNCH;                                //Switch to Waiting 
 1669              		.loc 1 448 0
 1670 08ae 4A4B     		ldr	r3, .L95+16
 1671 08b0 0122     		movs	r2, #1
 1672 08b2 1A70     		strb	r2, [r3]
 449:main.c        ****                         #ifdef LCD
 450:main.c        ****                             setCursor(0,0);
 1673              		.loc 1 450 0
 1674 08b4 0020     		movs	r0, #0
 1675 08b6 0021     		movs	r1, #0
 1676 08b8 FFF7FEFF 		bl	setCursor
 451:main.c        ****                             clear();
 1677              		.loc 1 451 0
 1678 08bc FFF7FEFF 		bl	clear
 452:main.c        ****                             LCD_print("STATE: WAIT");  
 1679              		.loc 1 452 0
 1680 08c0 4D48     		ldr	r0, .L95+48
 1681 08c2 FFF7FEFF 		bl	LCD_print
 453:main.c        ****                         #endif
 454:main.c        ****                         id=0;                                                  //reset sample count
 1682              		.loc 1 454 0
 1683 08c6 404B     		ldr	r3, .L95
 1684 08c8 0022     		movs	r2, #0
 1685 08ca 1A60     		str	r2, [r3]
 455:main.c        ****                         data_time = 0;
 1686              		.loc 1 455 0
 1687 08cc 484B     		ldr	r3, .L95+40
 1688 08ce 0022     		movs	r2, #0
 1689 08d0 1A60     		str	r2, [r3]
 456:main.c        ****                         sum = 0;                                               //reset sum 
 1690              		.loc 1 456 0
 1691 08d2 3E4B     		ldr	r3, .L95+4
 1692 08d4 0022     		movs	r2, #0
 1693 08d6 1A60     		str	r2, [r3]
 457:main.c        ****                         average = 0;
 1694              		.loc 1 457 0
 1695 08d8 3E4B     		ldr	r3, .L95+12
 1696 08da 0022     		movs	r2, #0
 1697 08dc 1A80     		strh	r2, [r3]	@ movhi
 1698              	.L73:
 458:main.c        ****                        
 459:main.c        ****                     }
 460:main.c        ****                     collect_flag = 0;
 1699              		.loc 1 460 0
 1700 08de 474B     		ldr	r3, .L95+52
 1701 08e0 0022     		movs	r2, #0
 1702 08e2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 41


 461:main.c        ****                 }
 462:main.c        ****                 break;
 1703              		.loc 1 462 0
 1704 08e4 33E1     		b	.L59
 1705              	.L60:
 1706              		.loc 1 462 0 is_stmt 0 discriminator 2
 1707 08e6 32E1     		b	.L59
 1708              	.L49:
 463:main.c        ****                 
 464:main.c        ****                 case LANDED:
 465:main.c        ****                     if (countdown == 7) {countdown = 0; pulse = 1; Solenoid_1_Write(1);} //turn on 
 1709              		.loc 1 465 0 is_stmt 1
 1710 08e8 424B     		ldr	r3, .L95+44
 1711 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1712 08ec 072B     		cmp	r3, #7
 1713 08ee 08D1     		bne	.L74
 1714              		.loc 1 465 0 is_stmt 0 discriminator 1
 1715 08f0 404B     		ldr	r3, .L95+44
 1716 08f2 0022     		movs	r2, #0
 1717 08f4 1A70     		strb	r2, [r3]
 1718 08f6 0123     		movs	r3, #1
 1719 08f8 C7F81C31 		str	r3, [r7, #284]
 1720 08fc 0120     		movs	r0, #1
 1721 08fe FFF7FEFF 		bl	Solenoid_1_Write
 1722              	.L74:
 466:main.c        ****                     
 467:main.c        ****                     
 468:main.c        ****                     if (countdown == 5 && pulse){
 1723              		.loc 1 468 0 is_stmt 1
 1724 0902 3C4B     		ldr	r3, .L95+44
 1725 0904 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1726 0906 052B     		cmp	r3, #5
 1727 0908 0ED1     		bne	.L75
 1728              		.loc 1 468 0 is_stmt 0 discriminator 1
 1729 090a D7F81C31 		ldr	r3, [r7, #284]
 1730 090e 002B     		cmp	r3, #0
 1731 0910 0AD0     		beq	.L75
 469:main.c        ****                         pulse++;
 1732              		.loc 1 469 0 is_stmt 1
 1733 0912 D7F81C31 		ldr	r3, [r7, #284]
 1734 0916 0133     		adds	r3, r3, #1
 1735 0918 C7F81C31 		str	r3, [r7, #284]
 470:main.c        ****                         Solenoid_1_Write(0); //turn off soleniod 1
 1736              		.loc 1 470 0
 1737 091c 0020     		movs	r0, #0
 1738 091e FFF7FEFF 		bl	Solenoid_1_Write
 471:main.c        ****                         countdown = 0;
 1739              		.loc 1 471 0
 1740 0922 344B     		ldr	r3, .L95+44
 1741 0924 0022     		movs	r2, #0
 1742 0926 1A70     		strb	r2, [r3]
 1743              	.L75:
 472:main.c        ****                         
 473:main.c        ****                     }
 474:main.c        ****                     if (countdown == 3 && pulse == 2){
 1744              		.loc 1 474 0
 1745 0928 324B     		ldr	r3, .L95+44
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 42


 1746 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1747 092c 032B     		cmp	r3, #3
 1748 092e 7DD1     		bne	.L76
 1749              		.loc 1 474 0 is_stmt 0 discriminator 1
 1750 0930 D7F81C31 		ldr	r3, [r7, #284]
 1751 0934 022B     		cmp	r3, #2
 1752 0936 79D1     		bne	.L76
 1753              	.LBB6:
 475:main.c        ****                         STATE = RESURFACE;
 1754              		.loc 1 475 0 is_stmt 1
 1755 0938 274B     		ldr	r3, .L95+16
 1756 093a 0422     		movs	r2, #4
 1757 093c 1A70     		strb	r2, [r3]
 476:main.c        ****                         char sdbuf[60] = {};
 1758              		.loc 1 476 0
 1759 093e 3B46     		mov	r3, r7
 1760 0940 1A46     		mov	r2, r3
 1761 0942 3C23     		movs	r3, #60
 1762 0944 1046     		mov	r0, r2
 1763 0946 0021     		movs	r1, #0
 1764 0948 1A46     		mov	r2, r3
 1765 094a FFF7FEFF 		bl	memset
 477:main.c        ****                         #ifdef LCD
 478:main.c        ****                             setCursor(0,0);
 1766              		.loc 1 478 0
 1767 094e 0020     		movs	r0, #0
 1768 0950 0021     		movs	r1, #0
 1769 0952 FFF7FEFF 		bl	setCursor
 479:main.c        ****                             clear();
 1770              		.loc 1 479 0
 1771 0956 FFF7FEFF 		bl	clear
 480:main.c        ****                             LCD_print("STATE: RESURFACING");  
 1772              		.loc 1 480 0
 1773 095a 2948     		ldr	r0, .L95+56
 1774 095c FFF7FEFF 		bl	LCD_print
 481:main.c        ****                         #endif
 482:main.c        ****                         #ifdef SD
 483:main.c        ****                             memset(sdbuf, 0, 40);
 1775              		.loc 1 483 0
 1776 0960 3B46     		mov	r3, r7
 1777 0962 1846     		mov	r0, r3
 1778 0964 0021     		movs	r1, #0
 1779 0966 2822     		movs	r2, #40
 1780 0968 FFF7FEFF 		bl	memset
 484:main.c        ****                             sprintf(sdbuf, "STATE: RESURFACING ***********\n");
 1781              		.loc 1 484 0
 1782 096c 3B46     		mov	r3, r7
 1783 096e 254A     		ldr	r2, .L95+60
 1784 0970 1C46     		mov	r4, r3
 1785 0972 1546     		mov	r5, r2
 1786 0974 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1787 0976 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1788 0978 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1789 097c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 485:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1790              		.loc 1 485 0
 1791 0980 184B     		ldr	r3, .L95+28
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 43


 1792 0982 1C68     		ldr	r4, [r3]
 1793 0984 3B46     		mov	r3, r7
 1794 0986 1846     		mov	r0, r3
 1795 0988 FFF7FEFF 		bl	strlen
 1796 098c 0246     		mov	r2, r0
 1797 098e 3B46     		mov	r3, r7
 1798 0990 2046     		mov	r0, r4
 1799 0992 1946     		mov	r1, r3
 1800 0994 FFF7FEFF 		bl	FS_Write
 486:main.c        ****                         #endif
 487:main.c        ****                         #ifdef BT
 488:main.c        ****                             stateMsgCount = 0;
 1801              		.loc 1 488 0
 1802 0998 0023     		movs	r3, #0
 1803 099a C7F82031 		str	r3, [r7, #288]
 489:main.c        ****                             while (stateMsgCount < RESURFACE_LEN){
 1804              		.loc 1 489 0
 1805 099e 3AE0     		b	.L77
 1806              	.L80:
 490:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1807              		.loc 1 490 0
 1808 09a0 32E0     		b	.L78
 1809              	.L79:
 491:main.c        ****                                     UART_PutChar(resurfbuf[stateMsgCount++]);
 1810              		.loc 1 491 0
 1811 09a2 D7F82031 		ldr	r3, [r7, #288]
 1812 09a6 5A1C     		adds	r2, r3, #1
 1813 09a8 C7F82021 		str	r2, [r7, #288]
 1814 09ac 07F59472 		add	r2, r7, #296
 1815 09b0 1344     		add	r3, r3, r2
 1816 09b2 13F8CC3C 		ldrb	r3, [r3, #-204]	@ zero_extendqisi2
 1817 09b6 1846     		mov	r0, r3
 1818 09b8 FFF7FEFF 		bl	UART_PutChar
 492:main.c        ****                                     if (stateMsgCount >= RESURFACE_LEN) break;
 1819              		.loc 1 492 0
 1820 09bc D7F82031 		ldr	r3, [r7, #288]
 1821 09c0 102B     		cmp	r3, #16
 1822 09c2 21DD     		ble	.L78
 1823 09c4 27E0     		b	.L77
 1824              	.L96:
 1825 09c6 00BF     		.align	2
 1826              	.L95:
 1827 09c8 00000000 		.word	id
 1828 09cc 00000000 		.word	sum
 1829 09d0 89888888 		.word	-2004318071
 1830 09d4 00000000 		.word	average
 1831 09d8 00000000 		.word	STATE
 1832 09dc 00010000 		.word	.LC23
 1833 09e0 10010000 		.word	.LC24
 1834 09e4 00000000 		.word	fsfile
 1835 09e8 2C010000 		.word	.LC25
 1836 09ec 38010000 		.word	.LC26
 1837 09f0 00000000 		.word	data_time
 1838 09f4 00000000 		.word	countdown
 1839 09f8 58010000 		.word	.LC27
 1840 09fc 00000000 		.word	collect_flag
 1841 0a00 64010000 		.word	.LC28
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 44


 1842 0a04 78010000 		.word	.LC29
 1843              	.L78:
 490:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1844              		.loc 1 490 0
 1845 0a08 FFF7FEFF 		bl	UART_ReadTxStatus
 1846 0a0c 0346     		mov	r3, r0
 1847 0a0e 03F00803 		and	r3, r3, #8
 1848 0a12 002B     		cmp	r3, #0
 1849 0a14 C5D1     		bne	.L79
 1850              	.L77:
 489:main.c        ****                                 while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1851              		.loc 1 489 0
 1852 0a16 D7F82031 		ldr	r3, [r7, #288]
 1853 0a1a 102B     		cmp	r3, #16
 1854 0a1c C0DD     		ble	.L80
 493:main.c        ****                                 }
 494:main.c        ****                             }
 495:main.c        ****                         #endif
 496:main.c        ****                         pulse = 0;
 1855              		.loc 1 496 0
 1856 0a1e 0023     		movs	r3, #0
 1857 0a20 C7F81C31 		str	r3, [r7, #284]
 497:main.c        ****                         countdown = 0;
 1858              		.loc 1 497 0
 1859 0a24 4B4B     		ldr	r3, .L97
 1860 0a26 0022     		movs	r2, #0
 1861 0a28 1A70     		strb	r2, [r3]
 1862              	.LBE6:
 498:main.c        ****                     }
 499:main.c        ****                 break;
 1863              		.loc 1 499 0
 1864 0a2a 90E0     		b	.L59
 1865              	.L76:
 1866              		.loc 1 499 0 is_stmt 0 discriminator 3
 1867 0a2c 8FE0     		b	.L59
 1868              	.L50:
 500:main.c        ****                 
 501:main.c        ****             case RESURFACE:
 502:main.c        ****                 if (PANIC_flag)
 1869              		.loc 1 502 0 is_stmt 1
 1870 0a2e 4A4B     		ldr	r3, .L97+4
 1871 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 0a32 002B     		cmp	r3, #0
 1873 0a34 02D0     		beq	.L81
 503:main.c        ****                     LCD_print("WATER DETECTED");
 1874              		.loc 1 503 0
 1875 0a36 4948     		ldr	r0, .L97+8
 1876 0a38 FFF7FEFF 		bl	LCD_print
 1877              	.L81:
 504:main.c        ****                 Solenoid_2_Write(1);
 1878              		.loc 1 504 0
 1879 0a3c 0120     		movs	r0, #1
 1880 0a3e FFF7FEFF 		bl	Solenoid_2_Write
 505:main.c        ****                 
 506:main.c        ****                 //check pressure sensor to confirm we are at the surface
 507:main.c        ****                 if (countdown == 3){
 1881              		.loc 1 507 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 45


 1882 0a42 444B     		ldr	r3, .L97
 1883 0a44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 0a46 032B     		cmp	r3, #3
 1885 0a48 0ED1     		bne	.L82
 508:main.c        ****                     Solenoid_2_Write(0);
 1886              		.loc 1 508 0
 1887 0a4a 0020     		movs	r0, #0
 1888 0a4c FFF7FEFF 		bl	Solenoid_2_Write
 509:main.c        ****                     CyDelay(1000u);
 1889              		.loc 1 509 0
 1890 0a50 4FF47A70 		mov	r0, #1000
 1891 0a54 FFF7FEFF 		bl	CyDelay
 510:main.c        ****                     pulse++;
 1892              		.loc 1 510 0
 1893 0a58 D7F81C31 		ldr	r3, [r7, #284]
 1894 0a5c 0133     		adds	r3, r3, #1
 1895 0a5e C7F81C31 		str	r3, [r7, #284]
 511:main.c        ****                     countdown = 0;
 1896              		.loc 1 511 0
 1897 0a62 3C4B     		ldr	r3, .L97
 1898 0a64 0022     		movs	r2, #0
 1899 0a66 1A70     		strb	r2, [r3]
 1900              	.L82:
 512:main.c        ****                 }
 513:main.c        ****                 if (pulse == 6){
 1901              		.loc 1 513 0
 1902 0a68 D7F81C31 		ldr	r3, [r7, #284]
 1903 0a6c 062B     		cmp	r3, #6
 1904 0a6e 55D1     		bne	.L83
 1905              	.LBB7:
 514:main.c        ****                     char sdbuf[60] = {};
 1906              		.loc 1 514 0
 1907 0a70 3B46     		mov	r3, r7
 1908 0a72 1A46     		mov	r2, r3
 1909 0a74 3C23     		movs	r3, #60
 1910 0a76 1046     		mov	r0, r2
 1911 0a78 0021     		movs	r1, #0
 1912 0a7a 1A46     		mov	r2, r3
 1913 0a7c FFF7FEFF 		bl	memset
 515:main.c        ****                                                    //wait 10 seconds to lift, for testing in pool
 516:main.c        ****                     STATE = TRANSMIT;
 1914              		.loc 1 516 0
 1915 0a80 374B     		ldr	r3, .L97+12
 1916 0a82 0522     		movs	r2, #5
 1917 0a84 1A70     		strb	r2, [r3]
 517:main.c        ****                     #ifdef LCD
 518:main.c        ****                         setCursor(0,0);
 1918              		.loc 1 518 0
 1919 0a86 0020     		movs	r0, #0
 1920 0a88 0021     		movs	r1, #0
 1921 0a8a FFF7FEFF 		bl	setCursor
 519:main.c        ****                         clear();
 1922              		.loc 1 519 0
 1923 0a8e FFF7FEFF 		bl	clear
 520:main.c        ****                         LCD_print("TRANSMIT");  
 1924              		.loc 1 520 0
 1925 0a92 3448     		ldr	r0, .L97+16
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 46


 1926 0a94 FFF7FEFF 		bl	LCD_print
 521:main.c        ****                     #endif
 522:main.c        ****                     #ifdef SD
 523:main.c        ****                         memset(sdbuf, 0, 40);
 1927              		.loc 1 523 0
 1928 0a98 3B46     		mov	r3, r7
 1929 0a9a 1846     		mov	r0, r3
 1930 0a9c 0021     		movs	r1, #0
 1931 0a9e 2822     		movs	r2, #40
 1932 0aa0 FFF7FEFF 		bl	memset
 524:main.c        ****                         sprintf(sdbuf, "STATE: TRANSMIT ***********\n");
 1933              		.loc 1 524 0
 1934 0aa4 3B46     		mov	r3, r7
 1935 0aa6 304A     		ldr	r2, .L97+20
 1936 0aa8 1C46     		mov	r4, r3
 1937 0aaa 1546     		mov	r5, r2
 1938 0aac 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1939 0aae 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1940 0ab0 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1941 0ab4 07C4     		stmia	r4!, {r0, r1, r2}
 1942 0ab6 2370     		strb	r3, [r4]
 525:main.c        ****                         FS_Write(fsfile, sdbuf, strlen(sdbuf));
 1943              		.loc 1 525 0
 1944 0ab8 2C4B     		ldr	r3, .L97+24
 1945 0aba 1C68     		ldr	r4, [r3]
 1946 0abc 3B46     		mov	r3, r7
 1947 0abe 1846     		mov	r0, r3
 1948 0ac0 FFF7FEFF 		bl	strlen
 1949 0ac4 0246     		mov	r2, r0
 1950 0ac6 3B46     		mov	r3, r7
 1951 0ac8 2046     		mov	r0, r4
 1952 0aca 1946     		mov	r1, r3
 1953 0acc FFF7FEFF 		bl	FS_Write
 526:main.c        ****                     #endif
 527:main.c        ****                     #ifdef BT
 528:main.c        ****                         stateMsgCount = 0;
 1954              		.loc 1 528 0
 1955 0ad0 0023     		movs	r3, #0
 1956 0ad2 C7F82031 		str	r3, [r7, #288]
 529:main.c        ****                         while (stateMsgCount < TRANSMIT_LEN){
 1957              		.loc 1 529 0
 1958 0ad6 19E0     		b	.L84
 1959              	.L87:
 530:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1960              		.loc 1 530 0
 1961 0ad8 11E0     		b	.L85
 1962              	.L86:
 531:main.c        ****                                 UART_PutChar(transbuf[stateMsgCount++]);
 1963              		.loc 1 531 0
 1964 0ada D7F82031 		ldr	r3, [r7, #288]
 1965 0ade 5A1C     		adds	r2, r3, #1
 1966 0ae0 C7F82021 		str	r2, [r7, #288]
 1967 0ae4 07F59472 		add	r2, r7, #296
 1968 0ae8 1344     		add	r3, r3, r2
 1969 0aea 13F8DC3C 		ldrb	r3, [r3, #-220]	@ zero_extendqisi2
 1970 0aee 1846     		mov	r0, r3
 1971 0af0 FFF7FEFF 		bl	UART_PutChar
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 47


 532:main.c        ****                                 if (stateMsgCount >= TRANSMIT_LEN) break;
 1972              		.loc 1 532 0
 1973 0af4 D7F82031 		ldr	r3, [r7, #288]
 1974 0af8 0F2B     		cmp	r3, #15
 1975 0afa 00DD     		ble	.L85
 1976 0afc 06E0     		b	.L84
 1977              	.L85:
 530:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1978              		.loc 1 530 0
 1979 0afe FFF7FEFF 		bl	UART_ReadTxStatus
 1980 0b02 0346     		mov	r3, r0
 1981 0b04 03F00803 		and	r3, r3, #8
 1982 0b08 002B     		cmp	r3, #0
 1983 0b0a E6D1     		bne	.L86
 1984              	.L84:
 529:main.c        ****                             while (UART_ReadTxStatus() & UART_TX_STS_FIFO_NOT_FULL){
 1985              		.loc 1 529 0
 1986 0b0c D7F82031 		ldr	r3, [r7, #288]
 1987 0b10 0F2B     		cmp	r3, #15
 1988 0b12 E1DD     		ble	.L87
 533:main.c        ****                             }
 534:main.c        ****                         }
 535:main.c        ****                     #endif
 536:main.c        ****                     countdown = 0;
 1989              		.loc 1 536 0
 1990 0b14 0F4B     		ldr	r3, .L97
 1991 0b16 0022     		movs	r2, #0
 1992 0b18 1A70     		strb	r2, [r3]
 1993              	.LBE7:
 537:main.c        ****                 }
 538:main.c        ****                 break;
 1994              		.loc 1 538 0
 1995 0b1a 18E0     		b	.L59
 1996              	.L83:
 1997              		.loc 1 538 0 is_stmt 0 discriminator 5
 1998 0b1c 17E0     		b	.L59
 1999              	.L51:
 539:main.c        ****                 
 540:main.c        ****             case TRANSMIT:
 541:main.c        ****                 if (transmit_flag){
 2000              		.loc 1 541 0 is_stmt 1
 2001 0b1e 144B     		ldr	r3, .L97+28
 2002 0b20 1B68     		ldr	r3, [r3]
 2003 0b22 002B     		cmp	r3, #0
 2004 0b24 0BD0     		beq	.L88
 542:main.c        ****                     BT_Send(&tempbuf[0], &STATE, 10, &t); // Here, the STATE variable only matters,
 2005              		.loc 1 542 0
 2006 0b26 07F1B802 		add	r2, r7, #184
 2007 0b2a 07F14403 		add	r3, r7, #68
 2008 0b2e 1046     		mov	r0, r2
 2009 0b30 0B49     		ldr	r1, .L97+12
 2010 0b32 0A22     		movs	r2, #10
 2011 0b34 FFF7FEFF 		bl	BT_Send
 543:main.c        ****                     transmit_flag = 0;
 2012              		.loc 1 543 0
 2013 0b38 0D4B     		ldr	r3, .L97+28
 2014 0b3a 0022     		movs	r2, #0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 48


 2015 0b3c 1A60     		str	r2, [r3]
 2016              	.L88:
 544:main.c        ****                 }
 545:main.c        ****                 countdown = 0;
 2017              		.loc 1 545 0
 2018 0b3e 054B     		ldr	r3, .L97
 2019 0b40 0022     		movs	r2, #0
 2020 0b42 1A70     		strb	r2, [r3]
 546:main.c        ****                 pulse = 0;
 2021              		.loc 1 546 0
 2022 0b44 0023     		movs	r3, #0
 2023 0b46 C7F81C31 		str	r3, [r7, #284]
 547:main.c        ****                 //FS_Read(fsfile, 4);
 548:main.c        **** //                #ifdef SD                                   //close old file, open new one
 549:main.c        **** //                    FS_FClose(fsfile);
 550:main.c        **** //                    sprintf(file, "test%d.txt", ++testnum);
 551:main.c        **** //                    fsfile = FS_FOpen(file, "w");
 552:main.c        **** //                #endif 
 553:main.c        ****                 //CyDelay(15000u);
 554:main.c        ****                 
 555:main.c        ****                 break;
 2024              		.loc 1 555 0
 2025 0b4a 00E0     		b	.L59
 2026              	.L90:
 556:main.c        ****                 
 557:main.c        ****             default:
 558:main.c        ****                 break;
 2027              		.loc 1 558 0
 2028 0b4c 00BF     		nop
 2029              	.L59:
 2030              	.LBE2:
 559:main.c        ****         
 560:main.c        ****         
 561:main.c        ****         }
 562:main.c        ****         
 563:main.c        ****     }
 2031              		.loc 1 563 0 discriminator 6
 2032 0b4e FFF76CBB 		b	.L89
 2033              	.L98:
 2034 0b52 00BF     		.align	2
 2035              	.L97:
 2036 0b54 00000000 		.word	countdown
 2037 0b58 00000000 		.word	PANIC_flag
 2038 0b5c 98010000 		.word	.LC30
 2039 0b60 00000000 		.word	STATE
 2040 0b64 A8010000 		.word	.LC31
 2041 0b68 B4010000 		.word	.LC32
 2042 0b6c 00000000 		.word	fsfile
 2043 0b70 00000000 		.word	transmit_flag
 2044              		.cfi_endproc
 2045              	.LFE68:
 2046              		.size	main, .-main
 2047 0b74 AFF30080 		.text
 2048              	.Letext0:
 2049              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2050              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2051              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 49


 2052              		.file 5 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 2053              		.file 6 "functions.h"
 2054              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2055              		.file 8 "./mpu6050.h"
 2056              		.section	.debug_info,"",%progbits
 2057              	.Ldebug_info0:
 2058 0000 58060000 		.4byte	0x658
 2059 0004 0400     		.2byte	0x4
 2060 0006 00000000 		.4byte	.Ldebug_abbrev0
 2061 000a 04       		.byte	0x4
 2062 000b 01       		.uleb128 0x1
 2063 000c 0E010000 		.4byte	.LASF82
 2064 0010 01       		.byte	0x1
 2065 0011 0F030000 		.4byte	.LASF83
 2066 0015 9D020000 		.4byte	.LASF84
 2067 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2068 001d 00000000 		.4byte	0
 2069 0021 00000000 		.4byte	.Ldebug_line0
 2070 0025 02       		.uleb128 0x2
 2071 0026 01       		.byte	0x1
 2072 0027 06       		.byte	0x6
 2073 0028 10020000 		.4byte	.LASF0
 2074 002c 03       		.uleb128 0x3
 2075 002d F1030000 		.4byte	.LASF2
 2076 0031 02       		.byte	0x2
 2077 0032 1D       		.byte	0x1d
 2078 0033 37000000 		.4byte	0x37
 2079 0037 02       		.uleb128 0x2
 2080 0038 01       		.byte	0x1
 2081 0039 08       		.byte	0x8
 2082 003a F0010000 		.4byte	.LASF1
 2083 003e 03       		.uleb128 0x3
 2084 003f 62030000 		.4byte	.LASF3
 2085 0043 02       		.byte	0x2
 2086 0044 29       		.byte	0x29
 2087 0045 49000000 		.4byte	0x49
 2088 0049 02       		.uleb128 0x2
 2089 004a 02       		.byte	0x2
 2090 004b 05       		.byte	0x5
 2091 004c A9000000 		.4byte	.LASF4
 2092 0050 02       		.uleb128 0x2
 2093 0051 02       		.byte	0x2
 2094 0052 07       		.byte	0x7
 2095 0053 60020000 		.4byte	.LASF5
 2096 0057 03       		.uleb128 0x3
 2097 0058 58030000 		.4byte	.LASF6
 2098 005c 02       		.byte	0x2
 2099 005d 3F       		.byte	0x3f
 2100 005e 62000000 		.4byte	0x62
 2101 0062 02       		.uleb128 0x2
 2102 0063 04       		.byte	0x4
 2103 0064 05       		.byte	0x5
 2104 0065 78020000 		.4byte	.LASF7
 2105 0069 03       		.uleb128 0x3
 2106 006a 45030000 		.4byte	.LASF8
 2107 006e 02       		.byte	0x2
 2108 006f 41       		.byte	0x41
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 50


 2109 0070 74000000 		.4byte	0x74
 2110 0074 02       		.uleb128 0x2
 2111 0075 04       		.byte	0x4
 2112 0076 07       		.byte	0x7
 2113 0077 1B030000 		.4byte	.LASF9
 2114 007b 02       		.uleb128 0x2
 2115 007c 08       		.byte	0x8
 2116 007d 05       		.byte	0x5
 2117 007e EF000000 		.4byte	.LASF10
 2118 0082 02       		.uleb128 0x2
 2119 0083 08       		.byte	0x8
 2120 0084 07       		.byte	0x7
 2121 0085 1C020000 		.4byte	.LASF11
 2122 0089 04       		.uleb128 0x4
 2123 008a 04       		.byte	0x4
 2124 008b 05       		.byte	0x5
 2125 008c 696E7400 		.ascii	"int\000"
 2126 0090 02       		.uleb128 0x2
 2127 0091 04       		.byte	0x4
 2128 0092 07       		.byte	0x7
 2129 0093 46020000 		.4byte	.LASF12
 2130 0097 03       		.uleb128 0x3
 2131 0098 BE000000 		.4byte	.LASF13
 2132 009c 03       		.byte	0x3
 2133 009d 15       		.byte	0x15
 2134 009e 2C000000 		.4byte	0x2c
 2135 00a2 03       		.uleb128 0x3
 2136 00a3 89020000 		.4byte	.LASF14
 2137 00a7 03       		.byte	0x3
 2138 00a8 20       		.byte	0x20
 2139 00a9 3E000000 		.4byte	0x3e
 2140 00ad 03       		.uleb128 0x3
 2141 00ae 81020000 		.4byte	.LASF15
 2142 00b2 03       		.byte	0x3
 2143 00b3 2C       		.byte	0x2c
 2144 00b4 57000000 		.4byte	0x57
 2145 00b8 03       		.uleb128 0x3
 2146 00b9 33020000 		.4byte	.LASF16
 2147 00bd 03       		.byte	0x3
 2148 00be 2D       		.byte	0x2d
 2149 00bf 69000000 		.4byte	0x69
 2150 00c3 05       		.uleb128 0x5
 2151 00c4 91020000 		.4byte	.LASF17
 2152 00c8 04       		.byte	0x4
 2153 00c9 9201     		.2byte	0x192
 2154 00cb 37000000 		.4byte	0x37
 2155 00cf 05       		.uleb128 0x5
 2156 00d0 CC000000 		.4byte	.LASF18
 2157 00d4 04       		.byte	0x4
 2158 00d5 9601     		.2byte	0x196
 2159 00d7 49000000 		.4byte	0x49
 2160 00db 02       		.uleb128 0x2
 2161 00dc 04       		.byte	0x4
 2162 00dd 04       		.byte	0x4
 2163 00de DB000000 		.4byte	.LASF19
 2164 00e2 02       		.uleb128 0x2
 2165 00e3 08       		.byte	0x8
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 51


 2166 00e4 04       		.byte	0x4
 2167 00e5 3E030000 		.4byte	.LASF20
 2168 00e9 02       		.uleb128 0x2
 2169 00ea 01       		.byte	0x1
 2170 00eb 08       		.byte	0x8
 2171 00ec 73020000 		.4byte	.LASF21
 2172 00f0 05       		.uleb128 0x5
 2173 00f1 16030000 		.4byte	.LASF22
 2174 00f5 04       		.byte	0x4
 2175 00f6 3C02     		.2byte	0x23c
 2176 00f8 FC000000 		.4byte	0xfc
 2177 00fc 06       		.uleb128 0x6
 2178 00fd C3000000 		.4byte	0xc3
 2179 0101 02       		.uleb128 0x2
 2180 0102 04       		.byte	0x4
 2181 0103 07       		.byte	0x7
 2182 0104 77030000 		.4byte	.LASF23
 2183 0108 03       		.uleb128 0x3
 2184 0109 FE010000 		.4byte	.LASF24
 2185 010d 05       		.byte	0x5
 2186 010e 7E       		.byte	0x7e
 2187 010f 13010000 		.4byte	0x113
 2188 0113 07       		.uleb128 0x7
 2189 0114 FE010000 		.4byte	.LASF24
 2190 0118 08       		.uleb128 0x8
 2191 0119 04       		.byte	0x4
 2192 011a 08010000 		.4byte	0x108
 2193 011e 02       		.uleb128 0x2
 2194 011f 08       		.byte	0x8
 2195 0120 04       		.byte	0x4
 2196 0121 D5010000 		.4byte	.LASF25
 2197 0125 09       		.uleb128 0x9
 2198 0126 36000000 		.4byte	.LASF33
 2199 012a 01       		.byte	0x1
 2200 012b 06       		.byte	0x6
 2201 012c 2A       		.byte	0x2a
 2202 012d 5C010000 		.4byte	0x15c
 2203 0131 0A       		.uleb128 0xa
 2204 0132 29000000 		.4byte	.LASF26
 2205 0136 00       		.sleb128 0
 2206 0137 0A       		.uleb128 0xa
 2207 0138 E1010000 		.4byte	.LASF27
 2208 013c 01       		.sleb128 1
 2209 013d 0A       		.uleb128 0xa
 2210 013e 2D030000 		.4byte	.LASF28
 2211 0142 02       		.sleb128 2
 2212 0143 0A       		.uleb128 0xa
 2213 0144 63000000 		.4byte	.LASF29
 2214 0148 03       		.sleb128 3
 2215 0149 0A       		.uleb128 0xa
 2216 014a 00000000 		.4byte	.LASF30
 2217 014e 04       		.sleb128 4
 2218 014f 0A       		.uleb128 0xa
 2219 0150 05010000 		.4byte	.LASF31
 2220 0154 05       		.sleb128 5
 2221 0155 0A       		.uleb128 0xa
 2222 0156 C2010000 		.4byte	.LASF32
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 52


 2223 015a 06       		.sleb128 6
 2224 015b 00       		.byte	0
 2225 015c 03       		.uleb128 0x3
 2226 015d 36000000 		.4byte	.LASF33
 2227 0161 06       		.byte	0x6
 2228 0162 32       		.byte	0x32
 2229 0163 25010000 		.4byte	0x125
 2230 0167 0B       		.uleb128 0xb
 2231 0168 78000000 		.4byte	.LASF34
 2232 016c 01       		.byte	0x1
 2233 016d 5D       		.byte	0x5d
 2234 016e 00000000 		.4byte	.LFB63
 2235 0172 20000000 		.4byte	.LFE63-.LFB63
 2236 0176 01       		.uleb128 0x1
 2237 0177 9C       		.byte	0x9c
 2238 0178 0C       		.uleb128 0xc
 2239 0179 CD030000 		.4byte	.LASF35
 2240 017d 01       		.byte	0x1
 2241 017e 64       		.byte	0x64
 2242 017f 00000000 		.4byte	.LFB64
 2243 0183 38000000 		.4byte	.LFE64-.LFB64
 2244 0187 01       		.uleb128 0x1
 2245 0188 9C       		.byte	0x9c
 2246 0189 0C       		.uleb128 0xc
 2247 018a F9020000 		.4byte	.LASF36
 2248 018e 01       		.byte	0x1
 2249 018f 6D       		.byte	0x6d
 2250 0190 00000000 		.4byte	.LFB65
 2251 0194 74000000 		.4byte	.LFE65-.LFB65
 2252 0198 01       		.uleb128 0x1
 2253 0199 9C       		.byte	0x9c
 2254 019a 0B       		.uleb128 0xb
 2255 019b A9030000 		.4byte	.LASF37
 2256 019f 01       		.byte	0x1
 2257 01a0 7E       		.byte	0x7e
 2258 01a1 00000000 		.4byte	.LFB66
 2259 01a5 50000000 		.4byte	.LFE66-.LFB66
 2260 01a9 01       		.uleb128 0x1
 2261 01aa 9C       		.byte	0x9c
 2262 01ab 0C       		.uleb128 0xc
 2263 01ac 86030000 		.4byte	.LASF38
 2264 01b0 01       		.byte	0x1
 2265 01b1 88       		.byte	0x88
 2266 01b2 00000000 		.4byte	.LFB67
 2267 01b6 4C000000 		.4byte	.LFE67-.LFB67
 2268 01ba 01       		.uleb128 0x1
 2269 01bb 9C       		.byte	0x9c
 2270 01bc 0D       		.uleb128 0xd
 2271 01bd 73000000 		.4byte	.LASF85
 2272 01c1 01       		.byte	0x1
 2273 01c2 90       		.byte	0x90
 2274 01c3 89000000 		.4byte	0x89
 2275 01c7 00000000 		.4byte	.LFB68
 2276 01cb 740B0000 		.4byte	.LFE68-.LFB68
 2277 01cf 01       		.uleb128 0x1
 2278 01d0 9C       		.byte	0x9c
 2279 01d1 D9030000 		.4byte	0x3d9
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 53


 2280 01d5 0E       		.uleb128 0xe
 2281 01d6 6E756D00 		.ascii	"num\000"
 2282 01da 01       		.byte	0x1
 2283 01db 92       		.byte	0x92
 2284 01dc 89000000 		.4byte	0x89
 2285 01e0 02       		.uleb128 0x2
 2286 01e1 91       		.byte	0x91
 2287 01e2 60       		.sleb128 -32
 2288 01e3 0F       		.uleb128 0xf
 2289 01e4 D2000000 		.4byte	.LASF39
 2290 01e8 01       		.byte	0x1
 2291 01e9 92       		.byte	0x92
 2292 01ea 89000000 		.4byte	0x89
 2293 01ee 02       		.uleb128 0x2
 2294 01ef 91       		.byte	0x91
 2295 01f0 5C       		.sleb128 -36
 2296 01f1 0F       		.uleb128 0xf
 2297 01f2 A1010000 		.4byte	.LASF40
 2298 01f6 01       		.byte	0x1
 2299 01f7 93       		.byte	0x93
 2300 01f8 DB000000 		.4byte	0xdb
 2301 01fc 02       		.uleb128 0x2
 2302 01fd 91       		.byte	0x91
 2303 01fe 58       		.sleb128 -40
 2304 01ff 0F       		.uleb128 0xf
 2305 0200 53020000 		.4byte	.LASF41
 2306 0204 01       		.byte	0x1
 2307 0205 93       		.byte	0x93
 2308 0206 DB000000 		.4byte	0xdb
 2309 020a 02       		.uleb128 0x2
 2310 020b 91       		.byte	0x91
 2311 020c 54       		.sleb128 -44
 2312 020d 0F       		.uleb128 0xf
 2313 020e 95030000 		.4byte	.LASF42
 2314 0212 01       		.byte	0x1
 2315 0213 93       		.byte	0x93
 2316 0214 DB000000 		.4byte	0xdb
 2317 0218 02       		.uleb128 0x2
 2318 0219 91       		.byte	0x91
 2319 021a 50       		.sleb128 -48
 2320 021b 0F       		.uleb128 0xf
 2321 021c 9C000000 		.4byte	.LASF43
 2322 0220 01       		.byte	0x1
 2323 0221 93       		.byte	0x93
 2324 0222 DB000000 		.4byte	0xdb
 2325 0226 02       		.uleb128 0x2
 2326 0227 91       		.byte	0x91
 2327 0228 6C       		.sleb128 -20
 2328 0229 0E       		.uleb128 0xe
 2329 022a 62756600 		.ascii	"buf\000"
 2330 022e 01       		.byte	0x1
 2331 022f 94       		.byte	0x94
 2332 0230 D9030000 		.4byte	0x3d9
 2333 0234 03       		.uleb128 0x3
 2334 0235 91       		.byte	0x91
 2335 0236 947F     		.sleb128 -108
 2336 0238 0F       		.uleb128 0xf
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 54


 2337 0239 50030000 		.4byte	.LASF44
 2338 023d 01       		.byte	0x1
 2339 023e 94       		.byte	0x94
 2340 023f E9030000 		.4byte	0x3e9
 2341 0243 03       		.uleb128 0x3
 2342 0244 91       		.byte	0x91
 2343 0245 807F     		.sleb128 -128
 2344 0247 0F       		.uleb128 0xf
 2345 0248 CF020000 		.4byte	.LASF45
 2346 024c 01       		.byte	0x1
 2347 024d 94       		.byte	0x94
 2348 024e F9030000 		.4byte	0x3f9
 2349 0252 03       		.uleb128 0x3
 2350 0253 91       		.byte	0x91
 2351 0254 F07E     		.sleb128 -144
 2352 0256 0F       		.uleb128 0xf
 2353 0257 6C030000 		.4byte	.LASF46
 2354 025b 01       		.byte	0x1
 2355 025c 95       		.byte	0x95
 2356 025d 09040000 		.4byte	0x409
 2357 0261 03       		.uleb128 0x3
 2358 0262 91       		.byte	0x91
 2359 0263 DC7E     		.sleb128 -164
 2360 0265 0F       		.uleb128 0xf
 2361 0266 E7030000 		.4byte	.LASF47
 2362 026a 01       		.byte	0x1
 2363 026b 96       		.byte	0x96
 2364 026c F9030000 		.4byte	0x3f9
 2365 0270 03       		.uleb128 0x3
 2366 0271 91       		.byte	0x91
 2367 0272 CC7E     		.sleb128 -180
 2368 0274 0F       		.uleb128 0xf
 2369 0275 8D000000 		.4byte	.LASF48
 2370 0279 01       		.byte	0x1
 2371 027a 97       		.byte	0x97
 2372 027b 19040000 		.4byte	0x419
 2373 027f 03       		.uleb128 0x3
 2374 0280 91       		.byte	0x91
 2375 0281 B87E     		.sleb128 -200
 2376 0283 0F       		.uleb128 0xf
 2377 0284 E1020000 		.4byte	.LASF49
 2378 0288 01       		.byte	0x1
 2379 0289 98       		.byte	0x98
 2380 028a 19040000 		.4byte	0x419
 2381 028e 03       		.uleb128 0x3
 2382 028f 91       		.byte	0x91
 2383 0290 A47E     		.sleb128 -220
 2384 0292 0F       		.uleb128 0xf
 2385 0293 B9010000 		.4byte	.LASF50
 2386 0297 01       		.byte	0x1
 2387 0298 99       		.byte	0x99
 2388 0299 29040000 		.4byte	0x429
 2389 029d 03       		.uleb128 0x3
 2390 029e 91       		.byte	0x91
 2391 029f 947E     		.sleb128 -236
 2392 02a1 0F       		.uleb128 0xf
 2393 02a2 E1000000 		.4byte	.LASF51
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 55


 2394 02a6 01       		.byte	0x1
 2395 02a7 9A       		.byte	0x9a
 2396 02a8 89000000 		.4byte	0x89
 2397 02ac 02       		.uleb128 0x2
 2398 02ad 91       		.byte	0x91
 2399 02ae 68       		.sleb128 -24
 2400 02af 10       		.uleb128 0x10
 2401 02b0 617800   		.ascii	"ax\000"
 2402 02b3 01       		.byte	0x1
 2403 02b4 9C       		.byte	0x9c
 2404 02b5 A2000000 		.4byte	0xa2
 2405 02b9 10       		.uleb128 0x10
 2406 02ba 617900   		.ascii	"ay\000"
 2407 02bd 01       		.byte	0x1
 2408 02be 9C       		.byte	0x9c
 2409 02bf A2000000 		.4byte	0xa2
 2410 02c3 0E       		.uleb128 0xe
 2411 02c4 617A00   		.ascii	"az\000"
 2412 02c7 01       		.byte	0x1
 2413 02c8 9C       		.byte	0x9c
 2414 02c9 A2000000 		.4byte	0xa2
 2415 02cd 02       		.uleb128 0x2
 2416 02ce 91       		.byte	0x91
 2417 02cf 46       		.sleb128 -58
 2418 02d0 10       		.uleb128 0x10
 2419 02d1 6900     		.ascii	"i\000"
 2420 02d3 01       		.byte	0x1
 2421 02d4 9C       		.byte	0x9c
 2422 02d5 A2000000 		.4byte	0xa2
 2423 02d9 10       		.uleb128 0x10
 2424 02da 677800   		.ascii	"gx\000"
 2425 02dd 01       		.byte	0x1
 2426 02de 9D       		.byte	0x9d
 2427 02df A2000000 		.4byte	0xa2
 2428 02e3 10       		.uleb128 0x10
 2429 02e4 677900   		.ascii	"gy\000"
 2430 02e7 01       		.byte	0x1
 2431 02e8 9D       		.byte	0x9d
 2432 02e9 A2000000 		.4byte	0xa2
 2433 02ed 10       		.uleb128 0x10
 2434 02ee 677A00   		.ascii	"gz\000"
 2435 02f1 01       		.byte	0x1
 2436 02f2 9D       		.byte	0x9d
 2437 02f3 A2000000 		.4byte	0xa2
 2438 02f7 0F       		.uleb128 0xf
 2439 02f8 D8020000 		.4byte	.LASF52
 2440 02fc 01       		.byte	0x1
 2441 02fd 9E       		.byte	0x9e
 2442 02fe A2000000 		.4byte	0xa2
 2443 0302 02       		.uleb128 0x2
 2444 0303 91       		.byte	0x91
 2445 0304 4E       		.sleb128 -50
 2446 0305 0F       		.uleb128 0xf
 2447 0306 9C010000 		.4byte	.LASF53
 2448 030a 01       		.byte	0x1
 2449 030b 9F       		.byte	0x9f
 2450 030c 89000000 		.4byte	0x89
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 56


 2451 0310 03       		.uleb128 0x3
 2452 0311 91       		.byte	0x91
 2453 0312 907E     		.sleb128 -240
 2454 0314 0F       		.uleb128 0xf
 2455 0315 5E000000 		.4byte	.LASF54
 2456 0319 01       		.byte	0x1
 2457 031a 9F       		.byte	0x9f
 2458 031b 89000000 		.4byte	0x89
 2459 031f 02       		.uleb128 0x2
 2460 0320 91       		.byte	0x91
 2461 0321 48       		.sleb128 -56
 2462 0322 0F       		.uleb128 0xf
 2463 0323 C6000000 		.4byte	.LASF55
 2464 0327 01       		.byte	0x1
 2465 0328 FE       		.byte	0xfe
 2466 0329 89000000 		.4byte	0x89
 2467 032d 02       		.uleb128 0x2
 2468 032e 91       		.byte	0x91
 2469 032f 64       		.sleb128 -28
 2470 0330 11       		.uleb128 0x11
 2471 0331 2A020000 		.4byte	.LBB2
 2472 0335 24090000 		.4byte	.LBE2-.LBB2
 2473 0339 12       		.uleb128 0x12
 2474 033a 7400     		.ascii	"t\000"
 2475 033c 01       		.byte	0x1
 2476 033d 4B01     		.2byte	0x14b
 2477 033f 89000000 		.4byte	0x89
 2478 0343 03       		.uleb128 0x3
 2479 0344 91       		.byte	0x91
 2480 0345 8C7E     		.sleb128 -244
 2481 0347 13       		.uleb128 0x13
 2482 0348 60030000 		.4byte	.LBB3
 2483 034c 9C000000 		.4byte	.LBE3-.LBB3
 2484 0350 65030000 		.4byte	0x365
 2485 0354 14       		.uleb128 0x14
 2486 0355 3D000000 		.4byte	.LASF56
 2487 0359 01       		.byte	0x1
 2488 035a 1401     		.2byte	0x114
 2489 035c 39040000 		.4byte	0x439
 2490 0360 03       		.uleb128 0x3
 2491 0361 91       		.byte	0x91
 2492 0362 C87D     		.sleb128 -312
 2493 0364 00       		.byte	0
 2494 0365 13       		.uleb128 0x13
 2495 0366 14040000 		.4byte	.LBB4
 2496 036a 58000000 		.4byte	.LBE4-.LBB4
 2497 036e 81030000 		.4byte	0x381
 2498 0372 12       		.uleb128 0x12
 2499 0373 7400     		.ascii	"t\000"
 2500 0375 01       		.byte	0x1
 2501 0376 2601     		.2byte	0x126
 2502 0378 49040000 		.4byte	0x449
 2503 037c 03       		.uleb128 0x3
 2504 037d 91       		.byte	0x91
 2505 037e 847E     		.sleb128 -252
 2506 0380 00       		.byte	0
 2507 0381 13       		.uleb128 0x13
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 57


 2508 0382 48070000 		.4byte	.LBB5
 2509 0386 4A010000 		.4byte	.LBE5-.LBB5
 2510 038a 9F030000 		.4byte	0x39f
 2511 038e 14       		.uleb128 0x14
 2512 038f 3D000000 		.4byte	.LASF56
 2513 0393 01       		.byte	0x1
 2514 0394 9201     		.2byte	0x192
 2515 0396 39040000 		.4byte	0x439
 2516 039a 03       		.uleb128 0x3
 2517 039b 91       		.byte	0x91
 2518 039c C87D     		.sleb128 -312
 2519 039e 00       		.byte	0
 2520 039f 13       		.uleb128 0x13
 2521 03a0 38090000 		.4byte	.LBB6
 2522 03a4 F2000000 		.4byte	.LBE6-.LBB6
 2523 03a8 BD030000 		.4byte	0x3bd
 2524 03ac 14       		.uleb128 0x14
 2525 03ad 3D000000 		.4byte	.LASF56
 2526 03b1 01       		.byte	0x1
 2527 03b2 DC01     		.2byte	0x1dc
 2528 03b4 39040000 		.4byte	0x439
 2529 03b8 03       		.uleb128 0x3
 2530 03b9 91       		.byte	0x91
 2531 03ba C87D     		.sleb128 -312
 2532 03bc 00       		.byte	0
 2533 03bd 11       		.uleb128 0x11
 2534 03be 700A0000 		.4byte	.LBB7
 2535 03c2 AA000000 		.4byte	.LBE7-.LBB7
 2536 03c6 14       		.uleb128 0x14
 2537 03c7 3D000000 		.4byte	.LASF56
 2538 03cb 01       		.byte	0x1
 2539 03cc 0202     		.2byte	0x202
 2540 03ce 39040000 		.4byte	0x439
 2541 03d2 03       		.uleb128 0x3
 2542 03d3 91       		.byte	0x91
 2543 03d4 C87D     		.sleb128 -312
 2544 03d6 00       		.byte	0
 2545 03d7 00       		.byte	0
 2546 03d8 00       		.byte	0
 2547 03d9 15       		.uleb128 0x15
 2548 03da E9000000 		.4byte	0xe9
 2549 03de E9030000 		.4byte	0x3e9
 2550 03e2 16       		.uleb128 0x16
 2551 03e3 01010000 		.4byte	0x101
 2552 03e7 31       		.byte	0x31
 2553 03e8 00       		.byte	0
 2554 03e9 15       		.uleb128 0x15
 2555 03ea E9000000 		.4byte	0xe9
 2556 03ee F9030000 		.4byte	0x3f9
 2557 03f2 16       		.uleb128 0x16
 2558 03f3 01010000 		.4byte	0x101
 2559 03f7 13       		.byte	0x13
 2560 03f8 00       		.byte	0
 2561 03f9 15       		.uleb128 0x15
 2562 03fa E9000000 		.4byte	0xe9
 2563 03fe 09040000 		.4byte	0x409
 2564 0402 16       		.uleb128 0x16
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 58


 2565 0403 01010000 		.4byte	0x101
 2566 0407 0D       		.byte	0xd
 2567 0408 00       		.byte	0
 2568 0409 15       		.uleb128 0x15
 2569 040a E9000000 		.4byte	0xe9
 2570 040e 19040000 		.4byte	0x419
 2571 0412 16       		.uleb128 0x16
 2572 0413 01010000 		.4byte	0x101
 2573 0417 11       		.byte	0x11
 2574 0418 00       		.byte	0
 2575 0419 15       		.uleb128 0x15
 2576 041a E9000000 		.4byte	0xe9
 2577 041e 29040000 		.4byte	0x429
 2578 0422 16       		.uleb128 0x16
 2579 0423 01010000 		.4byte	0x101
 2580 0427 10       		.byte	0x10
 2581 0428 00       		.byte	0
 2582 0429 15       		.uleb128 0x15
 2583 042a E9000000 		.4byte	0xe9
 2584 042e 39040000 		.4byte	0x439
 2585 0432 16       		.uleb128 0x16
 2586 0433 01010000 		.4byte	0x101
 2587 0437 0F       		.byte	0xf
 2588 0438 00       		.byte	0
 2589 0439 15       		.uleb128 0x15
 2590 043a E9000000 		.4byte	0xe9
 2591 043e 49040000 		.4byte	0x449
 2592 0442 16       		.uleb128 0x16
 2593 0443 01010000 		.4byte	0x101
 2594 0447 3B       		.byte	0x3b
 2595 0448 00       		.byte	0
 2596 0449 15       		.uleb128 0x15
 2597 044a E9000000 		.4byte	0xe9
 2598 044e 59040000 		.4byte	0x459
 2599 0452 16       		.uleb128 0x16
 2600 0453 01010000 		.4byte	0x101
 2601 0457 04       		.byte	0x4
 2602 0458 00       		.byte	0
 2603 0459 17       		.uleb128 0x17
 2604 045a B6030000 		.4byte	.LASF57
 2605 045e 07       		.byte	0x7
 2606 045f 9606     		.2byte	0x696
 2607 0461 65040000 		.4byte	0x465
 2608 0465 06       		.uleb128 0x6
 2609 0466 AD000000 		.4byte	0xad
 2610 046a 18       		.uleb128 0x18
 2611 046b 48000000 		.4byte	.LASF58
 2612 046f 08       		.byte	0x8
 2613 0470 9101     		.2byte	0x191
 2614 0472 97000000 		.4byte	0x97
 2615 0476 05       		.uleb128 0x5
 2616 0477 03       		.byte	0x3
 2617 0478 00000000 		.4byte	devAddr
 2618 047c 15       		.uleb128 0x15
 2619 047d 97000000 		.4byte	0x97
 2620 0481 8C040000 		.4byte	0x48c
 2621 0485 16       		.uleb128 0x16
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 59


 2622 0486 01010000 		.4byte	0x101
 2623 048a 15       		.byte	0x15
 2624 048b 00       		.byte	0
 2625 048c 18       		.uleb128 0x18
 2626 048d F2020000 		.4byte	.LASF59
 2627 0491 08       		.byte	0x8
 2628 0492 9201     		.2byte	0x192
 2629 0494 7C040000 		.4byte	0x47c
 2630 0498 05       		.uleb128 0x5
 2631 0499 03       		.byte	0x3
 2632 049a 00000000 		.4byte	buffer
 2633 049e 19       		.uleb128 0x19
 2634 049f 43000000 		.4byte	.LASF60
 2635 04a3 01       		.byte	0x1
 2636 04a4 32       		.byte	0x32
 2637 04a5 B8000000 		.4byte	0xb8
 2638 04a9 05       		.uleb128 0x5
 2639 04aa 03       		.byte	0x3
 2640 04ab 00000000 		.4byte	Addr
 2641 04af 1A       		.uleb128 0x1a
 2642 04b0 696400   		.ascii	"id\000"
 2643 04b3 01       		.byte	0x1
 2644 04b4 33       		.byte	0x33
 2645 04b5 62000000 		.4byte	0x62
 2646 04b9 05       		.uleb128 0x5
 2647 04ba 03       		.byte	0x3
 2648 04bb 00000000 		.4byte	id
 2649 04bf 19       		.uleb128 0x19
 2650 04c0 B0010000 		.4byte	.LASF61
 2651 04c4 01       		.byte	0x1
 2652 04c5 33       		.byte	0x33
 2653 04c6 62000000 		.4byte	0x62
 2654 04ca 05       		.uleb128 0x5
 2655 04cb 03       		.byte	0x3
 2656 04cc 00000000 		.4byte	press_id
 2657 04d0 19       		.uleb128 0x19
 2658 04d1 3C020000 		.4byte	.LASF62
 2659 04d5 01       		.byte	0x1
 2660 04d6 34       		.byte	0x34
 2661 04d7 62000000 		.4byte	0x62
 2662 04db 05       		.uleb128 0x5
 2663 04dc 03       		.byte	0x3
 2664 04dd 00000000 		.4byte	data_time
 2665 04e1 1A       		.uleb128 0x1a
 2666 04e2 73756D00 		.ascii	"sum\000"
 2667 04e6 01       		.byte	0x1
 2668 04e7 36       		.byte	0x36
 2669 04e8 62000000 		.4byte	0x62
 2670 04ec 05       		.uleb128 0x5
 2671 04ed 03       		.byte	0x3
 2672 04ee 00000000 		.4byte	sum
 2673 04f2 19       		.uleb128 0x19
 2674 04f3 C8010000 		.4byte	.LASF63
 2675 04f7 01       		.byte	0x1
 2676 04f8 37       		.byte	0x37
 2677 04f9 DB000000 		.4byte	0xdb
 2678 04fd 05       		.uleb128 0x5
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 60


 2679 04fe 03       		.byte	0x3
 2680 04ff 00000000 		.4byte	pressure_sum
 2681 0503 19       		.uleb128 0x19
 2682 0504 FD000000 		.4byte	.LASF64
 2683 0508 01       		.byte	0x1
 2684 0509 38       		.byte	0x38
 2685 050a A2000000 		.4byte	0xa2
 2686 050e 05       		.uleb128 0x5
 2687 050f 03       		.byte	0x3
 2688 0510 00000000 		.4byte	average
 2689 0514 19       		.uleb128 0x19
 2690 0515 9C030000 		.4byte	.LASF65
 2691 0519 01       		.byte	0x1
 2692 051a 39       		.byte	0x39
 2693 051b 25050000 		.4byte	0x525
 2694 051f 05       		.uleb128 0x5
 2695 0520 03       		.byte	0x3
 2696 0521 00000000 		.4byte	collect_flag
 2697 0525 02       		.uleb128 0x2
 2698 0526 01       		.byte	0x1
 2699 0527 02       		.byte	0x2
 2700 0528 97020000 		.4byte	.LASF66
 2701 052c 19       		.uleb128 0x19
 2702 052d C3030000 		.4byte	.LASF67
 2703 0531 01       		.byte	0x1
 2704 0532 3A       		.byte	0x3a
 2705 0533 25050000 		.4byte	0x525
 2706 0537 05       		.uleb128 0x5
 2707 0538 03       		.byte	0x3
 2708 0539 00000000 		.4byte	wait_flag
 2709 053d 19       		.uleb128 0x19
 2710 053e B3000000 		.4byte	.LASF68
 2711 0542 01       		.byte	0x1
 2712 0543 3B       		.byte	0x3b
 2713 0544 25050000 		.4byte	0x525
 2714 0548 05       		.uleb128 0x5
 2715 0549 03       		.byte	0x3
 2716 054a 00000000 		.4byte	PANIC_flag
 2717 054e 19       		.uleb128 0x19
 2718 054f 80030000 		.4byte	.LASF69
 2719 0553 01       		.byte	0x1
 2720 0554 3D       		.byte	0x3d
 2721 0555 5C010000 		.4byte	0x15c
 2722 0559 05       		.uleb128 0x5
 2723 055a 03       		.byte	0x3
 2724 055b 00000000 		.4byte	STATE
 2725 055f 19       		.uleb128 0x19
 2726 0560 58020000 		.4byte	.LASF70
 2727 0564 01       		.byte	0x1
 2728 0565 3E       		.byte	0x3e
 2729 0566 97000000 		.4byte	0x97
 2730 056a 05       		.uleb128 0x5
 2731 056b 03       		.byte	0x3
 2732 056c 00000000 		.4byte	testnum
 2733 0570 19       		.uleb128 0x19
 2734 0571 06020000 		.4byte	.LASF71
 2735 0575 01       		.byte	0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 61


 2736 0576 3E       		.byte	0x3e
 2737 0577 97000000 		.4byte	0x97
 2738 057b 05       		.uleb128 0x5
 2739 057c 03       		.byte	0x3
 2740 057d 00000000 		.4byte	countdown
 2741 0581 19       		.uleb128 0x19
 2742 0582 14000000 		.4byte	.LASF72
 2743 0586 01       		.byte	0x1
 2744 0587 3E       		.byte	0x3e
 2745 0588 97000000 		.4byte	0x97
 2746 058c 05       		.uleb128 0x5
 2747 058d 03       		.byte	0x3
 2748 058e 00000000 		.4byte	update_Data
 2749 0592 15       		.uleb128 0x15
 2750 0593 97000000 		.4byte	0x97
 2751 0597 A2050000 		.4byte	0x5a2
 2752 059b 16       		.uleb128 0x16
 2753 059c 01010000 		.4byte	0x101
 2754 05a0 3F       		.byte	0x3f
 2755 05a1 00       		.byte	0
 2756 05a2 19       		.uleb128 0x19
 2757 05a3 20000000 		.4byte	.LASF73
 2758 05a7 01       		.byte	0x1
 2759 05a8 3F       		.byte	0x3f
 2760 05a9 92050000 		.4byte	0x592
 2761 05ad 05       		.uleb128 0x5
 2762 05ae 03       		.byte	0x3
 2763 05af 00000000 		.4byte	RxBuffer
 2764 05b3 19       		.uleb128 0x19
 2765 05b4 0A000000 		.4byte	.LASF74
 2766 05b8 01       		.byte	0x1
 2767 05b9 40       		.byte	0x40
 2768 05ba 89000000 		.4byte	0x89
 2769 05be 05       		.uleb128 0x5
 2770 05bf 03       		.byte	0x3
 2771 05c0 00000000 		.4byte	msg_count
 2772 05c4 19       		.uleb128 0x19
 2773 05c5 EB020000 		.4byte	.LASF75
 2774 05c9 01       		.byte	0x1
 2775 05ca 40       		.byte	0x40
 2776 05cb 89000000 		.4byte	0x89
 2777 05cf 05       		.uleb128 0x5
 2778 05d0 03       		.byte	0x3
 2779 05d1 00000000 		.4byte	rxflag
 2780 05d5 19       		.uleb128 0x19
 2781 05d6 38030000 		.4byte	.LASF76
 2782 05da 01       		.byte	0x1
 2783 05db 40       		.byte	0x40
 2784 05dc 89000000 		.4byte	0x89
 2785 05e0 05       		.uleb128 0x5
 2786 05e1 03       		.byte	0x3
 2787 05e2 00000000 		.4byte	bytes
 2788 05e6 19       		.uleb128 0x19
 2789 05e7 6A000000 		.4byte	.LASF77
 2790 05eb 01       		.byte	0x1
 2791 05ec 40       		.byte	0x40
 2792 05ed 89000000 		.4byte	0x89
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 62


 2793 05f1 05       		.uleb128 0x5
 2794 05f2 03       		.byte	0x3
 2795 05f3 00000000 		.4byte	dataflag
 2796 05f7 19       		.uleb128 0x19
 2797 05f8 50000000 		.4byte	.LASF78
 2798 05fc 01       		.byte	0x1
 2799 05fd 40       		.byte	0x40
 2800 05fe 89000000 		.4byte	0x89
 2801 0602 05       		.uleb128 0x5
 2802 0603 03       		.byte	0x3
 2803 0604 00000000 		.4byte	transmit_flag
 2804 0608 15       		.uleb128 0x15
 2805 0609 E9000000 		.4byte	0xe9
 2806 060d 18060000 		.4byte	0x618
 2807 0611 16       		.uleb128 0x16
 2808 0612 01010000 		.4byte	0x101
 2809 0616 0A       		.byte	0xa
 2810 0617 00       		.byte	0
 2811 0618 19       		.uleb128 0x19
 2812 0619 97000000 		.4byte	.LASF79
 2813 061d 01       		.byte	0x1
 2814 061e 41       		.byte	0x41
 2815 061f 08060000 		.4byte	0x608
 2816 0623 05       		.uleb128 0x5
 2817 0624 03       		.byte	0x3
 2818 0625 00000000 		.4byte	file
 2819 0629 15       		.uleb128 0x15
 2820 062a E9000000 		.4byte	0xe9
 2821 062e 39060000 		.4byte	0x639
 2822 0632 16       		.uleb128 0x16
 2823 0633 01010000 		.4byte	0x101
 2824 0637 09       		.byte	0x9
 2825 0638 00       		.byte	0
 2826 0639 19       		.uleb128 0x19
 2827 063a A9010000 		.4byte	.LASF80
 2828 063e 01       		.byte	0x1
 2829 063f 42       		.byte	0x42
 2830 0640 29060000 		.4byte	0x629
 2831 0644 05       		.uleb128 0x5
 2832 0645 03       		.byte	0x3
 2833 0646 00000000 		.4byte	volume
 2834 064a 19       		.uleb128 0x19
 2835 064b E0030000 		.4byte	.LASF81
 2836 064f 01       		.byte	0x1
 2837 0650 43       		.byte	0x43
 2838 0651 18010000 		.4byte	0x118
 2839 0655 05       		.uleb128 0x5
 2840 0656 03       		.byte	0x3
 2841 0657 00000000 		.4byte	fsfile
 2842 065b 00       		.byte	0
 2843              		.section	.debug_abbrev,"",%progbits
 2844              	.Ldebug_abbrev0:
 2845 0000 01       		.uleb128 0x1
 2846 0001 11       		.uleb128 0x11
 2847 0002 01       		.byte	0x1
 2848 0003 25       		.uleb128 0x25
 2849 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 63


 2850 0005 13       		.uleb128 0x13
 2851 0006 0B       		.uleb128 0xb
 2852 0007 03       		.uleb128 0x3
 2853 0008 0E       		.uleb128 0xe
 2854 0009 1B       		.uleb128 0x1b
 2855 000a 0E       		.uleb128 0xe
 2856 000b 55       		.uleb128 0x55
 2857 000c 17       		.uleb128 0x17
 2858 000d 11       		.uleb128 0x11
 2859 000e 01       		.uleb128 0x1
 2860 000f 10       		.uleb128 0x10
 2861 0010 17       		.uleb128 0x17
 2862 0011 00       		.byte	0
 2863 0012 00       		.byte	0
 2864 0013 02       		.uleb128 0x2
 2865 0014 24       		.uleb128 0x24
 2866 0015 00       		.byte	0
 2867 0016 0B       		.uleb128 0xb
 2868 0017 0B       		.uleb128 0xb
 2869 0018 3E       		.uleb128 0x3e
 2870 0019 0B       		.uleb128 0xb
 2871 001a 03       		.uleb128 0x3
 2872 001b 0E       		.uleb128 0xe
 2873 001c 00       		.byte	0
 2874 001d 00       		.byte	0
 2875 001e 03       		.uleb128 0x3
 2876 001f 16       		.uleb128 0x16
 2877 0020 00       		.byte	0
 2878 0021 03       		.uleb128 0x3
 2879 0022 0E       		.uleb128 0xe
 2880 0023 3A       		.uleb128 0x3a
 2881 0024 0B       		.uleb128 0xb
 2882 0025 3B       		.uleb128 0x3b
 2883 0026 0B       		.uleb128 0xb
 2884 0027 49       		.uleb128 0x49
 2885 0028 13       		.uleb128 0x13
 2886 0029 00       		.byte	0
 2887 002a 00       		.byte	0
 2888 002b 04       		.uleb128 0x4
 2889 002c 24       		.uleb128 0x24
 2890 002d 00       		.byte	0
 2891 002e 0B       		.uleb128 0xb
 2892 002f 0B       		.uleb128 0xb
 2893 0030 3E       		.uleb128 0x3e
 2894 0031 0B       		.uleb128 0xb
 2895 0032 03       		.uleb128 0x3
 2896 0033 08       		.uleb128 0x8
 2897 0034 00       		.byte	0
 2898 0035 00       		.byte	0
 2899 0036 05       		.uleb128 0x5
 2900 0037 16       		.uleb128 0x16
 2901 0038 00       		.byte	0
 2902 0039 03       		.uleb128 0x3
 2903 003a 0E       		.uleb128 0xe
 2904 003b 3A       		.uleb128 0x3a
 2905 003c 0B       		.uleb128 0xb
 2906 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 64


 2907 003e 05       		.uleb128 0x5
 2908 003f 49       		.uleb128 0x49
 2909 0040 13       		.uleb128 0x13
 2910 0041 00       		.byte	0
 2911 0042 00       		.byte	0
 2912 0043 06       		.uleb128 0x6
 2913 0044 35       		.uleb128 0x35
 2914 0045 00       		.byte	0
 2915 0046 49       		.uleb128 0x49
 2916 0047 13       		.uleb128 0x13
 2917 0048 00       		.byte	0
 2918 0049 00       		.byte	0
 2919 004a 07       		.uleb128 0x7
 2920 004b 13       		.uleb128 0x13
 2921 004c 00       		.byte	0
 2922 004d 03       		.uleb128 0x3
 2923 004e 0E       		.uleb128 0xe
 2924 004f 3C       		.uleb128 0x3c
 2925 0050 19       		.uleb128 0x19
 2926 0051 00       		.byte	0
 2927 0052 00       		.byte	0
 2928 0053 08       		.uleb128 0x8
 2929 0054 0F       		.uleb128 0xf
 2930 0055 00       		.byte	0
 2931 0056 0B       		.uleb128 0xb
 2932 0057 0B       		.uleb128 0xb
 2933 0058 49       		.uleb128 0x49
 2934 0059 13       		.uleb128 0x13
 2935 005a 00       		.byte	0
 2936 005b 00       		.byte	0
 2937 005c 09       		.uleb128 0x9
 2938 005d 04       		.uleb128 0x4
 2939 005e 01       		.byte	0x1
 2940 005f 03       		.uleb128 0x3
 2941 0060 0E       		.uleb128 0xe
 2942 0061 0B       		.uleb128 0xb
 2943 0062 0B       		.uleb128 0xb
 2944 0063 3A       		.uleb128 0x3a
 2945 0064 0B       		.uleb128 0xb
 2946 0065 3B       		.uleb128 0x3b
 2947 0066 0B       		.uleb128 0xb
 2948 0067 01       		.uleb128 0x1
 2949 0068 13       		.uleb128 0x13
 2950 0069 00       		.byte	0
 2951 006a 00       		.byte	0
 2952 006b 0A       		.uleb128 0xa
 2953 006c 28       		.uleb128 0x28
 2954 006d 00       		.byte	0
 2955 006e 03       		.uleb128 0x3
 2956 006f 0E       		.uleb128 0xe
 2957 0070 1C       		.uleb128 0x1c
 2958 0071 0D       		.uleb128 0xd
 2959 0072 00       		.byte	0
 2960 0073 00       		.byte	0
 2961 0074 0B       		.uleb128 0xb
 2962 0075 2E       		.uleb128 0x2e
 2963 0076 00       		.byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 65


 2964 0077 3F       		.uleb128 0x3f
 2965 0078 19       		.uleb128 0x19
 2966 0079 03       		.uleb128 0x3
 2967 007a 0E       		.uleb128 0xe
 2968 007b 3A       		.uleb128 0x3a
 2969 007c 0B       		.uleb128 0xb
 2970 007d 3B       		.uleb128 0x3b
 2971 007e 0B       		.uleb128 0xb
 2972 007f 27       		.uleb128 0x27
 2973 0080 19       		.uleb128 0x19
 2974 0081 11       		.uleb128 0x11
 2975 0082 01       		.uleb128 0x1
 2976 0083 12       		.uleb128 0x12
 2977 0084 06       		.uleb128 0x6
 2978 0085 40       		.uleb128 0x40
 2979 0086 18       		.uleb128 0x18
 2980 0087 9642     		.uleb128 0x2116
 2981 0089 19       		.uleb128 0x19
 2982 008a 00       		.byte	0
 2983 008b 00       		.byte	0
 2984 008c 0C       		.uleb128 0xc
 2985 008d 2E       		.uleb128 0x2e
 2986 008e 00       		.byte	0
 2987 008f 3F       		.uleb128 0x3f
 2988 0090 19       		.uleb128 0x19
 2989 0091 03       		.uleb128 0x3
 2990 0092 0E       		.uleb128 0xe
 2991 0093 3A       		.uleb128 0x3a
 2992 0094 0B       		.uleb128 0xb
 2993 0095 3B       		.uleb128 0x3b
 2994 0096 0B       		.uleb128 0xb
 2995 0097 27       		.uleb128 0x27
 2996 0098 19       		.uleb128 0x19
 2997 0099 11       		.uleb128 0x11
 2998 009a 01       		.uleb128 0x1
 2999 009b 12       		.uleb128 0x12
 3000 009c 06       		.uleb128 0x6
 3001 009d 40       		.uleb128 0x40
 3002 009e 18       		.uleb128 0x18
 3003 009f 9742     		.uleb128 0x2117
 3004 00a1 19       		.uleb128 0x19
 3005 00a2 00       		.byte	0
 3006 00a3 00       		.byte	0
 3007 00a4 0D       		.uleb128 0xd
 3008 00a5 2E       		.uleb128 0x2e
 3009 00a6 01       		.byte	0x1
 3010 00a7 3F       		.uleb128 0x3f
 3011 00a8 19       		.uleb128 0x19
 3012 00a9 03       		.uleb128 0x3
 3013 00aa 0E       		.uleb128 0xe
 3014 00ab 3A       		.uleb128 0x3a
 3015 00ac 0B       		.uleb128 0xb
 3016 00ad 3B       		.uleb128 0x3b
 3017 00ae 0B       		.uleb128 0xb
 3018 00af 49       		.uleb128 0x49
 3019 00b0 13       		.uleb128 0x13
 3020 00b1 11       		.uleb128 0x11
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 66


 3021 00b2 01       		.uleb128 0x1
 3022 00b3 12       		.uleb128 0x12
 3023 00b4 06       		.uleb128 0x6
 3024 00b5 40       		.uleb128 0x40
 3025 00b6 18       		.uleb128 0x18
 3026 00b7 9642     		.uleb128 0x2116
 3027 00b9 19       		.uleb128 0x19
 3028 00ba 01       		.uleb128 0x1
 3029 00bb 13       		.uleb128 0x13
 3030 00bc 00       		.byte	0
 3031 00bd 00       		.byte	0
 3032 00be 0E       		.uleb128 0xe
 3033 00bf 34       		.uleb128 0x34
 3034 00c0 00       		.byte	0
 3035 00c1 03       		.uleb128 0x3
 3036 00c2 08       		.uleb128 0x8
 3037 00c3 3A       		.uleb128 0x3a
 3038 00c4 0B       		.uleb128 0xb
 3039 00c5 3B       		.uleb128 0x3b
 3040 00c6 0B       		.uleb128 0xb
 3041 00c7 49       		.uleb128 0x49
 3042 00c8 13       		.uleb128 0x13
 3043 00c9 02       		.uleb128 0x2
 3044 00ca 18       		.uleb128 0x18
 3045 00cb 00       		.byte	0
 3046 00cc 00       		.byte	0
 3047 00cd 0F       		.uleb128 0xf
 3048 00ce 34       		.uleb128 0x34
 3049 00cf 00       		.byte	0
 3050 00d0 03       		.uleb128 0x3
 3051 00d1 0E       		.uleb128 0xe
 3052 00d2 3A       		.uleb128 0x3a
 3053 00d3 0B       		.uleb128 0xb
 3054 00d4 3B       		.uleb128 0x3b
 3055 00d5 0B       		.uleb128 0xb
 3056 00d6 49       		.uleb128 0x49
 3057 00d7 13       		.uleb128 0x13
 3058 00d8 02       		.uleb128 0x2
 3059 00d9 18       		.uleb128 0x18
 3060 00da 00       		.byte	0
 3061 00db 00       		.byte	0
 3062 00dc 10       		.uleb128 0x10
 3063 00dd 34       		.uleb128 0x34
 3064 00de 00       		.byte	0
 3065 00df 03       		.uleb128 0x3
 3066 00e0 08       		.uleb128 0x8
 3067 00e1 3A       		.uleb128 0x3a
 3068 00e2 0B       		.uleb128 0xb
 3069 00e3 3B       		.uleb128 0x3b
 3070 00e4 0B       		.uleb128 0xb
 3071 00e5 49       		.uleb128 0x49
 3072 00e6 13       		.uleb128 0x13
 3073 00e7 00       		.byte	0
 3074 00e8 00       		.byte	0
 3075 00e9 11       		.uleb128 0x11
 3076 00ea 0B       		.uleb128 0xb
 3077 00eb 01       		.byte	0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 67


 3078 00ec 11       		.uleb128 0x11
 3079 00ed 01       		.uleb128 0x1
 3080 00ee 12       		.uleb128 0x12
 3081 00ef 06       		.uleb128 0x6
 3082 00f0 00       		.byte	0
 3083 00f1 00       		.byte	0
 3084 00f2 12       		.uleb128 0x12
 3085 00f3 34       		.uleb128 0x34
 3086 00f4 00       		.byte	0
 3087 00f5 03       		.uleb128 0x3
 3088 00f6 08       		.uleb128 0x8
 3089 00f7 3A       		.uleb128 0x3a
 3090 00f8 0B       		.uleb128 0xb
 3091 00f9 3B       		.uleb128 0x3b
 3092 00fa 05       		.uleb128 0x5
 3093 00fb 49       		.uleb128 0x49
 3094 00fc 13       		.uleb128 0x13
 3095 00fd 02       		.uleb128 0x2
 3096 00fe 18       		.uleb128 0x18
 3097 00ff 00       		.byte	0
 3098 0100 00       		.byte	0
 3099 0101 13       		.uleb128 0x13
 3100 0102 0B       		.uleb128 0xb
 3101 0103 01       		.byte	0x1
 3102 0104 11       		.uleb128 0x11
 3103 0105 01       		.uleb128 0x1
 3104 0106 12       		.uleb128 0x12
 3105 0107 06       		.uleb128 0x6
 3106 0108 01       		.uleb128 0x1
 3107 0109 13       		.uleb128 0x13
 3108 010a 00       		.byte	0
 3109 010b 00       		.byte	0
 3110 010c 14       		.uleb128 0x14
 3111 010d 34       		.uleb128 0x34
 3112 010e 00       		.byte	0
 3113 010f 03       		.uleb128 0x3
 3114 0110 0E       		.uleb128 0xe
 3115 0111 3A       		.uleb128 0x3a
 3116 0112 0B       		.uleb128 0xb
 3117 0113 3B       		.uleb128 0x3b
 3118 0114 05       		.uleb128 0x5
 3119 0115 49       		.uleb128 0x49
 3120 0116 13       		.uleb128 0x13
 3121 0117 02       		.uleb128 0x2
 3122 0118 18       		.uleb128 0x18
 3123 0119 00       		.byte	0
 3124 011a 00       		.byte	0
 3125 011b 15       		.uleb128 0x15
 3126 011c 01       		.uleb128 0x1
 3127 011d 01       		.byte	0x1
 3128 011e 49       		.uleb128 0x49
 3129 011f 13       		.uleb128 0x13
 3130 0120 01       		.uleb128 0x1
 3131 0121 13       		.uleb128 0x13
 3132 0122 00       		.byte	0
 3133 0123 00       		.byte	0
 3134 0124 16       		.uleb128 0x16
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 68


 3135 0125 21       		.uleb128 0x21
 3136 0126 00       		.byte	0
 3137 0127 49       		.uleb128 0x49
 3138 0128 13       		.uleb128 0x13
 3139 0129 2F       		.uleb128 0x2f
 3140 012a 0B       		.uleb128 0xb
 3141 012b 00       		.byte	0
 3142 012c 00       		.byte	0
 3143 012d 17       		.uleb128 0x17
 3144 012e 34       		.uleb128 0x34
 3145 012f 00       		.byte	0
 3146 0130 03       		.uleb128 0x3
 3147 0131 0E       		.uleb128 0xe
 3148 0132 3A       		.uleb128 0x3a
 3149 0133 0B       		.uleb128 0xb
 3150 0134 3B       		.uleb128 0x3b
 3151 0135 05       		.uleb128 0x5
 3152 0136 49       		.uleb128 0x49
 3153 0137 13       		.uleb128 0x13
 3154 0138 3F       		.uleb128 0x3f
 3155 0139 19       		.uleb128 0x19
 3156 013a 3C       		.uleb128 0x3c
 3157 013b 19       		.uleb128 0x19
 3158 013c 00       		.byte	0
 3159 013d 00       		.byte	0
 3160 013e 18       		.uleb128 0x18
 3161 013f 34       		.uleb128 0x34
 3162 0140 00       		.byte	0
 3163 0141 03       		.uleb128 0x3
 3164 0142 0E       		.uleb128 0xe
 3165 0143 3A       		.uleb128 0x3a
 3166 0144 0B       		.uleb128 0xb
 3167 0145 3B       		.uleb128 0x3b
 3168 0146 05       		.uleb128 0x5
 3169 0147 49       		.uleb128 0x49
 3170 0148 13       		.uleb128 0x13
 3171 0149 3F       		.uleb128 0x3f
 3172 014a 19       		.uleb128 0x19
 3173 014b 02       		.uleb128 0x2
 3174 014c 18       		.uleb128 0x18
 3175 014d 00       		.byte	0
 3176 014e 00       		.byte	0
 3177 014f 19       		.uleb128 0x19
 3178 0150 34       		.uleb128 0x34
 3179 0151 00       		.byte	0
 3180 0152 03       		.uleb128 0x3
 3181 0153 0E       		.uleb128 0xe
 3182 0154 3A       		.uleb128 0x3a
 3183 0155 0B       		.uleb128 0xb
 3184 0156 3B       		.uleb128 0x3b
 3185 0157 0B       		.uleb128 0xb
 3186 0158 49       		.uleb128 0x49
 3187 0159 13       		.uleb128 0x13
 3188 015a 3F       		.uleb128 0x3f
 3189 015b 19       		.uleb128 0x19
 3190 015c 02       		.uleb128 0x2
 3191 015d 18       		.uleb128 0x18
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 69


 3192 015e 00       		.byte	0
 3193 015f 00       		.byte	0
 3194 0160 1A       		.uleb128 0x1a
 3195 0161 34       		.uleb128 0x34
 3196 0162 00       		.byte	0
 3197 0163 03       		.uleb128 0x3
 3198 0164 08       		.uleb128 0x8
 3199 0165 3A       		.uleb128 0x3a
 3200 0166 0B       		.uleb128 0xb
 3201 0167 3B       		.uleb128 0x3b
 3202 0168 0B       		.uleb128 0xb
 3203 0169 49       		.uleb128 0x49
 3204 016a 13       		.uleb128 0x13
 3205 016b 3F       		.uleb128 0x3f
 3206 016c 19       		.uleb128 0x19
 3207 016d 02       		.uleb128 0x2
 3208 016e 18       		.uleb128 0x18
 3209 016f 00       		.byte	0
 3210 0170 00       		.byte	0
 3211 0171 00       		.byte	0
 3212              		.section	.debug_aranges,"",%progbits
 3213 0000 44000000 		.4byte	0x44
 3214 0004 0200     		.2byte	0x2
 3215 0006 00000000 		.4byte	.Ldebug_info0
 3216 000a 04       		.byte	0x4
 3217 000b 00       		.byte	0
 3218 000c 0000     		.2byte	0
 3219 000e 0000     		.2byte	0
 3220 0010 00000000 		.4byte	.LFB63
 3221 0014 20000000 		.4byte	.LFE63-.LFB63
 3222 0018 00000000 		.4byte	.LFB64
 3223 001c 38000000 		.4byte	.LFE64-.LFB64
 3224 0020 00000000 		.4byte	.LFB65
 3225 0024 74000000 		.4byte	.LFE65-.LFB65
 3226 0028 00000000 		.4byte	.LFB66
 3227 002c 50000000 		.4byte	.LFE66-.LFB66
 3228 0030 00000000 		.4byte	.LFB67
 3229 0034 4C000000 		.4byte	.LFE67-.LFB67
 3230 0038 00000000 		.4byte	.LFB68
 3231 003c 740B0000 		.4byte	.LFE68-.LFB68
 3232 0040 00000000 		.4byte	0
 3233 0044 00000000 		.4byte	0
 3234              		.section	.debug_ranges,"",%progbits
 3235              	.Ldebug_ranges0:
 3236 0000 00000000 		.4byte	.LFB63
 3237 0004 20000000 		.4byte	.LFE63
 3238 0008 00000000 		.4byte	.LFB64
 3239 000c 38000000 		.4byte	.LFE64
 3240 0010 00000000 		.4byte	.LFB65
 3241 0014 74000000 		.4byte	.LFE65
 3242 0018 00000000 		.4byte	.LFB66
 3243 001c 50000000 		.4byte	.LFE66
 3244 0020 00000000 		.4byte	.LFB67
 3245 0024 4C000000 		.4byte	.LFE67
 3246 0028 00000000 		.4byte	.LFB68
 3247 002c 740B0000 		.4byte	.LFE68
 3248 0030 00000000 		.4byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 70


 3249 0034 00000000 		.4byte	0
 3250              		.section	.debug_line,"",%progbits
 3251              	.Ldebug_line0:
 3252 0000 6E030000 		.section	.debug_str,"MS",%progbits,1
 3252      02009501 
 3252      00000201 
 3252      FB0E0D00 
 3252      01010101 
 3253              	.LASF30:
 3254 0000 52455355 		.ascii	"RESURFACE\000"
 3254      52464143 
 3254      4500
 3255              	.LASF74:
 3256 000a 6D73675F 		.ascii	"msg_count\000"
 3256      636F756E 
 3256      7400
 3257              	.LASF72:
 3258 0014 75706461 		.ascii	"update_Data\000"
 3258      74655F44 
 3258      61746100 
 3259              	.LASF73:
 3260 0020 52784275 		.ascii	"RxBuffer\000"
 3260      66666572 
 3260      00
 3261              	.LASF26:
 3262 0029 53595354 		.ascii	"SYSTEM_CHECK\000"
 3262      454D5F43 
 3262      4845434B 
 3262      00
 3263              	.LASF33:
 3264 0036 53544154 		.ascii	"STATES\000"
 3264      455300
 3265              	.LASF56:
 3266 003d 73646275 		.ascii	"sdbuf\000"
 3266      6600
 3267              	.LASF60:
 3268 0043 41646472 		.ascii	"Addr\000"
 3268      00
 3269              	.LASF58:
 3270 0048 64657641 		.ascii	"devAddr\000"
 3270      64647200 
 3271              	.LASF78:
 3272 0050 7472616E 		.ascii	"transmit_flag\000"
 3272      736D6974 
 3272      5F666C61 
 3272      6700
 3273              	.LASF54:
 3274 005e 6F6E6573 		.ascii	"ones\000"
 3274      00
 3275              	.LASF29:
 3276 0063 4C414E44 		.ascii	"LANDED\000"
 3276      454400
 3277              	.LASF77:
 3278 006a 64617461 		.ascii	"dataflag\000"
 3278      666C6167 
 3278      00
 3279              	.LASF85:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 71


 3280 0073 6D61696E 		.ascii	"main\000"
 3280      00
 3281              	.LASF34:
 3282 0078 4D6F6973 		.ascii	"Moisture_ISR_Handler\000"
 3282      74757265 
 3282      5F495352 
 3282      5F48616E 
 3282      646C6572 
 3283              	.LASF48:
 3284 008d 76616375 		.ascii	"vacuumbuf\000"
 3284      756D6275 
 3284      6600
 3285              	.LASF79:
 3286 0097 66696C65 		.ascii	"file\000"
 3286      00
 3287              	.LASF43:
 3288 009c 70726573 		.ascii	"pressure_avg\000"
 3288      73757265 
 3288      5F617667 
 3288      00
 3289              	.LASF4:
 3290 00a9 73686F72 		.ascii	"short int\000"
 3290      7420696E 
 3290      7400
 3291              	.LASF68:
 3292 00b3 50414E49 		.ascii	"PANIC_flag\000"
 3292      435F666C 
 3292      616700
 3293              	.LASF13:
 3294 00be 75696E74 		.ascii	"uint8_t\000"
 3294      385F7400 
 3295              	.LASF55:
 3296 00c6 70756C73 		.ascii	"pulse\000"
 3296      6500
 3297              	.LASF18:
 3298 00cc 696E7431 		.ascii	"int16\000"
 3298      3600
 3299              	.LASF39:
 3300 00d2 64656369 		.ascii	"decimals\000"
 3300      6D616C73 
 3300      00
 3301              	.LASF19:
 3302 00db 666C6F61 		.ascii	"float\000"
 3302      7400
 3303              	.LASF51:
 3304 00e1 73746174 		.ascii	"stateMsgCount\000"
 3304      654D7367 
 3304      436F756E 
 3304      7400
 3305              	.LASF10:
 3306 00ef 6C6F6E67 		.ascii	"long long int\000"
 3306      206C6F6E 
 3306      6720696E 
 3306      7400
 3307              	.LASF64:
 3308 00fd 61766572 		.ascii	"average\000"
 3308      61676500 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 72


 3309              	.LASF31:
 3310 0105 5452414E 		.ascii	"TRANSMIT\000"
 3310      534D4954 
 3310      00
 3311              	.LASF82:
 3312 010e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3312      4320342E 
 3312      392E3320 
 3312      32303135 
 3312      30333033 
 3313 0141 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3313      20726576 
 3313      6973696F 
 3313      6E203232 
 3313      31323230 
 3314 0174 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3314      66756E63 
 3314      74696F6E 
 3314      2D736563 
 3314      74696F6E 
 3315              	.LASF53:
 3316 019c 74656E73 		.ascii	"tens\000"
 3316      00
 3317              	.LASF40:
 3318 01a1 766F6C74 		.ascii	"voltage\000"
 3318      61676500 
 3319              	.LASF80:
 3320 01a9 766F6C75 		.ascii	"volume\000"
 3320      6D6500
 3321              	.LASF61:
 3322 01b0 70726573 		.ascii	"press_id\000"
 3322      735F6964 
 3322      00
 3323              	.LASF50:
 3324 01b9 7472616E 		.ascii	"transbuf\000"
 3324      73627566 
 3324      00
 3325              	.LASF32:
 3326 01c2 4552524F 		.ascii	"ERROR\000"
 3326      5200
 3327              	.LASF63:
 3328 01c8 70726573 		.ascii	"pressure_sum\000"
 3328      73757265 
 3328      5F73756D 
 3328      00
 3329              	.LASF25:
 3330 01d5 6C6F6E67 		.ascii	"long double\000"
 3330      20646F75 
 3330      626C6500 
 3331              	.LASF27:
 3332 01e1 57414954 		.ascii	"WAIT_TO_LAUNCH\000"
 3332      5F544F5F 
 3332      4C41554E 
 3332      434800
 3333              	.LASF1:
 3334 01f0 756E7369 		.ascii	"unsigned char\000"
 3334      676E6564 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 73


 3334      20636861 
 3334      7200
 3335              	.LASF24:
 3336 01fe 46535F46 		.ascii	"FS_FILE\000"
 3336      494C4500 
 3337              	.LASF71:
 3338 0206 636F756E 		.ascii	"countdown\000"
 3338      74646F77 
 3338      6E00
 3339              	.LASF0:
 3340 0210 7369676E 		.ascii	"signed char\000"
 3340      65642063 
 3340      68617200 
 3341              	.LASF11:
 3342 021c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3342      206C6F6E 
 3342      6720756E 
 3342      7369676E 
 3342      65642069 
 3343              	.LASF16:
 3344 0233 75696E74 		.ascii	"uint32_t\000"
 3344      33325F74 
 3344      00
 3345              	.LASF62:
 3346 023c 64617461 		.ascii	"data_time\000"
 3346      5F74696D 
 3346      6500
 3347              	.LASF12:
 3348 0246 756E7369 		.ascii	"unsigned int\000"
 3348      676E6564 
 3348      20696E74 
 3348      00
 3349              	.LASF41:
 3350 0253 74656D70 		.ascii	"temp\000"
 3350      00
 3351              	.LASF70:
 3352 0258 74657374 		.ascii	"testnum\000"
 3352      6E756D00 
 3353              	.LASF5:
 3354 0260 73686F72 		.ascii	"short unsigned int\000"
 3354      7420756E 
 3354      7369676E 
 3354      65642069 
 3354      6E7400
 3355              	.LASF21:
 3356 0273 63686172 		.ascii	"char\000"
 3356      00
 3357              	.LASF7:
 3358 0278 6C6F6E67 		.ascii	"long int\000"
 3358      20696E74 
 3358      00
 3359              	.LASF15:
 3360 0281 696E7433 		.ascii	"int32_t\000"
 3360      325F7400 
 3361              	.LASF14:
 3362 0289 696E7431 		.ascii	"int16_t\000"
 3362      365F7400 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 74


 3363              	.LASF17:
 3364 0291 75696E74 		.ascii	"uint8\000"
 3364      3800
 3365              	.LASF66:
 3366 0297 5F426F6F 		.ascii	"_Bool\000"
 3366      6C00
 3367              	.LASF84:
 3368 029d 433A5C55 		.ascii	"C:\\Users\\gding\\Documents\\Project_O-Vac\\OVac.cy"
 3368      73657273 
 3368      5C676469 
 3368      6E675C44 
 3368      6F63756D 
 3369 02cb 64736E00 		.ascii	"dsn\000"
 3370              	.LASF45:
 3371 02cf 63757253 		.ascii	"curState\000"
 3371      74617465 
 3371      00
 3372              	.LASF52:
 3373 02d8 7A5F6F66 		.ascii	"z_offset\000"
 3373      66736574 
 3373      00
 3374              	.LASF49:
 3375 02e1 72657375 		.ascii	"resurfbuf\000"
 3375      72666275 
 3375      6600
 3376              	.LASF75:
 3377 02eb 7278666C 		.ascii	"rxflag\000"
 3377      616700
 3378              	.LASF59:
 3379 02f2 62756666 		.ascii	"buffer\000"
 3379      657200
 3380              	.LASF36:
 3381 02f9 436F756E 		.ascii	"Countdown_ISR_Handler\000"
 3381      74646F77 
 3381      6E5F4953 
 3381      525F4861 
 3381      6E646C65 
 3382              	.LASF83:
 3383 030f 6D61696E 		.ascii	"main.c\000"
 3383      2E6300
 3384              	.LASF22:
 3385 0316 72656738 		.ascii	"reg8\000"
 3385      00
 3386              	.LASF9:
 3387 031b 6C6F6E67 		.ascii	"long unsigned int\000"
 3387      20756E73 
 3387      69676E65 
 3387      6420696E 
 3387      7400
 3388              	.LASF28:
 3389 032d 44455343 		.ascii	"DESCENDING\000"
 3389      454E4449 
 3389      4E4700
 3390              	.LASF76:
 3391 0338 62797465 		.ascii	"bytes\000"
 3391      7300
 3392              	.LASF20:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 75


 3393 033e 646F7562 		.ascii	"double\000"
 3393      6C6500
 3394              	.LASF8:
 3395 0345 5F5F7569 		.ascii	"__uint32_t\000"
 3395      6E743332 
 3395      5F7400
 3396              	.LASF44:
 3397 0350 74656D70 		.ascii	"tempbuf\000"
 3397      62756600 
 3398              	.LASF6:
 3399 0358 5F5F696E 		.ascii	"__int32_t\000"
 3399      7433325F 
 3399      7400
 3400              	.LASF3:
 3401 0362 5F5F696E 		.ascii	"__int16_t\000"
 3401      7431365F 
 3401      7400
 3402              	.LASF46:
 3403 036c 64657363 		.ascii	"descendbuf\000"
 3403      656E6462 
 3403      756600
 3404              	.LASF23:
 3405 0377 73697A65 		.ascii	"sizetype\000"
 3405      74797065 
 3405      00
 3406              	.LASF69:
 3407 0380 53544154 		.ascii	"STATE\000"
 3407      4500
 3408              	.LASF38:
 3409 0386 74656D70 		.ascii	"temp_interrupt\000"
 3409      5F696E74 
 3409      65727275 
 3409      707400
 3410              	.LASF42:
 3411 0395 6F757470 		.ascii	"output\000"
 3411      757400
 3412              	.LASF65:
 3413 039c 636F6C6C 		.ascii	"collect_flag\000"
 3413      6563745F 
 3413      666C6167 
 3413      00
 3414              	.LASF37:
 3415 03a9 72785F69 		.ascii	"rx_interrupt\000"
 3415      6E746572 
 3415      72757074 
 3415      00
 3416              	.LASF57:
 3417 03b6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3417      52784275 
 3417      66666572 
 3417      00
 3418              	.LASF67:
 3419 03c3 77616974 		.ascii	"wait_flag\000"
 3419      5F666C61 
 3419      6700
 3420              	.LASF35:
 3421 03cd 53616D70 		.ascii	"Sample_ISR_Handler\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccVtWlAg.s 			page 76


 3421      6C655F49 
 3421      53525F48 
 3421      616E646C 
 3421      657200
 3422              	.LASF81:
 3423 03e0 66736669 		.ascii	"fsfile\000"
 3423      6C6500
 3424              	.LASF47:
 3425 03e7 6C616E64 		.ascii	"landedbuf\000"
 3425      65646275 
 3425      6600
 3426              	.LASF2:
 3427 03f1 5F5F7569 		.ascii	"__uint8_t\000"
 3427      6E74385F 
 3427      7400
 3428              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
