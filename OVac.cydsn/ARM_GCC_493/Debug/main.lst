ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	devAddr,1,1
  19              		.comm	buffer,22,4
  20              		.global	Addr
  21              		.data
  22              		.align	2
  23              		.type	Addr, %object
  24              		.size	Addr, 4
  25              	Addr:
  26 0000 3F000000 		.word	63
  27              		.global	id
  28              		.align	2
  29              		.type	id, %object
  30              		.size	id, 4
  31              	id:
  32 0004 01000000 		.word	1
  33              		.global	data_time
  34              		.bss
  35              		.align	2
  36              		.type	data_time, %object
  37              		.size	data_time, 4
  38              	data_time:
  39 0000 00000000 		.space	4
  40              		.global	sum
  41              		.align	2
  42              		.type	sum, %object
  43              		.size	sum, 4
  44              	sum:
  45 0004 00000000 		.space	4
  46              		.global	average
  47              		.align	1
  48              		.type	average, %object
  49              		.size	average, 2
  50              	average:
  51 0008 0000     		.space	2
  52              		.global	collect_flag
  53              		.type	collect_flag, %object
  54              		.size	collect_flag, 1
  55              	collect_flag:
  56 000a 00       		.space	1
  57              		.global	wait_flag
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 2


  58              		.type	wait_flag, %object
  59              		.size	wait_flag, 1
  60              	wait_flag:
  61 000b 00       		.space	1
  62              		.global	PANIC_flag
  63              		.type	PANIC_flag, %object
  64              		.size	PANIC_flag, 1
  65              	PANIC_flag:
  66 000c 00       		.space	1
  67              		.global	STATE
  68              		.data
  69              		.type	STATE, %object
  70              		.size	STATE, 1
  71              	STATE:
  72 0008 01       		.byte	1
  73              		.global	testnum
  74              		.type	testnum, %object
  75              		.size	testnum, 1
  76              	testnum:
  77 0009 01       		.byte	1
  78              		.global	countdown
  79              		.bss
  80              		.type	countdown, %object
  81              		.size	countdown, 1
  82              	countdown:
  83 000d 00       		.space	1
  84              		.global	update_Data
  85              		.type	update_Data, %object
  86              		.size	update_Data, 1
  87              	update_Data:
  88 000e 00       		.space	1
  89              		.global	RxBuffer
  90 000f 00       		.align	2
  91              		.type	RxBuffer, %object
  92              		.size	RxBuffer, 64
  93              	RxBuffer:
  94 0010 00000000 		.space	64
  94      00000000 
  94      00000000 
  94      00000000 
  94      00000000 
  95              		.global	msg_count
  96              		.align	2
  97              		.type	msg_count, %object
  98              		.size	msg_count, 4
  99              	msg_count:
 100 0050 00000000 		.space	4
 101              		.global	rxflag
 102              		.align	2
 103              		.type	rxflag, %object
 104              		.size	rxflag, 4
 105              	rxflag:
 106 0054 00000000 		.space	4
 107              		.global	bytes
 108              		.align	2
 109              		.type	bytes, %object
 110              		.size	bytes, 4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 3


 111              	bytes:
 112 0058 00000000 		.space	4
 113              		.global	dataflag
 114              		.align	2
 115              		.type	dataflag, %object
 116              		.size	dataflag, 4
 117              	dataflag:
 118 005c 00000000 		.space	4
 119              		.global	transmit_flag
 120              		.align	2
 121              		.type	transmit_flag, %object
 122              		.size	transmit_flag, 4
 123              	transmit_flag:
 124 0060 00000000 		.space	4
 125              		.global	file
 126              		.data
 127 000a 0000     		.align	2
 128              		.type	file, %object
 129              		.size	file, 11
 130              	file:
 131 000c 74657374 		.ascii	"test_1.txt\000"
 131      5F312E74 
 131      787400
 132              		.global	volume
 133 0017 00       		.bss
 134              		.align	2
 135              		.type	volume, %object
 136              		.size	volume, 10
 137              	volume:
 138 0064 00000000 		.space	10
 138      00000000 
 138      0000
 139              		.comm	fsfile,4,4
 140 006e 0000     		.section	.text.Moisture_ISR_Handler,"ax",%progbits
 141              		.align	2
 142              		.global	Moisture_ISR_Handler
 143              		.thumb
 144              		.thumb_func
 145              		.type	Moisture_ISR_Handler, %function
 146              	Moisture_ISR_Handler:
 147              	.LFB63:
 148              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 2.20
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   This is a source code for example project of ADC single ended mode.
   8:main.c        **** *
   9:main.c        **** *   Variable resistor(pot) is connected to +ve input of ADC using the I/O pin.
  10:main.c        **** *   P0.0. When voltage to positive terminal of ADC is 0, the output displayed
  11:main.c        **** *   on the LCD pannel is 0x0000. As voltage on positive terminal goes on
  12:main.c        **** *   increasing, the  converted value goes on increasing from 0x0000 and reaches
  13:main.c        **** *   0xFFFF when voltage becomes 1.024V. Futher increase in voltage value,
  14:main.c        **** *   doesn't cause any changes to values displayed in the LCD.
  15:main.c        **** *
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 4


  16:main.c        **** * Hardware Connections: 
  17:main.c        **** *  Connect analog input from Variable resistor to port P0[0] of DVK1 board.
  18:main.c        **** *
  19:main.c        **** ********************************************************************************
  20:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  21:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  22:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  23:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  24:main.c        **** * accompanying the software package from which you obtained this software.
  25:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  27:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  28:main.c        **** *******************************************************************************/
  29:main.c        **** 
  30:main.c        **** #include <project.h>
  31:main.c        **** #include <mpu6050.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include <string.h>
  34:main.c        **** #include <FS.h>
  35:main.c        **** #include "LiquidCrystal_I2C.h"
  36:main.c        **** #include "functions.h"
  37:main.c        **** 
  38:main.c        **** //#define MPU6050 
  39:main.c        **** //#define LCD
  40:main.c        **** //#define SD
  41:main.c        **** #define BT
  42:main.c        **** 
  43:main.c        **** #define MA_WINDOW 15                    // Number of samples in the moving average window.
  44:main.c        **** #define BOT_THRESHOLD 20000             // Z-Aacceleration threshold for transition into LANDED sta
  45:main.c        **** #define WAIT_TIME 1000                  // Number of ISR calls until transition into DESCENDING sta
  46:main.c        **** #define DATA_TIME 5000                  // Number of ISR calls until transition into WAIT_TO_LAUNCH
  47:main.c        **** #define BUFFER_LEN  64u                 // Buffer length for UART rx
  48:main.c        **** 
  49:main.c        **** 
  50:main.c        **** uint32_t Addr = 0x3F;                       // I2C address of LCD.
  51:main.c        **** long id = 1;                                // Interrupt count.
  52:main.c        **** long data_time = 0;                        // data point num
  53:main.c        **** 
  54:main.c        **** long sum = 0;                               // Sum of accelerometer values. 
  55:main.c        **** int16_t average = 0;                        // Moving average variable.
  56:main.c        **** bool collect_flag = 0;                      // flag indicating when to record acceleration sample.
  57:main.c        **** bool wait_flag = 0;                         // flag indicating when to increment interrupt counter.
  58:main.c        **** bool PANIC_flag = 0;                        // flag indicating water is present in housing.
  59:main.c        **** //bool first_test = 1;                        // flag indicating first test(longer countdown)
  60:main.c        **** STATES STATE = WAIT_TO_LAUNCH;         // Set initial state. 
  61:main.c        **** uint8_t testnum = 1, countdown = 0, update_Data = 0;
  62:main.c        **** uint8_t RxBuffer[BUFFER_LEN] = {};            // Rx Buffer
  63:main.c        **** int msg_count = 0, rxflag = 0, bytes = 0, dataflag = 0, transmit_flag = 0;    // UART variables
  64:main.c        **** char file[11] = "test_1.txt";
  65:main.c        **** char volume[10] = {};
  66:main.c        **** FS_FILE *fsfile;
  67:main.c        **** 
  68:main.c        **** /*******************************************************************************
  69:main.c        **** * Function Name: main
  70:main.c        **** ********************************************************************************
  71:main.c        **** *
  72:main.c        **** * Summary:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 5


  73:main.c        **** *  main() performs following functions:
  74:main.c        **** *  1: Initializes the LCD.
  75:main.c        **** *  2: Initializes timer module and sampling interrupt.
  76:main.c        **** *  3: Initializes MPU6050 Accelerometer/Gyroscope module.
  77:main.c        **** *  4: Samples Z-axis acceleration data from module @ 500hz.
  78:main.c        **** *  5: Computes moving average of Z-axis acceleration values.
  79:main.c        **** *  6: Transitions from DESCENDING to LANDED state when sudden acceleration occurs
  80:main.c        **** *     (ie. moving average > 200000).
  81:main.c        **** *
  82:main.c        **** * Parameters:
  83:main.c        **** *  None.
  84:main.c        **** *
  85:main.c        **** * Return:
  86:main.c        **** *  None.
  87:main.c        **** *
  88:main.c        **** *******************************************************************************/
  89:main.c        **** 
  90:main.c        **** 
  91:main.c        **** /* Moisture sensor ISR */
  92:main.c        **** CY_ISR (Moisture_ISR_Handler){
 149              		.loc 1 92 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
  93:main.c        ****     PANIC_flag = 1;                             // Set flag to indicate water
 159              		.loc 1 93 0
 160 0004 044B     		ldr	r3, .L2
 161 0006 0122     		movs	r2, #1
 162 0008 1A70     		strb	r2, [r3]
  94:main.c        ****     STATE = RESURFACE;                          // Go to surface
 163              		.loc 1 94 0
 164 000a 044B     		ldr	r3, .L2+4
 165 000c 0422     		movs	r2, #4
 166 000e 1A70     		strb	r2, [r3]
  95:main.c        ****     Comp_Stop();                                // Stop comparator for interrupt
 167              		.loc 1 95 0
 168 0010 FFF7FEFF 		bl	Comp_Stop
  96:main.c        **** }
 169              		.loc 1 96 0
 170 0014 80BD     		pop	{r7, pc}
 171              	.L3:
 172 0016 00BF     		.align	2
 173              	.L2:
 174 0018 00000000 		.word	PANIC_flag
 175 001c 00000000 		.word	STATE
 176              		.cfi_endproc
 177              	.LFE63:
 178              		.size	Moisture_ISR_Handler, .-Moisture_ISR_Handler
 179              		.section	.text.Sample_ISR_Handler,"ax",%progbits
 180              		.align	2
 181              		.global	Sample_ISR_Handler
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 6


 182              		.thumb
 183              		.thumb_func
 184              		.type	Sample_ISR_Handler, %function
 185              	Sample_ISR_Handler:
 186              	.LFB64:
  97:main.c        **** 
  98:main.c        **** /* Sampling ISR */
  99:main.c        **** CY_ISR (Sample_ISR_Handler){
 187              		.loc 1 99 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192 0000 80B4     		push	{r7}
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 7, -4
 195 0002 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 100:main.c        ****     
 101:main.c        ****     Sample_Timer_STATUS;                        // Clears interrupt by accessing timer status regis
 197              		.loc 1 101 0
 198 0004 084B     		ldr	r3, .L6
 199 0006 1B78     		ldrb	r3, [r3]
 102:main.c        ****     if (STATE == DESCENDING){ 
 200              		.loc 1 102 0
 201 0008 084B     		ldr	r3, .L6+4
 202 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 203 000c 022B     		cmp	r3, #2
 204 000e 07D1     		bne	.L4
 103:main.c        ****         collect_flag = 1;
 205              		.loc 1 103 0
 206 0010 074B     		ldr	r3, .L6+8
 207 0012 0122     		movs	r2, #1
 208 0014 1A70     		strb	r2, [r3]
 104:main.c        ****         data_time++;
 209              		.loc 1 104 0
 210 0016 074B     		ldr	r3, .L6+12
 211 0018 1B68     		ldr	r3, [r3]
 212 001a 0133     		adds	r3, r3, #1
 213 001c 054A     		ldr	r2, .L6+12
 214 001e 1360     		str	r3, [r2]
 215              	.L4:
 105:main.c        ****     }
 106:main.c        **** }
 216              		.loc 1 106 0
 217 0020 BD46     		mov	sp, r7
 218              		.cfi_def_cfa_register 13
 219              		@ sp needed
 220 0022 5DF8047B 		ldr	r7, [sp], #4
 221              		.cfi_restore 7
 222              		.cfi_def_cfa_offset 0
 223 0026 7047     		bx	lr
 224              	.L7:
 225              		.align	2
 226              	.L6:
 227 0028 034F0040 		.word	1073762051
 228 002c 00000000 		.word	STATE
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 7


 229 0030 00000000 		.word	collect_flag
 230 0034 00000000 		.word	data_time
 231              		.cfi_endproc
 232              	.LFE64:
 233              		.size	Sample_ISR_Handler, .-Sample_ISR_Handler
 234              		.section	.text.Countdown_ISR_Handler,"ax",%progbits
 235              		.align	2
 236              		.global	Countdown_ISR_Handler
 237              		.thumb
 238              		.thumb_func
 239              		.type	Countdown_ISR_Handler, %function
 240              	Countdown_ISR_Handler:
 241              	.LFB65:
 107:main.c        **** 
 108:main.c        **** /* Countdown ISR*/
 109:main.c        **** CY_ISR (Countdown_ISR_Handler){
 242              		.loc 1 109 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 80B4     		push	{r7}
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 7, -4
 250 0002 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 110:main.c        ****     
 111:main.c        ****     Countdown_timer_STATUS;                        // Clears interrupt by accessing timer status re
 252              		.loc 1 111 0
 253 0004 194B     		ldr	r3, .L13
 254 0006 1B78     		ldrb	r3, [r3]
 112:main.c        ****     if (STATE == WAIT_TO_LAUNCH){ 
 255              		.loc 1 112 0
 256 0008 194B     		ldr	r3, .L13+4
 257 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258 000c 012B     		cmp	r3, #1
 259 000e 09D1     		bne	.L9
 113:main.c        ****         wait_flag = 1;
 260              		.loc 1 113 0
 261 0010 184B     		ldr	r3, .L13+8
 262 0012 0122     		movs	r2, #1
 263 0014 1A70     		strb	r2, [r3]
 114:main.c        ****         countdown++;
 264              		.loc 1 114 0
 265 0016 184B     		ldr	r3, .L13+12
 266 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 267 001a 0133     		adds	r3, r3, #1
 268 001c DAB2     		uxtb	r2, r3
 269 001e 164B     		ldr	r3, .L13+12
 270 0020 1A70     		strb	r2, [r3]
 271 0022 06E0     		b	.L10
 272              	.L9:
 115:main.c        ****     }
 116:main.c        ****     else  if (STATE == DESCENDING){
 273              		.loc 1 116 0
 274 0024 124B     		ldr	r3, .L13+4
 275 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 8


 276 0028 022B     		cmp	r3, #2
 277 002a 02D1     		bne	.L10
 117:main.c        ****         wait_flag = 1;
 278              		.loc 1 117 0
 279 002c 114B     		ldr	r3, .L13+8
 280 002e 0122     		movs	r2, #1
 281 0030 1A70     		strb	r2, [r3]
 282              	.L10:
 118:main.c        ****     }
 119:main.c        ****     #ifdef BT
 120:main.c        ****         if (STATE == TRANSMIT || STATE == WAIT_TO_LAUNCH){
 283              		.loc 1 120 0
 284 0032 0F4B     		ldr	r3, .L13+4
 285 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 286 0036 052B     		cmp	r3, #5
 287 0038 03D0     		beq	.L11
 288              		.loc 1 120 0 is_stmt 0 discriminator 1
 289 003a 0D4B     		ldr	r3, .L13+4
 290 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 291 003e 012B     		cmp	r3, #1
 292 0040 0FD1     		bne	.L8
 293              	.L11:
 121:main.c        ****             update_Data++;
 294              		.loc 1 121 0 is_stmt 1
 295 0042 0E4B     		ldr	r3, .L13+16
 296 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 297 0046 0133     		adds	r3, r3, #1
 298 0048 DAB2     		uxtb	r2, r3
 299 004a 0C4B     		ldr	r3, .L13+16
 300 004c 1A70     		strb	r2, [r3]
 122:main.c        ****             if (update_Data == 4){
 301              		.loc 1 122 0
 302 004e 0B4B     		ldr	r3, .L13+16
 303 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 304 0052 042B     		cmp	r3, #4
 305 0054 05D1     		bne	.L8
 123:main.c        ****                 transmit_flag = 1;
 306              		.loc 1 123 0
 307 0056 0A4B     		ldr	r3, .L13+20
 308 0058 0122     		movs	r2, #1
 309 005a 1A60     		str	r2, [r3]
 124:main.c        ****                 update_Data = 0;
 310              		.loc 1 124 0
 311 005c 074B     		ldr	r3, .L13+16
 312 005e 0022     		movs	r2, #0
 313 0060 1A70     		strb	r2, [r3]
 314              	.L8:
 125:main.c        ****             }
 126:main.c        ****         }
 127:main.c        ****             
 128:main.c        ****     #endif
 129:main.c        **** }
 315              		.loc 1 129 0
 316 0062 BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 0064 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 9


 320              		.cfi_restore 7
 321              		.cfi_def_cfa_offset 0
 322 0068 7047     		bx	lr
 323              	.L14:
 324 006a 00BF     		.align	2
 325              	.L13:
 326 006c 6B640040 		.word	1073767531
 327 0070 00000000 		.word	STATE
 328 0074 00000000 		.word	wait_flag
 329 0078 00000000 		.word	countdown
 330 007c 00000000 		.word	update_Data
 331 0080 00000000 		.word	transmit_flag
 332              		.cfi_endproc
 333              	.LFE65:
 334              		.size	Countdown_ISR_Handler, .-Countdown_ISR_Handler
 335              		.section	.text.rx_interrupt,"ax",%progbits
 336              		.align	2
 337              		.global	rx_interrupt
 338              		.thumb
 339              		.thumb_func
 340              		.type	rx_interrupt, %function
 341              	rx_interrupt:
 342              	.LFB66:
 130:main.c        **** 
 131:main.c        **** CY_ISR(rx_interrupt){
 343              		.loc 1 131 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347 0000 98B5     		push	{r3, r4, r7, lr}
 348              		.cfi_def_cfa_offset 16
 349              		.cfi_offset 3, -16
 350              		.cfi_offset 4, -12
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 132:main.c        ****     while (UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 355              		.loc 1 132 0
 356 0004 14E0     		b	.L16
 357              	.L17:
 133:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 358              		.loc 1 133 0
 359 0006 0E4B     		ldr	r3, .L18
 360 0008 1C68     		ldr	r4, [r3]
 361 000a 631C     		adds	r3, r4, #1
 362 000c 0C4A     		ldr	r2, .L18
 363 000e 1360     		str	r3, [r2]
 364 0010 FFF7FEFF 		bl	UART_GetChar
 365 0014 0346     		mov	r3, r0
 366 0016 1A46     		mov	r2, r3
 367 0018 0A4B     		ldr	r3, .L18+4
 368 001a 1A55     		strb	r2, [r3, r4]
 134:main.c        ****         if ((msg_count - 3) == bytes)
 369              		.loc 1 134 0
 370 001c 084B     		ldr	r3, .L18
 371 001e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 10


 372 0020 DA1E     		subs	r2, r3, #3
 373 0022 094B     		ldr	r3, .L18+8
 374 0024 1B68     		ldr	r3, [r3]
 375 0026 9A42     		cmp	r2, r3
 376 0028 02D1     		bne	.L16
 135:main.c        ****             rxflag = 1;
 377              		.loc 1 135 0
 378 002a 084B     		ldr	r3, .L18+12
 379 002c 0122     		movs	r2, #1
 380 002e 1A60     		str	r2, [r3]
 381              	.L16:
 132:main.c        ****         RxBuffer[msg_count++] = UART_GetChar();
 382              		.loc 1 132 0
 383 0030 FFF7FEFF 		bl	UART_ReadRxStatus
 384 0034 0346     		mov	r3, r0
 385 0036 03F02003 		and	r3, r3, #32
 386 003a 002B     		cmp	r3, #0
 387 003c E3D1     		bne	.L17
 136:main.c        ****     }
 137:main.c        **** }
 388              		.loc 1 137 0
 389 003e 98BD     		pop	{r3, r4, r7, pc}
 390              	.L19:
 391              		.align	2
 392              	.L18:
 393 0040 00000000 		.word	msg_count
 394 0044 00000000 		.word	RxBuffer
 395 0048 00000000 		.word	bytes
 396 004c 00000000 		.word	rxflag
 397              		.cfi_endproc
 398              	.LFE66:
 399              		.size	rx_interrupt, .-rx_interrupt
 400              		.global	__aeabi_i2f
 401              		.global	__aeabi_f2d
 402              		.global	__aeabi_dmul
 403              		.global	__aeabi_d2f
 404              		.global	__aeabi_f2iz
 405              		.global	__aeabi_fsub
 406              		.global	__aeabi_fmul
 407              		.section	.rodata
 408              		.align	2
 409              	.LC1:
 410 0000 57415445 		.ascii	"WATER DETECTED\000"
 410      52204445 
 410      54454354 
 410      454400
 411 000f 00       		.align	2
 412              	.LC0:
 413 0010 53595354 		.ascii	"SYSTEM_CHECK  \000"
 413      454D5F43 
 413      4845434B 
 413      202000
 414 001f 00       		.section	.text.main,"ax",%progbits
 415              		.align	2
 416              		.global	main
 417              		.thumb
 418              		.thumb_func
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 11


 419              		.type	main, %function
 420              	main:
 421              	.LFB67:
 138:main.c        **** 
 139:main.c        **** int main()
 140:main.c        **** {
 422              		.loc 1 140 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 184
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 90B5     		push	{r4, r7, lr}
 427              		.cfi_def_cfa_offset 12
 428              		.cfi_offset 4, -12
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 AFB0     		sub	sp, sp, #188
 432              		.cfi_def_cfa_offset 200
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 141:main.c        ****     LED2_1_Write(1); 
 435              		.loc 1 141 0
 436 0006 0120     		movs	r0, #1
 437 0008 FFF7FEFF 		bl	LED2_1_Write
 142:main.c        ****     float output;
 143:main.c        ****     char buf[50];                               // just to hold text values in for writing to UART
 144:main.c        ****     
 145:main.c        ****     char curState[14] = "SYSTEM_CHECK  ";
 438              		.loc 1 145 0
 439 000c 9C4B     		ldr	r3, .L45+8
 440 000e 07F15804 		add	r4, r7, #88
 441 0012 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 442 0014 07C4     		stmia	r4!, {r0, r1, r2}
 443 0016 2380     		strh	r3, [r4]	@ movhi
 146:main.c        ****     int16_t ax, ay, az, i;
 147:main.c        ****     //int16_t gx, gy, gz;
 148:main.c        ****     int16_t z_offset = 0;
 444              		.loc 1 148 0
 445 0018 0023     		movs	r3, #0
 446 001a A7F8B630 		strh	r3, [r7, #182]	@ movhi
 149:main.c        ****     int tens = 0, ones = 0;                     // digit place variables for message len of bluetoo
 447              		.loc 1 149 0
 448 001e 0023     		movs	r3, #0
 449 0020 7B65     		str	r3, [r7, #84]
 450 0022 0023     		movs	r3, #0
 451 0024 C7F8B030 		str	r3, [r7, #176]
 150:main.c        ****     
 151:main.c        ****     /* Start the components */
 152:main.c        ****     CYGlobalIntEnable;                          // enable global interrupts
 452              		.loc 1 152 0
 453              	@ 152 "main.c" 1
 454 0028 62B6     		CPSIE   i
 455              	@ 0 "" 2
 153:main.c        ****     //I2C_Master_Start(); 
 154:main.c        ****     //ADC_Start();
 155:main.c        ****     Sample_Timer_Start();                       // start timer module
 456              		.loc 1 155 0
 457              		.thumb
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 12


 458 002a FFF7FEFF 		bl	Sample_Timer_Start
 156:main.c        ****     Sample_ISR_StartEx(Sample_ISR_Handler);     // reference ISR function
 459              		.loc 1 156 0
 460 002e 9548     		ldr	r0, .L45+12
 461 0030 FFF7FEFF 		bl	Sample_ISR_StartEx
 157:main.c        ****     rx_interrupt_StartEx(rx_interrupt);
 462              		.loc 1 157 0
 463 0034 9448     		ldr	r0, .L45+16
 464 0036 FFF7FEFF 		bl	rx_interrupt_StartEx
 158:main.c        ****     //moisture_isr_StartEx(Moisture_ISR_Handler); // moisture isr start
 159:main.c        ****     //Comp_Start();                               // comparator for moisture start
 160:main.c        ****     UART_Start();
 465              		.loc 1 160 0
 466 003a FFF7FEFF 		bl	UART_Start
 161:main.c        ****     
 162:main.c        ****     
 163:main.c        ****     #ifdef LCD
 164:main.c        ****         LiquidCrystal_I2C_init(Addr,16,2,0);        // initialize I2C communication with LCD
 165:main.c        ****         begin(); 
 166:main.c        ****     
 167:main.c        ****     #endif
 168:main.c        ****    
 169:main.c        ****     /* initialize MPU6050 */
 170:main.c        ****     #ifdef MPU6050
 171:main.c        ****         MPU6050_init();    
 172:main.c        **** 	    MPU6050_initialize(); 
 173:main.c        ****     #endif
 174:main.c        ****         
 175:main.c        ****     #ifdef LCD
 176:main.c        ****         /* Startup Display */
 177:main.c        ****         LCD_print("PSoC 5LP: O-Vac");
 178:main.c        ****         setCursor(0,1);
 179:main.c        ****         LCD_print("I2C Working");
 180:main.c        ****         
 181:main.c        ****         CyDelay(1000u);   
 182:main.c        ****         clear();
 183:main.c        ****     #endif
 184:main.c        ****     
 185:main.c        ****     /* Start the ADC conversion */
 186:main.c        ****     ADC_StartConvert();
 467              		.loc 1 186 0
 468 003e FFF7FEFF 		bl	ADC_StartConvert
 187:main.c        **** 
 188:main.c        ****     /* Start SD card*/
 189:main.c        ****     #ifdef SD
 190:main.c        ****         {
 191:main.c        ****             FS_Init();
 192:main.c        ****             FS_Mount(volume);
 193:main.c        ****             if(0 != FS_GetVolumeName(0u, volume, 9u))
 194:main.c        ****                 /* Getting volume name succeeded so prompt it on the LCD */
 195:main.c        ****                 LCD_print("Sd vol succeed");
 196:main.c        ****             else
 197:main.c        ****                 LCD_print("Sd vol failed");
 198:main.c        ****                 
 199:main.c        ****             CyDelay(500u);
 200:main.c        ****             clear();
 201:main.c        ****             if(0 == FS_FormatSD(volume))
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 13


 202:main.c        ****                 LCD_print("format Succeeded");
 203:main.c        ****             else
 204:main.c        ****                 LCD_print("format Failed");
 205:main.c        ****           
 206:main.c        ****             CyDelay(500u);
 207:main.c        ****             clear();
 208:main.c        ****             
 209:main.c        ****             fsfile = FS_FOpen(file, "w");
 210:main.c        ****             if(fsfile)
 211:main.c        ****             {
 212:main.c        ****                 /* Indicate successful file creation message */
 213:main.c        ****                 LCD_print("File ");
 214:main.c        ****                 LCD_print("was opened");
 215:main.c        ****                 /* Need some delay to indicate output on the LCD */
 216:main.c        ****                 CyDelay(500u);
 217:main.c        ****                 clear();
 218:main.c        ****                 
 219:main.c        ****                 if(0 != FS_Write(fsfile, file, strlen(file))) 
 220:main.c        ****                     /* Inditate that data was written to a file */
 221:main.c        ****                     LCD_print("written to file");
 222:main.c        ****                 else
 223:main.c        ****                     LCD_print("Failed to write");
 224:main.c        ****                     clear();
 225:main.c        ****                 CyDelay(500u);
 226:main.c        ****             }
 227:main.c        ****             else
 228:main.c        ****                 LCD_print("file not created");
 229:main.c        ****         }
 230:main.c        ****         FS_Write(fsfile, "\n------------\n", 14);
 231:main.c        ****     #endif
 232:main.c        ****     
 233:main.c        ****     #ifdef LCD
 234:main.c        ****         /* Display the current State */
 235:main.c        ****         setCursor(0,0);    
 236:main.c        ****         LCD_print(curState);
 237:main.c        ****     #endif
 238:main.c        ****     
 239:main.c        ****     
 240:main.c        ****     Countdown_timer_Start();
 469              		.loc 1 240 0
 470 0042 FFF7FEFF 		bl	Countdown_timer_Start
 241:main.c        ****     countdown_StartEx(Countdown_ISR_Handler);
 471              		.loc 1 241 0
 472 0046 9148     		ldr	r0, .L45+20
 473 0048 FFF7FEFF 		bl	countdown_StartEx
 242:main.c        ****     int num = 0, decimals = 0;
 474              		.loc 1 242 0
 475 004c 0023     		movs	r3, #0
 476 004e C7F8AC30 		str	r3, [r7, #172]
 477 0052 0023     		movs	r3, #0
 478 0054 C7F8A830 		str	r3, [r7, #168]
 243:main.c        ****     float voltage = 0, temp = 0;
 479              		.loc 1 243 0
 480 0058 4FF00003 		mov	r3, #0
 481 005c C7F8A430 		str	r3, [r7, #164]	@ float
 482 0060 4FF00003 		mov	r3, #0
 483 0064 C7F8A030 		str	r3, [r7, #160]	@ float
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 14


 484              	.L43:
 244:main.c        ****     
 245:main.c        ****     
 246:main.c        ****     for(;;)
 247:main.c        ****     { 
 248:main.c        ****           
 249:main.c        ****         if(ADC_IsEndConversion(ADC_RETURN_STATUS))
 485              		.loc 1 249 0
 486 0068 0120     		movs	r0, #1
 487 006a FFF7FEFF 		bl	ADC_IsEndConversion
 488 006e 0346     		mov	r3, r0
 489 0070 002B     		cmp	r3, #0
 490 0072 42D0     		beq	.L21
 491              	.LBB2:
 250:main.c        ****         {
 251:main.c        ****             char pressure[50];
 252:main.c        ****             output = ADC_GetResult32();
 492              		.loc 1 252 0
 493 0074 FFF7FEFF 		bl	ADC_GetResult32
 494 0078 0346     		mov	r3, r0
 495 007a 1846     		mov	r0, r3
 496 007c FFF7FEFF 		bl	__aeabi_i2f
 497 0080 0346     		mov	r3, r0
 498 0082 C7F89C30 		str	r3, [r7, #156]	@ float
 253:main.c        ****             
 254:main.c        ****             setCursor(0, 1);
 499              		.loc 1 254 0
 500 0086 0020     		movs	r0, #0
 501 0088 0121     		movs	r1, #1
 502 008a FFF7FEFF 		bl	setCursor
 255:main.c        ****             voltage = output * (3.32 / 4096);
 503              		.loc 1 255 0
 504 008e D7F89C00 		ldr	r0, [r7, #156]	@ float
 505 0092 FFF7FEFF 		bl	__aeabi_f2d
 506 0096 0246     		mov	r2, r0
 507 0098 0B46     		mov	r3, r1
 508 009a 1046     		mov	r0, r2
 509 009c 1946     		mov	r1, r3
 510 009e 76A3     		adr	r3, .L45
 511 00a0 D3E90023 		ldrd	r2, [r3]
 512 00a4 FFF7FEFF 		bl	__aeabi_dmul
 513 00a8 0246     		mov	r2, r0
 514 00aa 0B46     		mov	r3, r1
 515 00ac 1046     		mov	r0, r2
 516 00ae 1946     		mov	r1, r3
 517 00b0 FFF7FEFF 		bl	__aeabi_d2f
 518 00b4 0346     		mov	r3, r0
 519 00b6 C7F8A430 		str	r3, [r7, #164]	@ float
 256:main.c        ****             num = voltage;
 520              		.loc 1 256 0
 521 00ba D7F8A400 		ldr	r0, [r7, #164]	@ float
 522 00be FFF7FEFF 		bl	__aeabi_f2iz
 523 00c2 0346     		mov	r3, r0
 524 00c4 C7F8AC30 		str	r3, [r7, #172]
 257:main.c        ****             temp = voltage - num;
 525              		.loc 1 257 0
 526 00c8 D7F8AC00 		ldr	r0, [r7, #172]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 15


 527 00cc FFF7FEFF 		bl	__aeabi_i2f
 528 00d0 0346     		mov	r3, r0
 529 00d2 D7F8A400 		ldr	r0, [r7, #164]	@ float
 530 00d6 1946     		mov	r1, r3
 531 00d8 FFF7FEFF 		bl	__aeabi_fsub
 532 00dc 0346     		mov	r3, r0
 533 00de C7F8A030 		str	r3, [r7, #160]	@ float
 258:main.c        ****             decimals = temp * 10000;
 534              		.loc 1 258 0
 535 00e2 D7F8A000 		ldr	r0, [r7, #160]	@ float
 536 00e6 6A49     		ldr	r1, .L45+24
 537 00e8 FFF7FEFF 		bl	__aeabi_fmul
 538 00ec 0346     		mov	r3, r0
 539 00ee 1846     		mov	r0, r3
 540 00f0 FFF7FEFF 		bl	__aeabi_f2iz
 541 00f4 0346     		mov	r3, r0
 542 00f6 C7F8A830 		str	r3, [r7, #168]
 543              	.L21:
 544              	.LBE2:
 259:main.c        ****             #ifdef SD
 260:main.c        **** //                
 261:main.c        ****             #endif
 262:main.c        ****             
 263:main.c        ****         }
 264:main.c        ****         
 265:main.c        ****     /* Bluetooth message response*/
 266:main.c        ****     #ifdef BT
 267:main.c        ****         if (msg_count == 2){
 545              		.loc 1 267 0
 546 00fa 664B     		ldr	r3, .L45+28
 547 00fc 1B68     		ldr	r3, [r3]
 548 00fe 022B     		cmp	r3, #2
 549 0100 13D1     		bne	.L22
 268:main.c        ****             tens = RxBuffer[0] - 48;
 550              		.loc 1 268 0
 551 0102 654B     		ldr	r3, .L45+32
 552 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 553 0106 303B     		subs	r3, r3, #48
 554 0108 7B65     		str	r3, [r7, #84]
 269:main.c        ****             ones = RxBuffer[1] - 48;
 555              		.loc 1 269 0
 556 010a 634B     		ldr	r3, .L45+32
 557 010c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 558 010e 303B     		subs	r3, r3, #48
 559 0110 C7F8B030 		str	r3, [r7, #176]
 270:main.c        ****             bytes = (tens * 10) + ones;
 560              		.loc 1 270 0
 561 0114 7A6D     		ldr	r2, [r7, #84]
 562 0116 1346     		mov	r3, r2
 563 0118 9B00     		lsls	r3, r3, #2
 564 011a 1344     		add	r3, r3, r2
 565 011c 5B00     		lsls	r3, r3, #1
 566 011e 1A46     		mov	r2, r3
 567 0120 D7F8B030 		ldr	r3, [r7, #176]
 568 0124 1344     		add	r3, r3, r2
 569 0126 5D4A     		ldr	r2, .L45+36
 570 0128 1360     		str	r3, [r2]
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 16


 571              	.L22:
 271:main.c        ****         } 
 272:main.c        ****         
 273:main.c        ****         if(rxflag) {
 572              		.loc 1 273 0
 573 012a 5D4B     		ldr	r3, .L45+40
 574 012c 1B68     		ldr	r3, [r3]
 575 012e 002B     		cmp	r3, #0
 576 0130 2FD0     		beq	.L23
 577              	.LBB3:
 274:main.c        ****             char temp[20] = {};
 578              		.loc 1 274 0
 579 0132 07F14003 		add	r3, r7, #64
 580 0136 0022     		movs	r2, #0
 581 0138 1A60     		str	r2, [r3]
 582 013a 0433     		adds	r3, r3, #4
 583 013c 0022     		movs	r2, #0
 584 013e 1A60     		str	r2, [r3]
 585 0140 0433     		adds	r3, r3, #4
 586 0142 0022     		movs	r2, #0
 587 0144 1A60     		str	r2, [r3]
 588 0146 0433     		adds	r3, r3, #4
 589 0148 0022     		movs	r2, #0
 590 014a 1A60     		str	r2, [r3]
 591 014c 0433     		adds	r3, r3, #4
 592 014e 0022     		movs	r2, #0
 593 0150 1A60     		str	r2, [r3]
 594 0152 0433     		adds	r3, r3, #4
 275:main.c        ****             uint8_to_char(RxBuffer, &temp[0], 20);
 595              		.loc 1 275 0
 596 0154 07F14003 		add	r3, r7, #64
 597 0158 4F48     		ldr	r0, .L45+32
 598 015a 1946     		mov	r1, r3
 599 015c 1422     		movs	r2, #20
 600 015e FFF7FEFF 		bl	uint8_to_char
 276:main.c        ****             BT_Process(&temp[3], &STATE, bytes, &dataflag);
 601              		.loc 1 276 0
 602 0162 4E4B     		ldr	r3, .L45+36
 603 0164 1A68     		ldr	r2, [r3]
 604 0166 07F14003 		add	r3, r7, #64
 605 016a 0333     		adds	r3, r3, #3
 606 016c 1846     		mov	r0, r3
 607 016e 4D49     		ldr	r1, .L45+44
 608 0170 4D4B     		ldr	r3, .L45+48
 609 0172 FFF7FEFF 		bl	BT_Process
 277:main.c        ****             msg_count = 0; bytes = 0;
 610              		.loc 1 277 0
 611 0176 474B     		ldr	r3, .L45+28
 612 0178 0022     		movs	r2, #0
 613 017a 1A60     		str	r2, [r3]
 614 017c 474B     		ldr	r3, .L45+36
 615 017e 0022     		movs	r2, #0
 616 0180 1A60     		str	r2, [r3]
 278:main.c        ****             memset(RxBuffer, 0, BUFFER_LEN);
 617              		.loc 1 278 0
 618 0182 4548     		ldr	r0, .L45+32
 619 0184 0021     		movs	r1, #0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 17


 620 0186 4022     		movs	r2, #64
 621 0188 FFF7FEFF 		bl	memset
 279:main.c        ****             rxflag = 0;
 622              		.loc 1 279 0
 623 018c 444B     		ldr	r3, .L45+40
 624 018e 0022     		movs	r2, #0
 625 0190 1A60     		str	r2, [r3]
 626              	.L23:
 627              	.LBE3:
 280:main.c        ****         }
 281:main.c        ****     #endif
 282:main.c        ****     
 283:main.c        ****         /* Display Z-Acceleration */
 284:main.c        ****         //clear();
 285:main.c        ****         //az = MPU6050_getAccelerationZ();
 286:main.c        ****        // I2C_LCD_print(1,0, id ,0,average);                                //print Interrupt count
 287:main.c        ****         
 288:main.c        ****         /* State Machine */
 289:main.c        ****         switch (STATE){
 628              		.loc 1 289 0
 629 0192 444B     		ldr	r3, .L45+44
 630 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 0196 013B     		subs	r3, r3, #1
 632 0198 042B     		cmp	r3, #4
 633 019a 00F24D81 		bhi	.L44
 634 019e 01A2     		adr	r2, .L26
 635 01a0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 636              		.p2align 2
 637              	.L26:
 638 01a4 B9010000 		.word	.L25+1
 639 01a8 1D020000 		.word	.L27+1
 640 01ac 99030000 		.word	.L28+1
 641 01b0 D1030000 		.word	.L29+1
 642 01b4 03040000 		.word	.L30+1
 643              		.p2align 1
 644              	.L25:
 645              	.LBB4:
 290:main.c        ****     
 291:main.c        ****             case WAIT_TO_LAUNCH:
 292:main.c        ****                 id = 1;                                // Interrupt count.
 646              		.loc 1 292 0
 647 01b8 3C4B     		ldr	r3, .L45+52
 648 01ba 0122     		movs	r2, #1
 649 01bc 1A60     		str	r2, [r3]
 293:main.c        ****                 data_time = 0;                        // data point num
 650              		.loc 1 293 0
 651 01be 3C4B     		ldr	r3, .L45+56
 652 01c0 0022     		movs	r2, #0
 653 01c2 1A60     		str	r2, [r3]
 294:main.c        **** 
 295:main.c        ****                 sum = 0;                               // Sum of accelerometer values. 
 654              		.loc 1 295 0
 655 01c4 3B4B     		ldr	r3, .L45+60
 656 01c6 0022     		movs	r2, #0
 657 01c8 1A60     		str	r2, [r3]
 296:main.c        ****                 average = 0;                        // Moving average variable.
 658              		.loc 1 296 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 18


 659 01ca 3B4B     		ldr	r3, .L45+64
 660 01cc 0022     		movs	r2, #0
 661 01ce 1A80     		strh	r2, [r3]	@ movhi
 297:main.c        ****                 collect_flag = 0;                      // flag indicating when to record accelerati
 662              		.loc 1 297 0
 663 01d0 3A4B     		ldr	r3, .L45+68
 664 01d2 0022     		movs	r2, #0
 665 01d4 1A70     		strb	r2, [r3]
 298:main.c        ****                 wait_flag = 0;                         // flag indicating when to increment interru
 666              		.loc 1 298 0
 667 01d6 3A4B     		ldr	r3, .L45+72
 668 01d8 0022     		movs	r2, #0
 669 01da 1A70     		strb	r2, [r3]
 299:main.c        ****                 PANIC_flag = 0;                        // flag indicating water is present in housi
 670              		.loc 1 299 0
 671 01dc 394B     		ldr	r3, .L45+76
 672 01de 0022     		movs	r2, #0
 673 01e0 1A70     		strb	r2, [r3]
 300:main.c        ****                 //bool first_test = 1;                        // flag indicating first test(longer 
 301:main.c        ****                 testnum = 1, countdown = 0;
 674              		.loc 1 301 0
 675 01e2 394B     		ldr	r3, .L45+80
 676 01e4 0122     		movs	r2, #1
 677 01e6 1A70     		strb	r2, [r3]
 678 01e8 384B     		ldr	r3, .L45+84
 679 01ea 0022     		movs	r2, #0
 680 01ec 1A70     		strb	r2, [r3]
 302:main.c        ****                 if (transmit_flag){
 681              		.loc 1 302 0
 682 01ee 384B     		ldr	r3, .L45+88
 683 01f0 1B68     		ldr	r3, [r3]
 684 01f2 002B     		cmp	r3, #0
 685 01f4 09D0     		beq	.L31
 303:main.c        ****                     BT_Send(&RxBuffer[0], &STATE, 10, &tens); // Here, the STATE variable only matt
 686              		.loc 1 303 0
 687 01f6 07F15403 		add	r3, r7, #84
 688 01fa 2748     		ldr	r0, .L45+32
 689 01fc 2949     		ldr	r1, .L45+44
 690 01fe 0A22     		movs	r2, #10
 691 0200 FFF7FEFF 		bl	BT_Send
 304:main.c        ****                     transmit_flag = 0;
 692              		.loc 1 304 0
 693 0204 324B     		ldr	r3, .L45+88
 694 0206 0022     		movs	r2, #0
 695 0208 1A60     		str	r2, [r3]
 696              	.L31:
 305:main.c        ****                 }
 306:main.c        ****                 if(wait_flag == 1){
 697              		.loc 1 306 0
 698 020a 2D4B     		ldr	r3, .L45+72
 699 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 700 020e 002B     		cmp	r3, #0
 701 0210 03D0     		beq	.L32
 307:main.c        ****                     #ifdef LCD
 308:main.c        ****                         setCursor(0,0);
 309:main.c        ****                         clear();
 310:main.c        ****                         
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 19


 311:main.c        ****                         sprintf(buf, "T-minus %d seconds\n", (60 - countdown)); // countdown
 312:main.c        ****                         LCD_print(buf);
 313:main.c        ****                     #endif
 314:main.c        **** //                    if(countdown == 60){
 315:main.c        **** //                        STATE = DESCENDING;
 316:main.c        **** //                        #ifdef LCD
 317:main.c        **** //                            setCursor(0,0);
 318:main.c        **** //                            clear();
 319:main.c        **** //                            LCD_print("STATE: DESCENT");
 320:main.c        **** //                        #endif           
 321:main.c        **** //                        id=0;
 322:main.c        **** //                        data_time = 0;
 323:main.c        **** //                        countdown = 9;
 324:main.c        **** //                        LED2_Write(1);                                      // turn the LED off 
 325:main.c        **** //                    }
 326:main.c        ****                     wait_flag = 0; 
 702              		.loc 1 326 0
 703 0212 2B4B     		ldr	r3, .L45+72
 704 0214 0022     		movs	r2, #0
 705 0216 1A70     		strb	r2, [r3]
 327:main.c        ****                 }
 328:main.c        ****                 break;
 706              		.loc 1 328 0
 707 0218 0FE1     		b	.L33
 708              	.L32:
 709 021a 0EE1     		b	.L33
 710              	.L27:
 329:main.c        ****                 
 330:main.c        ****             case DESCENDING:
 331:main.c        ****                 STATE = TRANSMIT;
 711              		.loc 1 331 0
 712 021c 214B     		ldr	r3, .L45+44
 713 021e 0522     		movs	r2, #5
 714 0220 1A70     		strb	r2, [r3]
 332:main.c        ****                 if(collect_flag == 1){
 715              		.loc 1 332 0
 716 0222 264B     		ldr	r3, .L45+68
 717 0224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 718 0226 002B     		cmp	r3, #0
 719 0228 00F0A780 		beq	.L34
 333:main.c        ****                     
 334:main.c        ****                     if (id<MA_WINDOW){
 720              		.loc 1 334 0
 721 022c 1F4B     		ldr	r3, .L45+52
 722 022e 1B68     		ldr	r3, [r3]
 723 0230 0E2B     		cmp	r3, #14
 724 0232 07DC     		bgt	.L35
 335:main.c        ****                         sum += az;     
 725              		.loc 1 335 0
 726 0234 B7F99A20 		ldrsh	r2, [r7, #154]
 727 0238 1E4B     		ldr	r3, .L45+60
 728 023a 1B68     		ldr	r3, [r3]
 729 023c 1344     		add	r3, r3, r2
 730 023e 1D4A     		ldr	r2, .L45+60
 731 0240 1360     		str	r3, [r2]
 732 0242 57E0     		b	.L36
 733              	.L35:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 20


 336:main.c        ****                     }
 337:main.c        ****                     else if(id == MA_WINDOW){
 734              		.loc 1 337 0
 735 0244 194B     		ldr	r3, .L45+52
 736 0246 1B68     		ldr	r3, [r3]
 737 0248 0F2B     		cmp	r3, #15
 738 024a 45D1     		bne	.L37
 338:main.c        ****                         sum += az;
 739              		.loc 1 338 0
 740 024c B7F99A20 		ldrsh	r2, [r7, #154]
 741 0250 184B     		ldr	r3, .L45+60
 742 0252 1B68     		ldr	r3, [r3]
 743 0254 1344     		add	r3, r3, r2
 744 0256 174A     		ldr	r2, .L45+60
 745 0258 1360     		str	r3, [r2]
 339:main.c        ****                         average = sum/MA_WINDOW;                            //compute baseline aver
 746              		.loc 1 339 0
 747 025a 164B     		ldr	r3, .L45+60
 748 025c 1B68     		ldr	r3, [r3]
 749 025e 1D4A     		ldr	r2, .L45+92
 750 0260 82FB0312 		smull	r1, r2, r2, r3
 751 0264 1A44     		add	r2, r2, r3
 752 0266 D210     		asrs	r2, r2, #3
 753 0268 DB17     		asrs	r3, r3, #31
 754 026a D31A     		subs	r3, r2, r3
 755 026c 9AB2     		uxth	r2, r3
 756 026e 124B     		ldr	r3, .L45+64
 757 0270 1A80     		strh	r2, [r3]	@ movhi
 758 0272 3FE0     		b	.L36
 759              	.L46:
 760 0274 AFF30080 		.align	3
 761              	.L45:
 762 0278 8FC2F528 		.word	687194767
 763 027c 5C8F4A3F 		.word	1061850972
 764 0280 10000000 		.word	.LC0
 765 0284 00000000 		.word	Sample_ISR_Handler
 766 0288 00000000 		.word	rx_interrupt
 767 028c 00000000 		.word	Countdown_ISR_Handler
 768 0290 00401C46 		.word	1176256512
 769 0294 00000000 		.word	msg_count
 770 0298 00000000 		.word	RxBuffer
 771 029c 00000000 		.word	bytes
 772 02a0 00000000 		.word	rxflag
 773 02a4 00000000 		.word	STATE
 774 02a8 00000000 		.word	dataflag
 775 02ac 00000000 		.word	id
 776 02b0 00000000 		.word	data_time
 777 02b4 00000000 		.word	sum
 778 02b8 00000000 		.word	average
 779 02bc 00000000 		.word	collect_flag
 780 02c0 00000000 		.word	wait_flag
 781 02c4 00000000 		.word	PANIC_flag
 782 02c8 00000000 		.word	testnum
 783 02cc 00000000 		.word	countdown
 784 02d0 00000000 		.word	transmit_flag
 785 02d4 89888888 		.word	-2004318071
 786              	.L37:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 21


 340:main.c        ****                     }
 341:main.c        ****                     else{
 342:main.c        ****                         average = ComputeMA(average, MA_WINDOW, az);
 787              		.loc 1 342 0
 788 02d8 584B     		ldr	r3, .L47
 789 02da 1B88     		ldrh	r3, [r3]
 790 02dc 1AB2     		sxth	r2, r3
 791 02de B7F99A30 		ldrsh	r3, [r7, #154]
 792 02e2 1046     		mov	r0, r2
 793 02e4 0F21     		movs	r1, #15
 794 02e6 1A46     		mov	r2, r3
 795 02e8 FFF7FEFF 		bl	ComputeMA
 796 02ec 0346     		mov	r3, r0
 797 02ee 1A46     		mov	r2, r3
 798 02f0 524B     		ldr	r3, .L47
 799 02f2 1A80     		strh	r2, [r3]	@ movhi
 800              	.L36:
 343:main.c        ****                         /*sprintf(buf, "%d", average);
 344:main.c        ****                         setCursor(0,1);
 345:main.c        ****                         LCD_print(buf);*/
 346:main.c        ****                         
 347:main.c        ****                     }
 348:main.c        ****                     
 349:main.c        ****                     if(average > BOT_THRESHOLD){
 801              		.loc 1 349 0
 802 02f4 514B     		ldr	r3, .L47
 803 02f6 1B88     		ldrh	r3, [r3]
 804 02f8 1BB2     		sxth	r3, r3
 805 02fa 44F62062 		movw	r2, #20000
 806 02fe 9342     		cmp	r3, r2
 807 0300 1ADD     		ble	.L38
 808              	.LBB5:
 350:main.c        ****                         LED2_Write(0);
 809              		.loc 1 350 0
 810 0302 0020     		movs	r0, #0
 811 0304 FFF7FEFF 		bl	LED2_Write
 351:main.c        ****                         LED7_Write(1);                                          //turn LED on      
 812              		.loc 1 351 0
 813 0308 0120     		movs	r0, #1
 814 030a FFF7FEFF 		bl	LED7_Write
 352:main.c        ****                         STATE = LANDED;                                     //Switch to LANDED stat
 815              		.loc 1 352 0
 816 030e 4C4B     		ldr	r3, .L47+4
 817 0310 0322     		movs	r2, #3
 818 0312 1A70     		strb	r2, [r3]
 353:main.c        ****                         #ifdef LCD
 354:main.c        ****                             setCursor(0,0);
 355:main.c        ****                             clear();
 356:main.c        ****                             LCD_print("STATE: LANDED");  
 357:main.c        ****                         //I2C_LCD_print(1,0, id ,0,average);
 358:main.c        ****                         #endif
 359:main.c        ****                         char sdbuf[60] = {};
 819              		.loc 1 359 0
 820 0314 3B46     		mov	r3, r7
 821 0316 3C22     		movs	r2, #60
 822 0318 1846     		mov	r0, r3
 823 031a 0021     		movs	r1, #0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 22


 824 031c FFF7FEFF 		bl	memset
 360:main.c        ****                         #ifdef SD
 361:main.c        ****                             sprintf(sdbuf, "STATE: LANDED ***********\n");
 362:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 363:main.c        ****                         #endif
 364:main.c        ****                         id=0;                                                   //reset sample coun
 825              		.loc 1 364 0
 826 0320 484B     		ldr	r3, .L47+8
 827 0322 0022     		movs	r2, #0
 828 0324 1A60     		str	r2, [r3]
 365:main.c        ****                         data_time = 0;
 829              		.loc 1 365 0
 830 0326 484B     		ldr	r3, .L47+12
 831 0328 0022     		movs	r2, #0
 832 032a 1A60     		str	r2, [r3]
 366:main.c        ****                         sum = 0;
 833              		.loc 1 366 0
 834 032c 474B     		ldr	r3, .L47+16
 835 032e 0022     		movs	r2, #0
 836 0330 1A60     		str	r2, [r3]
 367:main.c        ****                         average = 0;                
 837              		.loc 1 367 0
 838 0332 424B     		ldr	r3, .L47
 839 0334 0022     		movs	r2, #0
 840 0336 1A80     		strh	r2, [r3]	@ movhi
 841              	.L38:
 842              	.LBE5:
 368:main.c        ****                     }
 369:main.c        ****                     id++;     
 843              		.loc 1 369 0
 844 0338 424B     		ldr	r3, .L47+8
 845 033a 1B68     		ldr	r3, [r3]
 846 033c 0133     		adds	r3, r3, #1
 847 033e 414A     		ldr	r2, .L47+8
 848 0340 1360     		str	r3, [r2]
 370:main.c        ****                     
 371:main.c        ****                     /*if desired amount of samples have been collected, switch states*/
 372:main.c        ****                     if(data_time >= DATA_TIME){
 849              		.loc 1 372 0
 850 0342 414B     		ldr	r3, .L47+12
 851 0344 1B68     		ldr	r3, [r3]
 852 0346 41F28732 		movw	r2, #4999
 853 034a 9342     		cmp	r3, r2
 854 034c 11DD     		ble	.L39
 373:main.c        ****                         LED2_Write(0);                                          //turn LED off
 855              		.loc 1 373 0
 856 034e 0020     		movs	r0, #0
 857 0350 FFF7FEFF 		bl	LED2_Write
 374:main.c        ****                                                             
 375:main.c        ****                         STATE = WAIT_TO_LAUNCH;                                //Switch to Waiting 
 858              		.loc 1 375 0
 859 0354 3A4B     		ldr	r3, .L47+4
 860 0356 0122     		movs	r2, #1
 861 0358 1A70     		strb	r2, [r3]
 376:main.c        ****                         #ifdef LCD
 377:main.c        ****                             setCursor(0,0);
 378:main.c        ****                             clear();
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 23


 379:main.c        ****                             LCD_print("STATE: WAIT");  
 380:main.c        ****                         #endif
 381:main.c        ****                         id=0;                                                  //reset sample count
 862              		.loc 1 381 0
 863 035a 3A4B     		ldr	r3, .L47+8
 864 035c 0022     		movs	r2, #0
 865 035e 1A60     		str	r2, [r3]
 382:main.c        ****                         data_time = 0;
 866              		.loc 1 382 0
 867 0360 394B     		ldr	r3, .L47+12
 868 0362 0022     		movs	r2, #0
 869 0364 1A60     		str	r2, [r3]
 383:main.c        ****                         sum = 0;                                               //reset sum 
 870              		.loc 1 383 0
 871 0366 394B     		ldr	r3, .L47+16
 872 0368 0022     		movs	r2, #0
 873 036a 1A60     		str	r2, [r3]
 384:main.c        ****                         average = 0;
 874              		.loc 1 384 0
 875 036c 334B     		ldr	r3, .L47
 876 036e 0022     		movs	r2, #0
 877 0370 1A80     		strh	r2, [r3]	@ movhi
 878              	.L39:
 385:main.c        ****                        
 386:main.c        ****                     }
 387:main.c        ****                     collect_flag = 0;
 879              		.loc 1 387 0
 880 0372 374B     		ldr	r3, .L47+20
 881 0374 0022     		movs	r2, #0
 882 0376 1A70     		strb	r2, [r3]
 883 0378 0DE0     		b	.L40
 884              	.L34:
 388:main.c        ****                 }
 389:main.c        ****                 else if(wait_flag == 1){
 885              		.loc 1 389 0
 886 037a 364B     		ldr	r3, .L47+24
 887 037c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 037e 002B     		cmp	r3, #0
 889 0380 09D0     		beq	.L40
 890              	.LBB6:
 390:main.c        ****                        char sdbuf[60] = {};
 891              		.loc 1 390 0
 892 0382 3B46     		mov	r3, r7
 893 0384 3C22     		movs	r2, #60
 894 0386 1846     		mov	r0, r3
 895 0388 0021     		movs	r1, #0
 896 038a FFF7FEFF 		bl	memset
 391:main.c        ****                         #ifdef SD
 392:main.c        ****                             sprintf(sdbuf, "pressure: %d.%04d, %d\n", num, decimals, (int16)output)
 393:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));                           
 394:main.c        ****                         #endif 
 395:main.c        ****                         wait_flag = 0;
 897              		.loc 1 395 0
 898 038e 314B     		ldr	r3, .L47+24
 899 0390 0022     		movs	r2, #0
 900 0392 1A70     		strb	r2, [r3]
 901              	.LBE6:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 24


 396:main.c        ****                 }
 397:main.c        ****                 break;
 902              		.loc 1 397 0
 903 0394 51E0     		b	.L33
 904              	.L40:
 905              		.loc 1 397 0 is_stmt 0 discriminator 2
 906 0396 50E0     		b	.L33
 907              	.L28:
 398:main.c        ****                 
 399:main.c        ****                 case LANDED:
 400:main.c        ****                     CyDelay(5000u);
 908              		.loc 1 400 0 is_stmt 1
 909 0398 41F28830 		movw	r0, #5000
 910 039c FFF7FEFF 		bl	CyDelay
 401:main.c        ****                     Solenoid_1_Write(1); //turn on solenoid 1
 911              		.loc 1 401 0
 912 03a0 0120     		movs	r0, #1
 913 03a2 FFF7FEFF 		bl	Solenoid_1_Write
 402:main.c        ****                     #ifdef LCD
 403:main.c        ****                         setCursor(0,0);
 404:main.c        ****                         clear();
 405:main.c        ****                         LCD_print("VACUUMING");  
 406:main.c        ****                     #endif
 407:main.c        ****                     char sdbuf[60] = {};
 914              		.loc 1 407 0
 915 03a6 3B46     		mov	r3, r7
 916 03a8 3C22     		movs	r2, #60
 917 03aa 1846     		mov	r0, r3
 918 03ac 0021     		movs	r1, #0
 919 03ae FFF7FEFF 		bl	memset
 408:main.c        ****                     #ifdef SD
 409:main.c        ****                             memset(sdbuf, 0, 40);
 410:main.c        ****                             sprintf(sdbuf, "STATE: VACUUMING ***********\n");
 411:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 412:main.c        ****                     #endif
 413:main.c        ****                     CyDelay(7000u);
 920              		.loc 1 413 0
 921 03b2 41F65830 		movw	r0, #7000
 922 03b6 FFF7FEFF 		bl	CyDelay
 414:main.c        ****                     Solenoid_1_Write(0); //turn off soleniod 1
 923              		.loc 1 414 0
 924 03ba 0020     		movs	r0, #0
 925 03bc FFF7FEFF 		bl	Solenoid_1_Write
 415:main.c        ****                     CyDelay(5000u);
 926              		.loc 1 415 0
 927 03c0 41F28830 		movw	r0, #5000
 928 03c4 FFF7FEFF 		bl	CyDelay
 416:main.c        ****                     STATE = RESURFACE;
 929              		.loc 1 416 0
 930 03c8 1D4B     		ldr	r3, .L47+4
 931 03ca 0422     		movs	r2, #4
 932 03cc 1A70     		strb	r2, [r3]
 417:main.c        ****                     #ifdef LCD
 418:main.c        ****                         setCursor(0,0);
 419:main.c        ****                         clear();
 420:main.c        ****                         LCD_print("STATE: RESURFACING");  
 421:main.c        ****                     #endif
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 25


 422:main.c        ****                     #ifdef SD
 423:main.c        ****                             memset(sdbuf, 0, 40);
 424:main.c        ****                             sprintf(sdbuf, "STATE: RESURFACING ***********\n");
 425:main.c        ****                             FS_Write(fsfile, sdbuf, strlen(sdbuf));
 426:main.c        ****                     #endif
 427:main.c        ****                 break;
 933              		.loc 1 427 0
 934 03ce 34E0     		b	.L33
 935              	.L29:
 428:main.c        ****                 
 429:main.c        ****             case RESURFACE:
 430:main.c        ****                 //CyDelay(4000u);
 431:main.c        ****                 if (PANIC_flag)
 936              		.loc 1 431 0
 937 03d0 214B     		ldr	r3, .L47+28
 938 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939 03d4 002B     		cmp	r3, #0
 940 03d6 02D0     		beq	.L41
 432:main.c        ****                     LCD_print("WATER DETECTED");
 941              		.loc 1 432 0
 942 03d8 2048     		ldr	r0, .L47+32
 943 03da FFF7FEFF 		bl	LCD_print
 944              	.L41:
 433:main.c        ****                 Solenoid_2_Write(1); //turn on solendiod 2
 945              		.loc 1 433 0
 946 03de 0120     		movs	r0, #1
 947 03e0 FFF7FEFF 		bl	Solenoid_2_Write
 434:main.c        ****                 CyDelay(15000u);
 948              		.loc 1 434 0
 949 03e4 43F69820 		movw	r0, #15000
 950 03e8 FFF7FEFF 		bl	CyDelay
 435:main.c        ****                 Solenoid_2_Write(0); //turn off solenoid 2
 951              		.loc 1 435 0
 952 03ec 0020     		movs	r0, #0
 953 03ee FFF7FEFF 		bl	Solenoid_2_Write
 436:main.c        ****                 //check pressure sensor to confirm we are at the surface
 437:main.c        ****                 CyDelay(5000u);                                //wait 10 seconds to lift, for testi
 954              		.loc 1 437 0
 955 03f2 41F28830 		movw	r0, #5000
 956 03f6 FFF7FEFF 		bl	CyDelay
 438:main.c        ****                 STATE = TRANSMIT;
 957              		.loc 1 438 0
 958 03fa 114B     		ldr	r3, .L47+4
 959 03fc 0522     		movs	r2, #5
 960 03fe 1A70     		strb	r2, [r3]
 439:main.c        ****                 #ifdef LCD
 440:main.c        ****                     setCursor(0,0);
 441:main.c        ****                     clear();
 442:main.c        ****                     LCD_print("TRANSMIT");  
 443:main.c        ****                 #endif
 444:main.c        ****                 #ifdef SD
 445:main.c        ****                     memset(sdbuf, 0, 40);
 446:main.c        ****                     sprintf(sdbuf, "STATE: TRANSMIT ***********\n");
 447:main.c        ****                     FS_Write(fsfile, sdbuf, strlen(sdbuf));
 448:main.c        ****                 #endif
 449:main.c        ****                 break;
 961              		.loc 1 449 0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 26


 962 0400 1BE0     		b	.L33
 963              	.L30:
 450:main.c        ****             case TRANSMIT:
 451:main.c        ****                 LED2_Write(1);
 964              		.loc 1 451 0
 965 0402 0120     		movs	r0, #1
 966 0404 FFF7FEFF 		bl	LED2_Write
 452:main.c        ****                 LED7_Write(1);
 967              		.loc 1 452 0
 968 0408 0120     		movs	r0, #1
 969 040a FFF7FEFF 		bl	LED7_Write
 453:main.c        ****                 int t = 1;
 970              		.loc 1 453 0
 971 040e 0123     		movs	r3, #1
 972 0410 FB63     		str	r3, [r7, #60]
 454:main.c        ****                 if (transmit_flag){
 973              		.loc 1 454 0
 974 0412 134B     		ldr	r3, .L47+36
 975 0414 1B68     		ldr	r3, [r3]
 976 0416 002B     		cmp	r3, #0
 977 0418 09D0     		beq	.L42
 455:main.c        ****                     BT_Send(&RxBuffer[0], &STATE, 10, &t); // Here, the STATE variable only matters
 978              		.loc 1 455 0
 979 041a 07F13C03 		add	r3, r7, #60
 980 041e 1148     		ldr	r0, .L47+40
 981 0420 0749     		ldr	r1, .L47+4
 982 0422 0A22     		movs	r2, #10
 983 0424 FFF7FEFF 		bl	BT_Send
 456:main.c        ****                     transmit_flag = 0;
 984              		.loc 1 456 0
 985 0428 0D4B     		ldr	r3, .L47+36
 986 042a 0022     		movs	r2, #0
 987 042c 1A60     		str	r2, [r3]
 988              	.L42:
 457:main.c        ****                 }
 458:main.c        ****                 #ifdef SD                                   //close old file, open new one
 459:main.c        ****                     FS_FClose(fsfile);
 460:main.c        ****                     sprintf(file, "test%d.txt", ++testnum);
 461:main.c        ****                     fsfile = FS_FOpen(file, "w");
 462:main.c        ****                 #endif 
 463:main.c        ****                 CyDelay(15000u);
 989              		.loc 1 463 0
 990 042e 43F69820 		movw	r0, #15000
 991 0432 FFF7FEFF 		bl	CyDelay
 464:main.c        ****                 
 465:main.c        **** //            case LANDED:
 466:main.c        **** //                CyDelay(1000u);                             // delay a bit
 467:main.c        **** //                LED2_Write(1);                              // turn on other LED to indicate land
 468:main.c        **** //                STATE = WAIT_TO_LAUNCH;
 469:main.c        **** //                #ifdef LCD
 470:main.c        **** //                    setCursor(0,0);
 471:main.c        **** //                    clear();
 472:main.c        **** //                    LCD_print("STATE: WAIT");
 473:main.c        **** //                #endif 
 474:main.c        **** //                #ifdef SD                                   // close old file, open new one
 475:main.c        **** //                    FS_FClose(fsfile);
 476:main.c        **** //                    sprintf(file, "test%d.txt", ++testnum);
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 27


 477:main.c        **** //                    fsfile = FS_FOpen(file, "w");
 478:main.c        **** //                #endif 
 479:main.c        ****                 break;
 992              		.loc 1 479 0
 993 0436 00E0     		b	.L33
 994              	.L44:
 480:main.c        ****                 
 481:main.c        ****             default:
 482:main.c        ****                 break;
 995              		.loc 1 482 0
 996 0438 00BF     		nop
 997              	.L33:
 998              	.LBE4:
 483:main.c        ****         
 484:main.c        ****         
 485:main.c        ****         }
 486:main.c        ****         
 487:main.c        ****     }
 999              		.loc 1 487 0 discriminator 3
 1000 043a 15E6     		b	.L43
 1001              	.L48:
 1002              		.align	2
 1003              	.L47:
 1004 043c 00000000 		.word	average
 1005 0440 00000000 		.word	STATE
 1006 0444 00000000 		.word	id
 1007 0448 00000000 		.word	data_time
 1008 044c 00000000 		.word	sum
 1009 0450 00000000 		.word	collect_flag
 1010 0454 00000000 		.word	wait_flag
 1011 0458 00000000 		.word	PANIC_flag
 1012 045c 00000000 		.word	.LC1
 1013 0460 00000000 		.word	transmit_flag
 1014 0464 00000000 		.word	RxBuffer
 1015              		.cfi_endproc
 1016              	.LFE67:
 1017              		.size	main, .-main
 1018              		.text
 1019              	.Letext0:
 1020              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1021              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1022              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1023              		.file 5 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 1024              		.file 6 "functions.h"
 1025              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1026              		.file 8 "./mpu6050.h"
 1027              		.section	.debug_info,"",%progbits
 1028              	.Ldebug_info0:
 1029 0000 2A050000 		.4byte	0x52a
 1030 0004 0400     		.2byte	0x4
 1031 0006 00000000 		.4byte	.Ldebug_abbrev0
 1032 000a 04       		.byte	0x4
 1033 000b 01       		.uleb128 0x1
 1034 000c EB000000 		.4byte	.LASF70
 1035 0010 01       		.byte	0x1
 1036 0011 C8020000 		.4byte	.LASF71
 1037 0015 60020000 		.4byte	.LASF72
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 28


 1038 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1039 001d 00000000 		.4byte	0
 1040 0021 00000000 		.4byte	.Ldebug_line0
 1041 0025 02       		.uleb128 0x2
 1042 0026 01       		.byte	0x1
 1043 0027 06       		.byte	0x6
 1044 0028 D8010000 		.4byte	.LASF0
 1045 002c 03       		.uleb128 0x3
 1046 002d 8D010000 		.4byte	.LASF2
 1047 0031 02       		.byte	0x2
 1048 0032 1D       		.byte	0x1d
 1049 0033 37000000 		.4byte	0x37
 1050 0037 02       		.uleb128 0x2
 1051 0038 01       		.byte	0x1
 1052 0039 08       		.byte	0x8
 1053 003a B8010000 		.4byte	.LASF1
 1054 003e 03       		.uleb128 0x3
 1055 003f 13030000 		.4byte	.LASF3
 1056 0043 02       		.byte	0x2
 1057 0044 29       		.byte	0x29
 1058 0045 49000000 		.4byte	0x49
 1059 0049 02       		.uleb128 0x2
 1060 004a 02       		.byte	0x2
 1061 004b 05       		.byte	0x5
 1062 004c 92000000 		.4byte	.LASF4
 1063 0050 02       		.uleb128 0x2
 1064 0051 02       		.byte	0x2
 1065 0052 07       		.byte	0x7
 1066 0053 23020000 		.4byte	.LASF5
 1067 0057 03       		.uleb128 0x3
 1068 0058 09030000 		.4byte	.LASF6
 1069 005c 02       		.byte	0x2
 1070 005d 3F       		.byte	0x3f
 1071 005e 62000000 		.4byte	0x62
 1072 0062 02       		.uleb128 0x2
 1073 0063 04       		.byte	0x4
 1074 0064 05       		.byte	0x5
 1075 0065 3B020000 		.4byte	.LASF7
 1076 0069 03       		.uleb128 0x3
 1077 006a FE020000 		.4byte	.LASF8
 1078 006e 02       		.byte	0x2
 1079 006f 41       		.byte	0x41
 1080 0070 74000000 		.4byte	0x74
 1081 0074 02       		.uleb128 0x2
 1082 0075 04       		.byte	0x4
 1083 0076 07       		.byte	0x7
 1084 0077 D4020000 		.4byte	.LASF9
 1085 007b 02       		.uleb128 0x2
 1086 007c 08       		.byte	0x8
 1087 007d 05       		.byte	0x5
 1088 007e CC000000 		.4byte	.LASF10
 1089 0082 02       		.uleb128 0x2
 1090 0083 08       		.byte	0x8
 1091 0084 07       		.byte	0x7
 1092 0085 E4010000 		.4byte	.LASF11
 1093 0089 04       		.uleb128 0x4
 1094 008a 04       		.byte	0x4
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 29


 1095 008b 05       		.byte	0x5
 1096 008c 696E7400 		.ascii	"int\000"
 1097 0090 02       		.uleb128 0x2
 1098 0091 04       		.byte	0x4
 1099 0092 07       		.byte	0x7
 1100 0093 0E020000 		.4byte	.LASF12
 1101 0097 03       		.uleb128 0x3
 1102 0098 A7000000 		.4byte	.LASF13
 1103 009c 03       		.byte	0x3
 1104 009d 15       		.byte	0x15
 1105 009e 2C000000 		.4byte	0x2c
 1106 00a2 03       		.uleb128 0x3
 1107 00a3 4C020000 		.4byte	.LASF14
 1108 00a7 03       		.byte	0x3
 1109 00a8 20       		.byte	0x20
 1110 00a9 3E000000 		.4byte	0x3e
 1111 00ad 03       		.uleb128 0x3
 1112 00ae 44020000 		.4byte	.LASF15
 1113 00b2 03       		.byte	0x3
 1114 00b3 2C       		.byte	0x2c
 1115 00b4 57000000 		.4byte	0x57
 1116 00b8 03       		.uleb128 0x3
 1117 00b9 FB010000 		.4byte	.LASF16
 1118 00bd 03       		.byte	0x3
 1119 00be 2D       		.byte	0x2d
 1120 00bf 69000000 		.4byte	0x69
 1121 00c3 05       		.uleb128 0x5
 1122 00c4 54020000 		.4byte	.LASF17
 1123 00c8 04       		.byte	0x4
 1124 00c9 9201     		.2byte	0x192
 1125 00cb 37000000 		.4byte	0x37
 1126 00cf 02       		.uleb128 0x2
 1127 00d0 04       		.byte	0x4
 1128 00d1 04       		.byte	0x4
 1129 00d2 C1000000 		.4byte	.LASF18
 1130 00d6 02       		.uleb128 0x2
 1131 00d7 08       		.byte	0x8
 1132 00d8 04       		.byte	0x4
 1133 00d9 F7020000 		.4byte	.LASF19
 1134 00dd 02       		.uleb128 0x2
 1135 00de 01       		.byte	0x1
 1136 00df 08       		.byte	0x8
 1137 00e0 36020000 		.4byte	.LASF20
 1138 00e4 05       		.uleb128 0x5
 1139 00e5 CF020000 		.4byte	.LASF21
 1140 00e9 04       		.byte	0x4
 1141 00ea 3C02     		.2byte	0x23c
 1142 00ec F0000000 		.4byte	0xf0
 1143 00f0 06       		.uleb128 0x6
 1144 00f1 C3000000 		.4byte	0xc3
 1145 00f5 02       		.uleb128 0x2
 1146 00f6 04       		.byte	0x4
 1147 00f7 07       		.byte	0x7
 1148 00f8 1D030000 		.4byte	.LASF22
 1149 00fc 03       		.uleb128 0x3
 1150 00fd C6010000 		.4byte	.LASF23
 1151 0101 05       		.byte	0x5
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 30


 1152 0102 7E       		.byte	0x7e
 1153 0103 07010000 		.4byte	0x107
 1154 0107 07       		.uleb128 0x7
 1155 0108 C6010000 		.4byte	.LASF23
 1156 010c 08       		.uleb128 0x8
 1157 010d 04       		.byte	0x4
 1158 010e FC000000 		.4byte	0xfc
 1159 0112 02       		.uleb128 0x2
 1160 0113 08       		.byte	0x8
 1161 0114 04       		.byte	0x4
 1162 0115 9D010000 		.4byte	.LASF24
 1163 0119 09       		.uleb128 0x9
 1164 011a 36000000 		.4byte	.LASF32
 1165 011e 01       		.byte	0x1
 1166 011f 06       		.byte	0x6
 1167 0120 16       		.byte	0x16
 1168 0121 50010000 		.4byte	0x150
 1169 0125 0A       		.uleb128 0xa
 1170 0126 29000000 		.4byte	.LASF25
 1171 012a 00       		.sleb128 0
 1172 012b 0A       		.uleb128 0xa
 1173 012c A9010000 		.4byte	.LASF26
 1174 0130 01       		.sleb128 1
 1175 0131 0A       		.uleb128 0xa
 1176 0132 E6020000 		.4byte	.LASF27
 1177 0136 02       		.sleb128 2
 1178 0137 0A       		.uleb128 0xa
 1179 0138 63000000 		.4byte	.LASF28
 1180 013c 03       		.sleb128 3
 1181 013d 0A       		.uleb128 0xa
 1182 013e 00000000 		.4byte	.LASF29
 1183 0142 04       		.sleb128 4
 1184 0143 0A       		.uleb128 0xa
 1185 0144 E2000000 		.4byte	.LASF30
 1186 0148 05       		.sleb128 5
 1187 0149 0A       		.uleb128 0xa
 1188 014a 97010000 		.4byte	.LASF31
 1189 014e 06       		.sleb128 6
 1190 014f 00       		.byte	0
 1191 0150 03       		.uleb128 0x3
 1192 0151 36000000 		.4byte	.LASF32
 1193 0155 06       		.byte	0x6
 1194 0156 1E       		.byte	0x1e
 1195 0157 19010000 		.4byte	0x119
 1196 015b 0B       		.uleb128 0xb
 1197 015c 78000000 		.4byte	.LASF33
 1198 0160 01       		.byte	0x1
 1199 0161 5C       		.byte	0x5c
 1200 0162 00000000 		.4byte	.LFB63
 1201 0166 20000000 		.4byte	.LFE63-.LFB63
 1202 016a 01       		.uleb128 0x1
 1203 016b 9C       		.byte	0x9c
 1204 016c 0C       		.uleb128 0xc
 1205 016d 64030000 		.4byte	.LASF34
 1206 0171 01       		.byte	0x1
 1207 0172 63       		.byte	0x63
 1208 0173 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 31


 1209 0177 38000000 		.4byte	.LFE64-.LFB64
 1210 017b 01       		.uleb128 0x1
 1211 017c 9C       		.byte	0x9c
 1212 017d 0C       		.uleb128 0xc
 1213 017e B2020000 		.4byte	.LASF35
 1214 0182 01       		.byte	0x1
 1215 0183 6D       		.byte	0x6d
 1216 0184 00000000 		.4byte	.LFB65
 1217 0188 84000000 		.4byte	.LFE65-.LFB65
 1218 018c 01       		.uleb128 0x1
 1219 018d 9C       		.byte	0x9c
 1220 018e 0B       		.uleb128 0xb
 1221 018f 40030000 		.4byte	.LASF36
 1222 0193 01       		.byte	0x1
 1223 0194 83       		.byte	0x83
 1224 0195 00000000 		.4byte	.LFB66
 1225 0199 50000000 		.4byte	.LFE66-.LFB66
 1226 019d 01       		.uleb128 0x1
 1227 019e 9C       		.byte	0x9c
 1228 019f 0D       		.uleb128 0xd
 1229 01a0 73000000 		.4byte	.LASF73
 1230 01a4 01       		.byte	0x1
 1231 01a5 8B       		.byte	0x8b
 1232 01a6 89000000 		.4byte	0x89
 1233 01aa 00000000 		.4byte	.LFB67
 1234 01ae 68040000 		.4byte	.LFE67-.LFB67
 1235 01b2 01       		.uleb128 0x1
 1236 01b3 9C       		.byte	0x9c
 1237 01b4 0D030000 		.4byte	0x30d
 1238 01b8 0E       		.uleb128 0xe
 1239 01b9 2C030000 		.4byte	.LASF37
 1240 01bd 01       		.byte	0x1
 1241 01be 8E       		.byte	0x8e
 1242 01bf CF000000 		.4byte	0xcf
 1243 01c3 02       		.uleb128 0x2
 1244 01c4 91       		.byte	0x91
 1245 01c5 54       		.sleb128 -44
 1246 01c6 0F       		.uleb128 0xf
 1247 01c7 62756600 		.ascii	"buf\000"
 1248 01cb 01       		.byte	0x1
 1249 01cc 8F       		.byte	0x8f
 1250 01cd 0D030000 		.4byte	0x30d
 1251 01d1 03       		.uleb128 0x3
 1252 01d2 91       		.byte	0x91
 1253 01d3 A07F     		.sleb128 -96
 1254 01d5 0E       		.uleb128 0xe
 1255 01d6 92020000 		.4byte	.LASF38
 1256 01da 01       		.byte	0x1
 1257 01db 91       		.byte	0x91
 1258 01dc 1D030000 		.4byte	0x31d
 1259 01e0 03       		.uleb128 0x3
 1260 01e1 91       		.byte	0x91
 1261 01e2 907F     		.sleb128 -112
 1262 01e4 10       		.uleb128 0x10
 1263 01e5 617800   		.ascii	"ax\000"
 1264 01e8 01       		.byte	0x1
 1265 01e9 92       		.byte	0x92
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 32


 1266 01ea A2000000 		.4byte	0xa2
 1267 01ee 10       		.uleb128 0x10
 1268 01ef 617900   		.ascii	"ay\000"
 1269 01f2 01       		.byte	0x1
 1270 01f3 92       		.byte	0x92
 1271 01f4 A2000000 		.4byte	0xa2
 1272 01f8 0F       		.uleb128 0xf
 1273 01f9 617A00   		.ascii	"az\000"
 1274 01fc 01       		.byte	0x1
 1275 01fd 92       		.byte	0x92
 1276 01fe A2000000 		.4byte	0xa2
 1277 0202 02       		.uleb128 0x2
 1278 0203 91       		.byte	0x91
 1279 0204 52       		.sleb128 -46
 1280 0205 10       		.uleb128 0x10
 1281 0206 6900     		.ascii	"i\000"
 1282 0208 01       		.byte	0x1
 1283 0209 92       		.byte	0x92
 1284 020a A2000000 		.4byte	0xa2
 1285 020e 0E       		.uleb128 0xe
 1286 020f 9B020000 		.4byte	.LASF39
 1287 0213 01       		.byte	0x1
 1288 0214 94       		.byte	0x94
 1289 0215 A2000000 		.4byte	0xa2
 1290 0219 02       		.uleb128 0x2
 1291 021a 91       		.byte	0x91
 1292 021b 6E       		.sleb128 -18
 1293 021c 0E       		.uleb128 0xe
 1294 021d 79010000 		.4byte	.LASF40
 1295 0221 01       		.byte	0x1
 1296 0222 95       		.byte	0x95
 1297 0223 89000000 		.4byte	0x89
 1298 0227 03       		.uleb128 0x3
 1299 0228 91       		.byte	0x91
 1300 0229 8C7F     		.sleb128 -116
 1301 022b 0E       		.uleb128 0xe
 1302 022c 5E000000 		.4byte	.LASF41
 1303 0230 01       		.byte	0x1
 1304 0231 95       		.byte	0x95
 1305 0232 89000000 		.4byte	0x89
 1306 0236 02       		.uleb128 0x2
 1307 0237 91       		.byte	0x91
 1308 0238 68       		.sleb128 -24
 1309 0239 0F       		.uleb128 0xf
 1310 023a 6E756D00 		.ascii	"num\000"
 1311 023e 01       		.byte	0x1
 1312 023f F2       		.byte	0xf2
 1313 0240 89000000 		.4byte	0x89
 1314 0244 02       		.uleb128 0x2
 1315 0245 91       		.byte	0x91
 1316 0246 64       		.sleb128 -28
 1317 0247 0E       		.uleb128 0xe
 1318 0248 B8000000 		.4byte	.LASF42
 1319 024c 01       		.byte	0x1
 1320 024d F2       		.byte	0xf2
 1321 024e 89000000 		.4byte	0x89
 1322 0252 02       		.uleb128 0x2
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 33


 1323 0253 91       		.byte	0x91
 1324 0254 60       		.sleb128 -32
 1325 0255 0E       		.uleb128 0xe
 1326 0256 7E010000 		.4byte	.LASF43
 1327 025a 01       		.byte	0x1
 1328 025b F3       		.byte	0xf3
 1329 025c CF000000 		.4byte	0xcf
 1330 0260 02       		.uleb128 0x2
 1331 0261 91       		.byte	0x91
 1332 0262 5C       		.sleb128 -36
 1333 0263 0E       		.uleb128 0xe
 1334 0264 C7000000 		.4byte	.LASF44
 1335 0268 01       		.byte	0x1
 1336 0269 F3       		.byte	0xf3
 1337 026a CF000000 		.4byte	0xcf
 1338 026e 02       		.uleb128 0x2
 1339 026f 91       		.byte	0x91
 1340 0270 58       		.sleb128 -40
 1341 0271 11       		.uleb128 0x11
 1342 0272 74000000 		.4byte	.LBB2
 1343 0276 86000000 		.4byte	.LBE2-.LBB2
 1344 027a 8E020000 		.4byte	0x28e
 1345 027e 0E       		.uleb128 0xe
 1346 027f AF000000 		.4byte	.LASF45
 1347 0283 01       		.byte	0x1
 1348 0284 FB       		.byte	0xfb
 1349 0285 0D030000 		.4byte	0x30d
 1350 0289 03       		.uleb128 0x3
 1351 028a 91       		.byte	0x91
 1352 028b B87E     		.sleb128 -200
 1353 028d 00       		.byte	0
 1354 028e 11       		.uleb128 0x11
 1355 028f 32010000 		.4byte	.LBB3
 1356 0293 60000000 		.4byte	.LBE3-.LBB3
 1357 0297 AC020000 		.4byte	0x2ac
 1358 029b 12       		.uleb128 0x12
 1359 029c C7000000 		.4byte	.LASF44
 1360 02a0 01       		.byte	0x1
 1361 02a1 1201     		.2byte	0x112
 1362 02a3 2D030000 		.4byte	0x32d
 1363 02a7 03       		.uleb128 0x3
 1364 02a8 91       		.byte	0x91
 1365 02a9 F87E     		.sleb128 -136
 1366 02ab 00       		.byte	0
 1367 02ac 13       		.uleb128 0x13
 1368 02ad B8010000 		.4byte	.LBB4
 1369 02b1 82020000 		.4byte	.LBE4-.LBB4
 1370 02b5 12       		.uleb128 0x12
 1371 02b6 3D000000 		.4byte	.LASF46
 1372 02ba 01       		.byte	0x1
 1373 02bb 9701     		.2byte	0x197
 1374 02bd 3D030000 		.4byte	0x33d
 1375 02c1 03       		.uleb128 0x3
 1376 02c2 91       		.byte	0x91
 1377 02c3 B87E     		.sleb128 -200
 1378 02c5 14       		.uleb128 0x14
 1379 02c6 7400     		.ascii	"t\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 34


 1380 02c8 01       		.byte	0x1
 1381 02c9 C501     		.2byte	0x1c5
 1382 02cb 89000000 		.4byte	0x89
 1383 02cf 03       		.uleb128 0x3
 1384 02d0 91       		.byte	0x91
 1385 02d1 F47E     		.sleb128 -140
 1386 02d3 11       		.uleb128 0x11
 1387 02d4 02030000 		.4byte	.LBB5
 1388 02d8 36000000 		.4byte	.LBE5-.LBB5
 1389 02dc F1020000 		.4byte	0x2f1
 1390 02e0 12       		.uleb128 0x12
 1391 02e1 3D000000 		.4byte	.LASF46
 1392 02e5 01       		.byte	0x1
 1393 02e6 6701     		.2byte	0x167
 1394 02e8 3D030000 		.4byte	0x33d
 1395 02ec 03       		.uleb128 0x3
 1396 02ed 91       		.byte	0x91
 1397 02ee B87E     		.sleb128 -200
 1398 02f0 00       		.byte	0
 1399 02f1 13       		.uleb128 0x13
 1400 02f2 82030000 		.4byte	.LBB6
 1401 02f6 12000000 		.4byte	.LBE6-.LBB6
 1402 02fa 12       		.uleb128 0x12
 1403 02fb 3D000000 		.4byte	.LASF46
 1404 02ff 01       		.byte	0x1
 1405 0300 8601     		.2byte	0x186
 1406 0302 3D030000 		.4byte	0x33d
 1407 0306 03       		.uleb128 0x3
 1408 0307 91       		.byte	0x91
 1409 0308 B87E     		.sleb128 -200
 1410 030a 00       		.byte	0
 1411 030b 00       		.byte	0
 1412 030c 00       		.byte	0
 1413 030d 15       		.uleb128 0x15
 1414 030e DD000000 		.4byte	0xdd
 1415 0312 1D030000 		.4byte	0x31d
 1416 0316 16       		.uleb128 0x16
 1417 0317 F5000000 		.4byte	0xf5
 1418 031b 31       		.byte	0x31
 1419 031c 00       		.byte	0
 1420 031d 15       		.uleb128 0x15
 1421 031e DD000000 		.4byte	0xdd
 1422 0322 2D030000 		.4byte	0x32d
 1423 0326 16       		.uleb128 0x16
 1424 0327 F5000000 		.4byte	0xf5
 1425 032b 0D       		.byte	0xd
 1426 032c 00       		.byte	0
 1427 032d 15       		.uleb128 0x15
 1428 032e DD000000 		.4byte	0xdd
 1429 0332 3D030000 		.4byte	0x33d
 1430 0336 16       		.uleb128 0x16
 1431 0337 F5000000 		.4byte	0xf5
 1432 033b 13       		.byte	0x13
 1433 033c 00       		.byte	0
 1434 033d 15       		.uleb128 0x15
 1435 033e DD000000 		.4byte	0xdd
 1436 0342 4D030000 		.4byte	0x34d
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 35


 1437 0346 16       		.uleb128 0x16
 1438 0347 F5000000 		.4byte	0xf5
 1439 034b 3B       		.byte	0x3b
 1440 034c 00       		.byte	0
 1441 034d 17       		.uleb128 0x17
 1442 034e 4D030000 		.4byte	.LASF47
 1443 0352 07       		.byte	0x7
 1444 0353 9606     		.2byte	0x696
 1445 0355 59030000 		.4byte	0x359
 1446 0359 06       		.uleb128 0x6
 1447 035a AD000000 		.4byte	0xad
 1448 035e 18       		.uleb128 0x18
 1449 035f 48000000 		.4byte	.LASF48
 1450 0363 08       		.byte	0x8
 1451 0364 9101     		.2byte	0x191
 1452 0366 97000000 		.4byte	0x97
 1453 036a 05       		.uleb128 0x5
 1454 036b 03       		.byte	0x3
 1455 036c 00000000 		.4byte	devAddr
 1456 0370 15       		.uleb128 0x15
 1457 0371 97000000 		.4byte	0x97
 1458 0375 80030000 		.4byte	0x380
 1459 0379 16       		.uleb128 0x16
 1460 037a F5000000 		.4byte	0xf5
 1461 037e 15       		.byte	0x15
 1462 037f 00       		.byte	0
 1463 0380 18       		.uleb128 0x18
 1464 0381 AB020000 		.4byte	.LASF49
 1465 0385 08       		.byte	0x8
 1466 0386 9201     		.2byte	0x192
 1467 0388 70030000 		.4byte	0x370
 1468 038c 05       		.uleb128 0x5
 1469 038d 03       		.byte	0x3
 1470 038e 00000000 		.4byte	buffer
 1471 0392 19       		.uleb128 0x19
 1472 0393 43000000 		.4byte	.LASF50
 1473 0397 01       		.byte	0x1
 1474 0398 32       		.byte	0x32
 1475 0399 B8000000 		.4byte	0xb8
 1476 039d 05       		.uleb128 0x5
 1477 039e 03       		.byte	0x3
 1478 039f 00000000 		.4byte	Addr
 1479 03a3 1A       		.uleb128 0x1a
 1480 03a4 696400   		.ascii	"id\000"
 1481 03a7 01       		.byte	0x1
 1482 03a8 33       		.byte	0x33
 1483 03a9 62000000 		.4byte	0x62
 1484 03ad 05       		.uleb128 0x5
 1485 03ae 03       		.byte	0x3
 1486 03af 00000000 		.4byte	id
 1487 03b3 19       		.uleb128 0x19
 1488 03b4 04020000 		.4byte	.LASF51
 1489 03b8 01       		.byte	0x1
 1490 03b9 34       		.byte	0x34
 1491 03ba 62000000 		.4byte	0x62
 1492 03be 05       		.uleb128 0x5
 1493 03bf 03       		.byte	0x3
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 36


 1494 03c0 00000000 		.4byte	data_time
 1495 03c4 1A       		.uleb128 0x1a
 1496 03c5 73756D00 		.ascii	"sum\000"
 1497 03c9 01       		.byte	0x1
 1498 03ca 36       		.byte	0x36
 1499 03cb 62000000 		.4byte	0x62
 1500 03cf 05       		.uleb128 0x5
 1501 03d0 03       		.byte	0x3
 1502 03d1 00000000 		.4byte	sum
 1503 03d5 19       		.uleb128 0x19
 1504 03d6 DA000000 		.4byte	.LASF52
 1505 03da 01       		.byte	0x1
 1506 03db 37       		.byte	0x37
 1507 03dc A2000000 		.4byte	0xa2
 1508 03e0 05       		.uleb128 0x5
 1509 03e1 03       		.byte	0x3
 1510 03e2 00000000 		.4byte	average
 1511 03e6 19       		.uleb128 0x19
 1512 03e7 33030000 		.4byte	.LASF53
 1513 03eb 01       		.byte	0x1
 1514 03ec 38       		.byte	0x38
 1515 03ed F7030000 		.4byte	0x3f7
 1516 03f1 05       		.uleb128 0x5
 1517 03f2 03       		.byte	0x3
 1518 03f3 00000000 		.4byte	collect_flag
 1519 03f7 02       		.uleb128 0x2
 1520 03f8 01       		.byte	0x1
 1521 03f9 02       		.byte	0x2
 1522 03fa 5A020000 		.4byte	.LASF54
 1523 03fe 19       		.uleb128 0x19
 1524 03ff 5A030000 		.4byte	.LASF55
 1525 0403 01       		.byte	0x1
 1526 0404 39       		.byte	0x39
 1527 0405 F7030000 		.4byte	0x3f7
 1528 0409 05       		.uleb128 0x5
 1529 040a 03       		.byte	0x3
 1530 040b 00000000 		.4byte	wait_flag
 1531 040f 19       		.uleb128 0x19
 1532 0410 9C000000 		.4byte	.LASF56
 1533 0414 01       		.byte	0x1
 1534 0415 3A       		.byte	0x3a
 1535 0416 F7030000 		.4byte	0x3f7
 1536 041a 05       		.uleb128 0x5
 1537 041b 03       		.byte	0x3
 1538 041c 00000000 		.4byte	PANIC_flag
 1539 0420 19       		.uleb128 0x19
 1540 0421 26030000 		.4byte	.LASF57
 1541 0425 01       		.byte	0x1
 1542 0426 3C       		.byte	0x3c
 1543 0427 50010000 		.4byte	0x150
 1544 042b 05       		.uleb128 0x5
 1545 042c 03       		.byte	0x3
 1546 042d 00000000 		.4byte	STATE
 1547 0431 19       		.uleb128 0x19
 1548 0432 1B020000 		.4byte	.LASF58
 1549 0436 01       		.byte	0x1
 1550 0437 3D       		.byte	0x3d
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 37


 1551 0438 97000000 		.4byte	0x97
 1552 043c 05       		.uleb128 0x5
 1553 043d 03       		.byte	0x3
 1554 043e 00000000 		.4byte	testnum
 1555 0442 19       		.uleb128 0x19
 1556 0443 CE010000 		.4byte	.LASF59
 1557 0447 01       		.byte	0x1
 1558 0448 3D       		.byte	0x3d
 1559 0449 97000000 		.4byte	0x97
 1560 044d 05       		.uleb128 0x5
 1561 044e 03       		.byte	0x3
 1562 044f 00000000 		.4byte	countdown
 1563 0453 19       		.uleb128 0x19
 1564 0454 14000000 		.4byte	.LASF60
 1565 0458 01       		.byte	0x1
 1566 0459 3D       		.byte	0x3d
 1567 045a 97000000 		.4byte	0x97
 1568 045e 05       		.uleb128 0x5
 1569 045f 03       		.byte	0x3
 1570 0460 00000000 		.4byte	update_Data
 1571 0464 15       		.uleb128 0x15
 1572 0465 97000000 		.4byte	0x97
 1573 0469 74040000 		.4byte	0x474
 1574 046d 16       		.uleb128 0x16
 1575 046e F5000000 		.4byte	0xf5
 1576 0472 3F       		.byte	0x3f
 1577 0473 00       		.byte	0
 1578 0474 19       		.uleb128 0x19
 1579 0475 20000000 		.4byte	.LASF61
 1580 0479 01       		.byte	0x1
 1581 047a 3E       		.byte	0x3e
 1582 047b 64040000 		.4byte	0x464
 1583 047f 05       		.uleb128 0x5
 1584 0480 03       		.byte	0x3
 1585 0481 00000000 		.4byte	RxBuffer
 1586 0485 19       		.uleb128 0x19
 1587 0486 0A000000 		.4byte	.LASF62
 1588 048a 01       		.byte	0x1
 1589 048b 3F       		.byte	0x3f
 1590 048c 89000000 		.4byte	0x89
 1591 0490 05       		.uleb128 0x5
 1592 0491 03       		.byte	0x3
 1593 0492 00000000 		.4byte	msg_count
 1594 0496 19       		.uleb128 0x19
 1595 0497 A4020000 		.4byte	.LASF63
 1596 049b 01       		.byte	0x1
 1597 049c 3F       		.byte	0x3f
 1598 049d 89000000 		.4byte	0x89
 1599 04a1 05       		.uleb128 0x5
 1600 04a2 03       		.byte	0x3
 1601 04a3 00000000 		.4byte	rxflag
 1602 04a7 19       		.uleb128 0x19
 1603 04a8 F1020000 		.4byte	.LASF64
 1604 04ac 01       		.byte	0x1
 1605 04ad 3F       		.byte	0x3f
 1606 04ae 89000000 		.4byte	0x89
 1607 04b2 05       		.uleb128 0x5
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 38


 1608 04b3 03       		.byte	0x3
 1609 04b4 00000000 		.4byte	bytes
 1610 04b8 19       		.uleb128 0x19
 1611 04b9 6A000000 		.4byte	.LASF65
 1612 04bd 01       		.byte	0x1
 1613 04be 3F       		.byte	0x3f
 1614 04bf 89000000 		.4byte	0x89
 1615 04c3 05       		.uleb128 0x5
 1616 04c4 03       		.byte	0x3
 1617 04c5 00000000 		.4byte	dataflag
 1618 04c9 19       		.uleb128 0x19
 1619 04ca 50000000 		.4byte	.LASF66
 1620 04ce 01       		.byte	0x1
 1621 04cf 3F       		.byte	0x3f
 1622 04d0 89000000 		.4byte	0x89
 1623 04d4 05       		.uleb128 0x5
 1624 04d5 03       		.byte	0x3
 1625 04d6 00000000 		.4byte	transmit_flag
 1626 04da 15       		.uleb128 0x15
 1627 04db DD000000 		.4byte	0xdd
 1628 04df EA040000 		.4byte	0x4ea
 1629 04e3 16       		.uleb128 0x16
 1630 04e4 F5000000 		.4byte	0xf5
 1631 04e8 0A       		.byte	0xa
 1632 04e9 00       		.byte	0
 1633 04ea 19       		.uleb128 0x19
 1634 04eb 8D000000 		.4byte	.LASF67
 1635 04ef 01       		.byte	0x1
 1636 04f0 40       		.byte	0x40
 1637 04f1 DA040000 		.4byte	0x4da
 1638 04f5 05       		.uleb128 0x5
 1639 04f6 03       		.byte	0x3
 1640 04f7 00000000 		.4byte	file
 1641 04fb 15       		.uleb128 0x15
 1642 04fc DD000000 		.4byte	0xdd
 1643 0500 0B050000 		.4byte	0x50b
 1644 0504 16       		.uleb128 0x16
 1645 0505 F5000000 		.4byte	0xf5
 1646 0509 09       		.byte	0x9
 1647 050a 00       		.byte	0
 1648 050b 19       		.uleb128 0x19
 1649 050c 86010000 		.4byte	.LASF68
 1650 0510 01       		.byte	0x1
 1651 0511 41       		.byte	0x41
 1652 0512 FB040000 		.4byte	0x4fb
 1653 0516 05       		.uleb128 0x5
 1654 0517 03       		.byte	0x3
 1655 0518 00000000 		.4byte	volume
 1656 051c 19       		.uleb128 0x19
 1657 051d 77030000 		.4byte	.LASF69
 1658 0521 01       		.byte	0x1
 1659 0522 42       		.byte	0x42
 1660 0523 0C010000 		.4byte	0x10c
 1661 0527 05       		.uleb128 0x5
 1662 0528 03       		.byte	0x3
 1663 0529 00000000 		.4byte	fsfile
 1664 052d 00       		.byte	0
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 39


 1665              		.section	.debug_abbrev,"",%progbits
 1666              	.Ldebug_abbrev0:
 1667 0000 01       		.uleb128 0x1
 1668 0001 11       		.uleb128 0x11
 1669 0002 01       		.byte	0x1
 1670 0003 25       		.uleb128 0x25
 1671 0004 0E       		.uleb128 0xe
 1672 0005 13       		.uleb128 0x13
 1673 0006 0B       		.uleb128 0xb
 1674 0007 03       		.uleb128 0x3
 1675 0008 0E       		.uleb128 0xe
 1676 0009 1B       		.uleb128 0x1b
 1677 000a 0E       		.uleb128 0xe
 1678 000b 55       		.uleb128 0x55
 1679 000c 17       		.uleb128 0x17
 1680 000d 11       		.uleb128 0x11
 1681 000e 01       		.uleb128 0x1
 1682 000f 10       		.uleb128 0x10
 1683 0010 17       		.uleb128 0x17
 1684 0011 00       		.byte	0
 1685 0012 00       		.byte	0
 1686 0013 02       		.uleb128 0x2
 1687 0014 24       		.uleb128 0x24
 1688 0015 00       		.byte	0
 1689 0016 0B       		.uleb128 0xb
 1690 0017 0B       		.uleb128 0xb
 1691 0018 3E       		.uleb128 0x3e
 1692 0019 0B       		.uleb128 0xb
 1693 001a 03       		.uleb128 0x3
 1694 001b 0E       		.uleb128 0xe
 1695 001c 00       		.byte	0
 1696 001d 00       		.byte	0
 1697 001e 03       		.uleb128 0x3
 1698 001f 16       		.uleb128 0x16
 1699 0020 00       		.byte	0
 1700 0021 03       		.uleb128 0x3
 1701 0022 0E       		.uleb128 0xe
 1702 0023 3A       		.uleb128 0x3a
 1703 0024 0B       		.uleb128 0xb
 1704 0025 3B       		.uleb128 0x3b
 1705 0026 0B       		.uleb128 0xb
 1706 0027 49       		.uleb128 0x49
 1707 0028 13       		.uleb128 0x13
 1708 0029 00       		.byte	0
 1709 002a 00       		.byte	0
 1710 002b 04       		.uleb128 0x4
 1711 002c 24       		.uleb128 0x24
 1712 002d 00       		.byte	0
 1713 002e 0B       		.uleb128 0xb
 1714 002f 0B       		.uleb128 0xb
 1715 0030 3E       		.uleb128 0x3e
 1716 0031 0B       		.uleb128 0xb
 1717 0032 03       		.uleb128 0x3
 1718 0033 08       		.uleb128 0x8
 1719 0034 00       		.byte	0
 1720 0035 00       		.byte	0
 1721 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 40


 1722 0037 16       		.uleb128 0x16
 1723 0038 00       		.byte	0
 1724 0039 03       		.uleb128 0x3
 1725 003a 0E       		.uleb128 0xe
 1726 003b 3A       		.uleb128 0x3a
 1727 003c 0B       		.uleb128 0xb
 1728 003d 3B       		.uleb128 0x3b
 1729 003e 05       		.uleb128 0x5
 1730 003f 49       		.uleb128 0x49
 1731 0040 13       		.uleb128 0x13
 1732 0041 00       		.byte	0
 1733 0042 00       		.byte	0
 1734 0043 06       		.uleb128 0x6
 1735 0044 35       		.uleb128 0x35
 1736 0045 00       		.byte	0
 1737 0046 49       		.uleb128 0x49
 1738 0047 13       		.uleb128 0x13
 1739 0048 00       		.byte	0
 1740 0049 00       		.byte	0
 1741 004a 07       		.uleb128 0x7
 1742 004b 13       		.uleb128 0x13
 1743 004c 00       		.byte	0
 1744 004d 03       		.uleb128 0x3
 1745 004e 0E       		.uleb128 0xe
 1746 004f 3C       		.uleb128 0x3c
 1747 0050 19       		.uleb128 0x19
 1748 0051 00       		.byte	0
 1749 0052 00       		.byte	0
 1750 0053 08       		.uleb128 0x8
 1751 0054 0F       		.uleb128 0xf
 1752 0055 00       		.byte	0
 1753 0056 0B       		.uleb128 0xb
 1754 0057 0B       		.uleb128 0xb
 1755 0058 49       		.uleb128 0x49
 1756 0059 13       		.uleb128 0x13
 1757 005a 00       		.byte	0
 1758 005b 00       		.byte	0
 1759 005c 09       		.uleb128 0x9
 1760 005d 04       		.uleb128 0x4
 1761 005e 01       		.byte	0x1
 1762 005f 03       		.uleb128 0x3
 1763 0060 0E       		.uleb128 0xe
 1764 0061 0B       		.uleb128 0xb
 1765 0062 0B       		.uleb128 0xb
 1766 0063 3A       		.uleb128 0x3a
 1767 0064 0B       		.uleb128 0xb
 1768 0065 3B       		.uleb128 0x3b
 1769 0066 0B       		.uleb128 0xb
 1770 0067 01       		.uleb128 0x1
 1771 0068 13       		.uleb128 0x13
 1772 0069 00       		.byte	0
 1773 006a 00       		.byte	0
 1774 006b 0A       		.uleb128 0xa
 1775 006c 28       		.uleb128 0x28
 1776 006d 00       		.byte	0
 1777 006e 03       		.uleb128 0x3
 1778 006f 0E       		.uleb128 0xe
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 41


 1779 0070 1C       		.uleb128 0x1c
 1780 0071 0D       		.uleb128 0xd
 1781 0072 00       		.byte	0
 1782 0073 00       		.byte	0
 1783 0074 0B       		.uleb128 0xb
 1784 0075 2E       		.uleb128 0x2e
 1785 0076 00       		.byte	0
 1786 0077 3F       		.uleb128 0x3f
 1787 0078 19       		.uleb128 0x19
 1788 0079 03       		.uleb128 0x3
 1789 007a 0E       		.uleb128 0xe
 1790 007b 3A       		.uleb128 0x3a
 1791 007c 0B       		.uleb128 0xb
 1792 007d 3B       		.uleb128 0x3b
 1793 007e 0B       		.uleb128 0xb
 1794 007f 27       		.uleb128 0x27
 1795 0080 19       		.uleb128 0x19
 1796 0081 11       		.uleb128 0x11
 1797 0082 01       		.uleb128 0x1
 1798 0083 12       		.uleb128 0x12
 1799 0084 06       		.uleb128 0x6
 1800 0085 40       		.uleb128 0x40
 1801 0086 18       		.uleb128 0x18
 1802 0087 9642     		.uleb128 0x2116
 1803 0089 19       		.uleb128 0x19
 1804 008a 00       		.byte	0
 1805 008b 00       		.byte	0
 1806 008c 0C       		.uleb128 0xc
 1807 008d 2E       		.uleb128 0x2e
 1808 008e 00       		.byte	0
 1809 008f 3F       		.uleb128 0x3f
 1810 0090 19       		.uleb128 0x19
 1811 0091 03       		.uleb128 0x3
 1812 0092 0E       		.uleb128 0xe
 1813 0093 3A       		.uleb128 0x3a
 1814 0094 0B       		.uleb128 0xb
 1815 0095 3B       		.uleb128 0x3b
 1816 0096 0B       		.uleb128 0xb
 1817 0097 27       		.uleb128 0x27
 1818 0098 19       		.uleb128 0x19
 1819 0099 11       		.uleb128 0x11
 1820 009a 01       		.uleb128 0x1
 1821 009b 12       		.uleb128 0x12
 1822 009c 06       		.uleb128 0x6
 1823 009d 40       		.uleb128 0x40
 1824 009e 18       		.uleb128 0x18
 1825 009f 9742     		.uleb128 0x2117
 1826 00a1 19       		.uleb128 0x19
 1827 00a2 00       		.byte	0
 1828 00a3 00       		.byte	0
 1829 00a4 0D       		.uleb128 0xd
 1830 00a5 2E       		.uleb128 0x2e
 1831 00a6 01       		.byte	0x1
 1832 00a7 3F       		.uleb128 0x3f
 1833 00a8 19       		.uleb128 0x19
 1834 00a9 03       		.uleb128 0x3
 1835 00aa 0E       		.uleb128 0xe
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 42


 1836 00ab 3A       		.uleb128 0x3a
 1837 00ac 0B       		.uleb128 0xb
 1838 00ad 3B       		.uleb128 0x3b
 1839 00ae 0B       		.uleb128 0xb
 1840 00af 49       		.uleb128 0x49
 1841 00b0 13       		.uleb128 0x13
 1842 00b1 11       		.uleb128 0x11
 1843 00b2 01       		.uleb128 0x1
 1844 00b3 12       		.uleb128 0x12
 1845 00b4 06       		.uleb128 0x6
 1846 00b5 40       		.uleb128 0x40
 1847 00b6 18       		.uleb128 0x18
 1848 00b7 9642     		.uleb128 0x2116
 1849 00b9 19       		.uleb128 0x19
 1850 00ba 01       		.uleb128 0x1
 1851 00bb 13       		.uleb128 0x13
 1852 00bc 00       		.byte	0
 1853 00bd 00       		.byte	0
 1854 00be 0E       		.uleb128 0xe
 1855 00bf 34       		.uleb128 0x34
 1856 00c0 00       		.byte	0
 1857 00c1 03       		.uleb128 0x3
 1858 00c2 0E       		.uleb128 0xe
 1859 00c3 3A       		.uleb128 0x3a
 1860 00c4 0B       		.uleb128 0xb
 1861 00c5 3B       		.uleb128 0x3b
 1862 00c6 0B       		.uleb128 0xb
 1863 00c7 49       		.uleb128 0x49
 1864 00c8 13       		.uleb128 0x13
 1865 00c9 02       		.uleb128 0x2
 1866 00ca 18       		.uleb128 0x18
 1867 00cb 00       		.byte	0
 1868 00cc 00       		.byte	0
 1869 00cd 0F       		.uleb128 0xf
 1870 00ce 34       		.uleb128 0x34
 1871 00cf 00       		.byte	0
 1872 00d0 03       		.uleb128 0x3
 1873 00d1 08       		.uleb128 0x8
 1874 00d2 3A       		.uleb128 0x3a
 1875 00d3 0B       		.uleb128 0xb
 1876 00d4 3B       		.uleb128 0x3b
 1877 00d5 0B       		.uleb128 0xb
 1878 00d6 49       		.uleb128 0x49
 1879 00d7 13       		.uleb128 0x13
 1880 00d8 02       		.uleb128 0x2
 1881 00d9 18       		.uleb128 0x18
 1882 00da 00       		.byte	0
 1883 00db 00       		.byte	0
 1884 00dc 10       		.uleb128 0x10
 1885 00dd 34       		.uleb128 0x34
 1886 00de 00       		.byte	0
 1887 00df 03       		.uleb128 0x3
 1888 00e0 08       		.uleb128 0x8
 1889 00e1 3A       		.uleb128 0x3a
 1890 00e2 0B       		.uleb128 0xb
 1891 00e3 3B       		.uleb128 0x3b
 1892 00e4 0B       		.uleb128 0xb
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 43


 1893 00e5 49       		.uleb128 0x49
 1894 00e6 13       		.uleb128 0x13
 1895 00e7 00       		.byte	0
 1896 00e8 00       		.byte	0
 1897 00e9 11       		.uleb128 0x11
 1898 00ea 0B       		.uleb128 0xb
 1899 00eb 01       		.byte	0x1
 1900 00ec 11       		.uleb128 0x11
 1901 00ed 01       		.uleb128 0x1
 1902 00ee 12       		.uleb128 0x12
 1903 00ef 06       		.uleb128 0x6
 1904 00f0 01       		.uleb128 0x1
 1905 00f1 13       		.uleb128 0x13
 1906 00f2 00       		.byte	0
 1907 00f3 00       		.byte	0
 1908 00f4 12       		.uleb128 0x12
 1909 00f5 34       		.uleb128 0x34
 1910 00f6 00       		.byte	0
 1911 00f7 03       		.uleb128 0x3
 1912 00f8 0E       		.uleb128 0xe
 1913 00f9 3A       		.uleb128 0x3a
 1914 00fa 0B       		.uleb128 0xb
 1915 00fb 3B       		.uleb128 0x3b
 1916 00fc 05       		.uleb128 0x5
 1917 00fd 49       		.uleb128 0x49
 1918 00fe 13       		.uleb128 0x13
 1919 00ff 02       		.uleb128 0x2
 1920 0100 18       		.uleb128 0x18
 1921 0101 00       		.byte	0
 1922 0102 00       		.byte	0
 1923 0103 13       		.uleb128 0x13
 1924 0104 0B       		.uleb128 0xb
 1925 0105 01       		.byte	0x1
 1926 0106 11       		.uleb128 0x11
 1927 0107 01       		.uleb128 0x1
 1928 0108 12       		.uleb128 0x12
 1929 0109 06       		.uleb128 0x6
 1930 010a 00       		.byte	0
 1931 010b 00       		.byte	0
 1932 010c 14       		.uleb128 0x14
 1933 010d 34       		.uleb128 0x34
 1934 010e 00       		.byte	0
 1935 010f 03       		.uleb128 0x3
 1936 0110 08       		.uleb128 0x8
 1937 0111 3A       		.uleb128 0x3a
 1938 0112 0B       		.uleb128 0xb
 1939 0113 3B       		.uleb128 0x3b
 1940 0114 05       		.uleb128 0x5
 1941 0115 49       		.uleb128 0x49
 1942 0116 13       		.uleb128 0x13
 1943 0117 02       		.uleb128 0x2
 1944 0118 18       		.uleb128 0x18
 1945 0119 00       		.byte	0
 1946 011a 00       		.byte	0
 1947 011b 15       		.uleb128 0x15
 1948 011c 01       		.uleb128 0x1
 1949 011d 01       		.byte	0x1
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 44


 1950 011e 49       		.uleb128 0x49
 1951 011f 13       		.uleb128 0x13
 1952 0120 01       		.uleb128 0x1
 1953 0121 13       		.uleb128 0x13
 1954 0122 00       		.byte	0
 1955 0123 00       		.byte	0
 1956 0124 16       		.uleb128 0x16
 1957 0125 21       		.uleb128 0x21
 1958 0126 00       		.byte	0
 1959 0127 49       		.uleb128 0x49
 1960 0128 13       		.uleb128 0x13
 1961 0129 2F       		.uleb128 0x2f
 1962 012a 0B       		.uleb128 0xb
 1963 012b 00       		.byte	0
 1964 012c 00       		.byte	0
 1965 012d 17       		.uleb128 0x17
 1966 012e 34       		.uleb128 0x34
 1967 012f 00       		.byte	0
 1968 0130 03       		.uleb128 0x3
 1969 0131 0E       		.uleb128 0xe
 1970 0132 3A       		.uleb128 0x3a
 1971 0133 0B       		.uleb128 0xb
 1972 0134 3B       		.uleb128 0x3b
 1973 0135 05       		.uleb128 0x5
 1974 0136 49       		.uleb128 0x49
 1975 0137 13       		.uleb128 0x13
 1976 0138 3F       		.uleb128 0x3f
 1977 0139 19       		.uleb128 0x19
 1978 013a 3C       		.uleb128 0x3c
 1979 013b 19       		.uleb128 0x19
 1980 013c 00       		.byte	0
 1981 013d 00       		.byte	0
 1982 013e 18       		.uleb128 0x18
 1983 013f 34       		.uleb128 0x34
 1984 0140 00       		.byte	0
 1985 0141 03       		.uleb128 0x3
 1986 0142 0E       		.uleb128 0xe
 1987 0143 3A       		.uleb128 0x3a
 1988 0144 0B       		.uleb128 0xb
 1989 0145 3B       		.uleb128 0x3b
 1990 0146 05       		.uleb128 0x5
 1991 0147 49       		.uleb128 0x49
 1992 0148 13       		.uleb128 0x13
 1993 0149 3F       		.uleb128 0x3f
 1994 014a 19       		.uleb128 0x19
 1995 014b 02       		.uleb128 0x2
 1996 014c 18       		.uleb128 0x18
 1997 014d 00       		.byte	0
 1998 014e 00       		.byte	0
 1999 014f 19       		.uleb128 0x19
 2000 0150 34       		.uleb128 0x34
 2001 0151 00       		.byte	0
 2002 0152 03       		.uleb128 0x3
 2003 0153 0E       		.uleb128 0xe
 2004 0154 3A       		.uleb128 0x3a
 2005 0155 0B       		.uleb128 0xb
 2006 0156 3B       		.uleb128 0x3b
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 45


 2007 0157 0B       		.uleb128 0xb
 2008 0158 49       		.uleb128 0x49
 2009 0159 13       		.uleb128 0x13
 2010 015a 3F       		.uleb128 0x3f
 2011 015b 19       		.uleb128 0x19
 2012 015c 02       		.uleb128 0x2
 2013 015d 18       		.uleb128 0x18
 2014 015e 00       		.byte	0
 2015 015f 00       		.byte	0
 2016 0160 1A       		.uleb128 0x1a
 2017 0161 34       		.uleb128 0x34
 2018 0162 00       		.byte	0
 2019 0163 03       		.uleb128 0x3
 2020 0164 08       		.uleb128 0x8
 2021 0165 3A       		.uleb128 0x3a
 2022 0166 0B       		.uleb128 0xb
 2023 0167 3B       		.uleb128 0x3b
 2024 0168 0B       		.uleb128 0xb
 2025 0169 49       		.uleb128 0x49
 2026 016a 13       		.uleb128 0x13
 2027 016b 3F       		.uleb128 0x3f
 2028 016c 19       		.uleb128 0x19
 2029 016d 02       		.uleb128 0x2
 2030 016e 18       		.uleb128 0x18
 2031 016f 00       		.byte	0
 2032 0170 00       		.byte	0
 2033 0171 00       		.byte	0
 2034              		.section	.debug_aranges,"",%progbits
 2035 0000 3C000000 		.4byte	0x3c
 2036 0004 0200     		.2byte	0x2
 2037 0006 00000000 		.4byte	.Ldebug_info0
 2038 000a 04       		.byte	0x4
 2039 000b 00       		.byte	0
 2040 000c 0000     		.2byte	0
 2041 000e 0000     		.2byte	0
 2042 0010 00000000 		.4byte	.LFB63
 2043 0014 20000000 		.4byte	.LFE63-.LFB63
 2044 0018 00000000 		.4byte	.LFB64
 2045 001c 38000000 		.4byte	.LFE64-.LFB64
 2046 0020 00000000 		.4byte	.LFB65
 2047 0024 84000000 		.4byte	.LFE65-.LFB65
 2048 0028 00000000 		.4byte	.LFB66
 2049 002c 50000000 		.4byte	.LFE66-.LFB66
 2050 0030 00000000 		.4byte	.LFB67
 2051 0034 68040000 		.4byte	.LFE67-.LFB67
 2052 0038 00000000 		.4byte	0
 2053 003c 00000000 		.4byte	0
 2054              		.section	.debug_ranges,"",%progbits
 2055              	.Ldebug_ranges0:
 2056 0000 00000000 		.4byte	.LFB63
 2057 0004 20000000 		.4byte	.LFE63
 2058 0008 00000000 		.4byte	.LFB64
 2059 000c 38000000 		.4byte	.LFE64
 2060 0010 00000000 		.4byte	.LFB65
 2061 0014 84000000 		.4byte	.LFE65
 2062 0018 00000000 		.4byte	.LFB66
 2063 001c 50000000 		.4byte	.LFE66
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 46


 2064 0020 00000000 		.4byte	.LFB67
 2065 0024 68040000 		.4byte	.LFE67
 2066 0028 00000000 		.4byte	0
 2067 002c 00000000 		.4byte	0
 2068              		.section	.debug_line,"",%progbits
 2069              	.Ldebug_line0:
 2070 0000 93020000 		.section	.debug_str,"MS",%progbits,1
 2070      02009501 
 2070      00000201 
 2070      FB0E0D00 
 2070      01010101 
 2071              	.LASF29:
 2072 0000 52455355 		.ascii	"RESURFACE\000"
 2072      52464143 
 2072      4500
 2073              	.LASF62:
 2074 000a 6D73675F 		.ascii	"msg_count\000"
 2074      636F756E 
 2074      7400
 2075              	.LASF60:
 2076 0014 75706461 		.ascii	"update_Data\000"
 2076      74655F44 
 2076      61746100 
 2077              	.LASF61:
 2078 0020 52784275 		.ascii	"RxBuffer\000"
 2078      66666572 
 2078      00
 2079              	.LASF25:
 2080 0029 53595354 		.ascii	"SYSTEM_CHECK\000"
 2080      454D5F43 
 2080      4845434B 
 2080      00
 2081              	.LASF32:
 2082 0036 53544154 		.ascii	"STATES\000"
 2082      455300
 2083              	.LASF46:
 2084 003d 73646275 		.ascii	"sdbuf\000"
 2084      6600
 2085              	.LASF50:
 2086 0043 41646472 		.ascii	"Addr\000"
 2086      00
 2087              	.LASF48:
 2088 0048 64657641 		.ascii	"devAddr\000"
 2088      64647200 
 2089              	.LASF66:
 2090 0050 7472616E 		.ascii	"transmit_flag\000"
 2090      736D6974 
 2090      5F666C61 
 2090      6700
 2091              	.LASF41:
 2092 005e 6F6E6573 		.ascii	"ones\000"
 2092      00
 2093              	.LASF28:
 2094 0063 4C414E44 		.ascii	"LANDED\000"
 2094      454400
 2095              	.LASF65:
 2096 006a 64617461 		.ascii	"dataflag\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 47


 2096      666C6167 
 2096      00
 2097              	.LASF73:
 2098 0073 6D61696E 		.ascii	"main\000"
 2098      00
 2099              	.LASF33:
 2100 0078 4D6F6973 		.ascii	"Moisture_ISR_Handler\000"
 2100      74757265 
 2100      5F495352 
 2100      5F48616E 
 2100      646C6572 
 2101              	.LASF67:
 2102 008d 66696C65 		.ascii	"file\000"
 2102      00
 2103              	.LASF4:
 2104 0092 73686F72 		.ascii	"short int\000"
 2104      7420696E 
 2104      7400
 2105              	.LASF56:
 2106 009c 50414E49 		.ascii	"PANIC_flag\000"
 2106      435F666C 
 2106      616700
 2107              	.LASF13:
 2108 00a7 75696E74 		.ascii	"uint8_t\000"
 2108      385F7400 
 2109              	.LASF45:
 2110 00af 70726573 		.ascii	"pressure\000"
 2110      73757265 
 2110      00
 2111              	.LASF42:
 2112 00b8 64656369 		.ascii	"decimals\000"
 2112      6D616C73 
 2112      00
 2113              	.LASF18:
 2114 00c1 666C6F61 		.ascii	"float\000"
 2114      7400
 2115              	.LASF44:
 2116 00c7 74656D70 		.ascii	"temp\000"
 2116      00
 2117              	.LASF10:
 2118 00cc 6C6F6E67 		.ascii	"long long int\000"
 2118      206C6F6E 
 2118      6720696E 
 2118      7400
 2119              	.LASF52:
 2120 00da 61766572 		.ascii	"average\000"
 2120      61676500 
 2121              	.LASF30:
 2122 00e2 5452414E 		.ascii	"TRANSMIT\000"
 2122      534D4954 
 2122      00
 2123              	.LASF70:
 2124 00eb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2124      4320342E 
 2124      392E3320 
 2124      32303135 
 2124      30333033 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 48


 2125 011e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2125      20726576 
 2125      6973696F 
 2125      6E203232 
 2125      31323230 
 2126 0151 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2126      66756E63 
 2126      74696F6E 
 2126      2D736563 
 2126      74696F6E 
 2127              	.LASF40:
 2128 0179 74656E73 		.ascii	"tens\000"
 2128      00
 2129              	.LASF43:
 2130 017e 766F6C74 		.ascii	"voltage\000"
 2130      61676500 
 2131              	.LASF68:
 2132 0186 766F6C75 		.ascii	"volume\000"
 2132      6D6500
 2133              	.LASF2:
 2134 018d 5F5F7569 		.ascii	"__uint8_t\000"
 2134      6E74385F 
 2134      7400
 2135              	.LASF31:
 2136 0197 4552524F 		.ascii	"ERROR\000"
 2136      5200
 2137              	.LASF24:
 2138 019d 6C6F6E67 		.ascii	"long double\000"
 2138      20646F75 
 2138      626C6500 
 2139              	.LASF26:
 2140 01a9 57414954 		.ascii	"WAIT_TO_LAUNCH\000"
 2140      5F544F5F 
 2140      4C41554E 
 2140      434800
 2141              	.LASF1:
 2142 01b8 756E7369 		.ascii	"unsigned char\000"
 2142      676E6564 
 2142      20636861 
 2142      7200
 2143              	.LASF23:
 2144 01c6 46535F46 		.ascii	"FS_FILE\000"
 2144      494C4500 
 2145              	.LASF59:
 2146 01ce 636F756E 		.ascii	"countdown\000"
 2146      74646F77 
 2146      6E00
 2147              	.LASF0:
 2148 01d8 7369676E 		.ascii	"signed char\000"
 2148      65642063 
 2148      68617200 
 2149              	.LASF11:
 2150 01e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2150      206C6F6E 
 2150      6720756E 
 2150      7369676E 
 2150      65642069 
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 49


 2151              	.LASF16:
 2152 01fb 75696E74 		.ascii	"uint32_t\000"
 2152      33325F74 
 2152      00
 2153              	.LASF51:
 2154 0204 64617461 		.ascii	"data_time\000"
 2154      5F74696D 
 2154      6500
 2155              	.LASF12:
 2156 020e 756E7369 		.ascii	"unsigned int\000"
 2156      676E6564 
 2156      20696E74 
 2156      00
 2157              	.LASF58:
 2158 021b 74657374 		.ascii	"testnum\000"
 2158      6E756D00 
 2159              	.LASF5:
 2160 0223 73686F72 		.ascii	"short unsigned int\000"
 2160      7420756E 
 2160      7369676E 
 2160      65642069 
 2160      6E7400
 2161              	.LASF20:
 2162 0236 63686172 		.ascii	"char\000"
 2162      00
 2163              	.LASF7:
 2164 023b 6C6F6E67 		.ascii	"long int\000"
 2164      20696E74 
 2164      00
 2165              	.LASF15:
 2166 0244 696E7433 		.ascii	"int32_t\000"
 2166      325F7400 
 2167              	.LASF14:
 2168 024c 696E7431 		.ascii	"int16_t\000"
 2168      365F7400 
 2169              	.LASF17:
 2170 0254 75696E74 		.ascii	"uint8\000"
 2170      3800
 2171              	.LASF54:
 2172 025a 5F426F6F 		.ascii	"_Bool\000"
 2172      6C00
 2173              	.LASF72:
 2174 0260 433A5C55 		.ascii	"C:\\Users\\gding\\Documents\\Project_O-Vac\\OVac.cy"
 2174      73657273 
 2174      5C676469 
 2174      6E675C44 
 2174      6F63756D 
 2175 028e 64736E00 		.ascii	"dsn\000"
 2176              	.LASF38:
 2177 0292 63757253 		.ascii	"curState\000"
 2177      74617465 
 2177      00
 2178              	.LASF39:
 2179 029b 7A5F6F66 		.ascii	"z_offset\000"
 2179      66736574 
 2179      00
 2180              	.LASF63:
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 50


 2181 02a4 7278666C 		.ascii	"rxflag\000"
 2181      616700
 2182              	.LASF49:
 2183 02ab 62756666 		.ascii	"buffer\000"
 2183      657200
 2184              	.LASF35:
 2185 02b2 436F756E 		.ascii	"Countdown_ISR_Handler\000"
 2185      74646F77 
 2185      6E5F4953 
 2185      525F4861 
 2185      6E646C65 
 2186              	.LASF71:
 2187 02c8 6D61696E 		.ascii	"main.c\000"
 2187      2E6300
 2188              	.LASF21:
 2189 02cf 72656738 		.ascii	"reg8\000"
 2189      00
 2190              	.LASF9:
 2191 02d4 6C6F6E67 		.ascii	"long unsigned int\000"
 2191      20756E73 
 2191      69676E65 
 2191      6420696E 
 2191      7400
 2192              	.LASF27:
 2193 02e6 44455343 		.ascii	"DESCENDING\000"
 2193      454E4449 
 2193      4E4700
 2194              	.LASF64:
 2195 02f1 62797465 		.ascii	"bytes\000"
 2195      7300
 2196              	.LASF19:
 2197 02f7 646F7562 		.ascii	"double\000"
 2197      6C6500
 2198              	.LASF8:
 2199 02fe 5F5F7569 		.ascii	"__uint32_t\000"
 2199      6E743332 
 2199      5F7400
 2200              	.LASF6:
 2201 0309 5F5F696E 		.ascii	"__int32_t\000"
 2201      7433325F 
 2201      7400
 2202              	.LASF3:
 2203 0313 5F5F696E 		.ascii	"__int16_t\000"
 2203      7431365F 
 2203      7400
 2204              	.LASF22:
 2205 031d 73697A65 		.ascii	"sizetype\000"
 2205      74797065 
 2205      00
 2206              	.LASF57:
 2207 0326 53544154 		.ascii	"STATE\000"
 2207      4500
 2208              	.LASF37:
 2209 032c 6F757470 		.ascii	"output\000"
 2209      757400
 2210              	.LASF53:
 2211 0333 636F6C6C 		.ascii	"collect_flag\000"
ARM GAS  C:\Users\gding\AppData\Local\Temp\ccE6ZrMP.s 			page 51


 2211      6563745F 
 2211      666C6167 
 2211      00
 2212              	.LASF36:
 2213 0340 72785F69 		.ascii	"rx_interrupt\000"
 2213      6E746572 
 2213      72757074 
 2213      00
 2214              	.LASF47:
 2215 034d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2215      52784275 
 2215      66666572 
 2215      00
 2216              	.LASF55:
 2217 035a 77616974 		.ascii	"wait_flag\000"
 2217      5F666C61 
 2217      6700
 2218              	.LASF34:
 2219 0364 53616D70 		.ascii	"Sample_ISR_Handler\000"
 2219      6C655F49 
 2219      53525F48 
 2219      616E646C 
 2219      657200
 2220              	.LASF69:
 2221 0377 66736669 		.ascii	"fsfile\000"
 2221      6C6500
 2222              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
