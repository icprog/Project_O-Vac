ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global _printf_float
  19              		.thumb
  20              		.global	parity
  21              		.section	.rodata
  22              		.align	2
  23              	.LC0:
  24 0000 4E6F6E65 		.ascii	"None\000"
  24      00
  25 0005 000000   		.align	2
  26              	.LC1:
  27 0008 4F646400 		.ascii	"Odd\000"
  28              		.align	2
  29              	.LC2:
  30 000c 4576656E 		.ascii	"Even\000"
  30      00
  31 0011 000000   		.align	2
  32              	.LC3:
  33 0014 4D61726B 		.ascii	"Mark\000"
  33      00
  34 0019 000000   		.align	2
  35              	.LC4:
  36 001c 53706163 		.ascii	"Space\000"
  36      6500
  37              		.data
  38              		.align	2
  39              		.type	parity, %object
  40              		.size	parity, 20
  41              	parity:
  42 0000 00000000 		.word	.LC0
  43 0004 08000000 		.word	.LC1
  44 0008 0C000000 		.word	.LC2
  45 000c 14000000 		.word	.LC3
  46 0010 1C000000 		.word	.LC4
  47              		.global	stop
  48              		.section	.rodata
  49 0022 0000     		.align	2
  50              	.LC5:
  51 0024 3100     		.ascii	"1\000"
  52 0026 0000     		.align	2
  53              	.LC6:
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 2


  54 0028 312E3500 		.ascii	"1.5\000"
  55              		.align	2
  56              	.LC7:
  57 002c 3200     		.ascii	"2\000"
  58              		.data
  59              		.align	2
  60              		.type	stop, %object
  61              		.size	stop, 12
  62              	stop:
  63 0014 24000000 		.word	.LC5
  64 0018 28000000 		.word	.LC6
  65 001c 2C000000 		.word	.LC7
  66              		.section	.rodata
  67 002e 0000     		.align	2
  68              	.LC9:
  69 0030 42523A25 		.ascii	"BR:%4ld %d%c%s\000"
  69      346C6420 
  69      25642563 
  69      257300
  70 003f 00       		.align	2
  71              	.LC10:
  72 0040 4F4E00   		.ascii	"ON\000"
  73 0043 00       		.align	2
  74              	.LC11:
  75 0044 4F464600 		.ascii	"OFF\000"
  76              		.align	2
  77              	.LC12:
  78 0048 4454523A 		.ascii	"DTR:%s,RTS:%s\000"
  78      25732C52 
  78      54533A25 
  78      7300
  79 0056 0000     		.align	2
  80              	.LC8:
  81 0058 5553425F 		.ascii	"USB_UART WORKING\000"
  81      55415254 
  81      20574F52 
  81      4B494E47 
  81      00
  82 0069 00000000 		.space	47
  82      00000000 
  82      00000000 
  82      00000000 
  82      00000000 
  83              		.section	.text.main,"ax",%progbits
  84              		.align	2
  85              		.global	main
  86              		.thumb
  87              		.thumb_func
  88              		.type	main, %function
  89              	main:
  90              	.LFB63:
  91              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 2.0
   5:main.c        **** *
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 3


   6:main.c        **** * Description:
   7:main.c        **** *   The component is enumerated as a Virtual Com port. Receives data from the 
   8:main.c        **** *   hyper terminal, then sends back the received data.
   9:main.c        **** *   For PSoC3/PSoC5LP, the LCD shows the line settings.
  10:main.c        **** *
  11:main.c        **** * Related Document:
  12:main.c        **** *  Universal Serial Bus Specification Revision 2.0
  13:main.c        **** *  Universal Serial Bus Class Definitions for Communications Devices
  14:main.c        **** *  Revision 1.2
  15:main.c        **** *
  16:main.c        **** ********************************************************************************
  17:main.c        **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  18:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  19:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  20:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  21:main.c        **** * accompanying the software package from which you obtained this software.
  22:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  23:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  24:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  25:main.c        **** *******************************************************************************/
  26:main.c        **** 
  27:main.c        **** #include <project.h>
  28:main.c        **** #include "stdio.h"
  29:main.c        **** 
  30:main.c        **** #if defined (__GNUC__)
  31:main.c        ****     /* Add an explicit reference to the floating point printf library */
  32:main.c        ****     /* to allow usage of the floating point conversion specifiers. */
  33:main.c        ****     /* This is not linked in by default with the newlib-nano library. */
  34:main.c        ****     asm (".global _printf_float");
  35:main.c        **** #endif
  36:main.c        **** 
  37:main.c        **** #define USBFS_DEVICE    (0u)
  38:main.c        **** 
  39:main.c        **** /* The buffer size is equal to the maximum packet size of the IN and OUT bulk
  40:main.c        **** * endpoints.
  41:main.c        **** */
  42:main.c        **** #define USBUART_BUFFER_SIZE (64u)
  43:main.c        **** #define LINE_STR_LENGTH     (20u)
  44:main.c        **** 
  45:main.c        **** char8* parity[] = {"None", "Odd", "Even", "Mark", "Space"};
  46:main.c        **** char8* stop[]   = {"1", "1.5", "2"};
  47:main.c        **** 
  48:main.c        **** 
  49:main.c        **** /*******************************************************************************
  50:main.c        **** * Function Name: main
  51:main.c        **** ********************************************************************************
  52:main.c        **** *
  53:main.c        **** * Summary:
  54:main.c        **** *  The main function performs the following actions:
  55:main.c        **** *   1. Waits until VBUS becomes valid and starts the USBFS component which is
  56:main.c        **** *      enumerated as virtual Com port.
  57:main.c        **** *   2. Waits until the device is enumerated by the host.
  58:main.c        **** *   3. Waits for data coming from the hyper terminal and sends it back.
  59:main.c        **** *   4. PSoC3/PSoC5LP: the LCD shows the line settings.
  60:main.c        **** *
  61:main.c        **** * Parameters:
  62:main.c        **** *  None.
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 4


  63:main.c        **** *
  64:main.c        **** * Return:
  65:main.c        **** *  None.
  66:main.c        **** *
  67:main.c        **** *******************************************************************************/
  68:main.c        **** int main()
  69:main.c        **** {
  92              		.loc 1 69 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 152
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  97              		.cfi_def_cfa_offset 20
  98              		.cfi_offset 4, -20
  99              		.cfi_offset 5, -16
 100              		.cfi_offset 6, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 A9B0     		sub	sp, sp, #164
 104              		.cfi_def_cfa_offset 184
 105 0004 02AF     		add	r7, sp, #8
 106              		.cfi_def_cfa 7, 176
  70:main.c        ****     uint16 count;
  71:main.c        ****     uint8 buffer[USBUART_BUFFER_SIZE];
  72:main.c        ****     uint8 testLine[USBUART_BUFFER_SIZE] ="USB_UART WORKING";
 107              		.loc 1 72 0
 108 0006 524B     		ldr	r3, .L14
 109 0008 07F11404 		add	r4, r7, #20
 110 000c 1D46     		mov	r5, r3
 111 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 112 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 113 0012 2B68     		ldr	r3, [r5]
 114 0014 2370     		strb	r3, [r4]
 115 0016 07F12503 		add	r3, r7, #37
 116 001a 2F22     		movs	r2, #47
 117 001c 1846     		mov	r0, r3
 118 001e 0021     		movs	r1, #0
 119 0020 FFF7FEFF 		bl	memset
  73:main.c        ****     testLine[16]=0x0D; //newline return character needed for Terminal 
 120              		.loc 1 73 0
 121 0024 0D23     		movs	r3, #13
 122 0026 87F82430 		strb	r3, [r7, #36]
  74:main.c        ****     
  75:main.c        **** #if (CY_PSOC3 || CY_PSOC5LP)
  76:main.c        ****     uint8 state;
  77:main.c        ****     char8 lineStr[LINE_STR_LENGTH];
  78:main.c        ****     
  79:main.c        **** 
  80:main.c        **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  81:main.c        ****     
  82:main.c        ****     CyGlobalIntEnable;
 123              		.loc 1 82 0
 124              	@ 82 "main.c" 1
 125 002a 62B6     		CPSIE   i
 126              	@ 0 "" 2
  83:main.c        **** 
  84:main.c        ****     /* Start USBFS operation with 5-V operation. */
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 5


  85:main.c        ****     USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
 127              		.loc 1 85 0
 128              		.thumb
 129 002c 0020     		movs	r0, #0
 130 002e 0121     		movs	r1, #1
 131 0030 FFF7FEFF 		bl	USBUART_Start
 132              	.L13:
  86:main.c        ****     
  87:main.c        ****     for(;;)
  88:main.c        ****     {
  89:main.c        ****         /* Host can send double SET_INTERFACE request. */
  90:main.c        ****         if (USBUART_IsConfigurationChanged()!= 0u){
 133              		.loc 1 90 0
 134 0034 FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 135 0038 0346     		mov	r3, r0
 136 003a 002B     		cmp	r3, #0
 137 003c 06D0     		beq	.L2
  91:main.c        ****             /* Initialize IN endpoints when device is configured. */
  92:main.c        ****             if (USBUART_GetConfiguration() !=0u){
 138              		.loc 1 92 0
 139 003e FFF7FEFF 		bl	USBUART_GetConfiguration
 140 0042 0346     		mov	r3, r0
 141 0044 002B     		cmp	r3, #0
 142 0046 01D0     		beq	.L2
  93:main.c        ****                 /* Enumeration is done, enable OUT endpoint to receive data 
  94:main.c        ****                  * from host. */
  95:main.c        ****                 USBUART_CDC_Init();
 143              		.loc 1 95 0
 144 0048 FFF7FEFF 		bl	USBUART_CDC_Init
 145              	.L2:
  96:main.c        ****             }
  97:main.c        ****         }
  98:main.c        **** 
  99:main.c        ****         /* Service USB CDC when device is configured. */
 100:main.c        ****         if (USBUART_GetConfiguration()!=0u){
 146              		.loc 1 100 0
 147 004c FFF7FEFF 		bl	USBUART_GetConfiguration
 148 0050 0346     		mov	r3, r0
 149 0052 002B     		cmp	r3, #0
 150 0054 2AD0     		beq	.L3
 101:main.c        ****             /* Check for input data from host. */
 102:main.c        ****             if (USBUART_DataIsReady()!=0u){
 151              		.loc 1 102 0
 152 0056 FFF7FEFF 		bl	USBUART_DataIsReady
 153 005a 0346     		mov	r3, r0
 154 005c 002B     		cmp	r3, #0
 155 005e 25D0     		beq	.L3
 103:main.c        ****                 /* Read received data and re-enable OUT endpoint. */
 104:main.c        ****                 count = USBUART_GetAll(buffer);
 156              		.loc 1 104 0
 157 0060 07F15403 		add	r3, r7, #84
 158 0064 1846     		mov	r0, r3
 159 0066 FFF7FEFF 		bl	USBUART_GetAll
 160 006a 0346     		mov	r3, r0
 161 006c A7F89430 		strh	r3, [r7, #148]	@ movhi
 105:main.c        ****                 if (count!=0u)
 162              		.loc 1 105 0
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 6


 163 0070 B7F89430 		ldrh	r3, [r7, #148]
 164 0074 002B     		cmp	r3, #0
 165 0076 05D0     		beq	.L4
 106:main.c        ****                     /* Wait until component is ready to send data to host. */
 107:main.c        ****                     while (USBUART_CDCIsReady() == 0u){
 166              		.loc 1 107 0
 167 0078 00BF     		nop
 168              	.L5:
 169              		.loc 1 107 0 is_stmt 0 discriminator 1
 170 007a FFF7FEFF 		bl	USBUART_CDCIsReady
 171 007e 0346     		mov	r3, r0
 172 0080 002B     		cmp	r3, #0
 173 0082 FAD0     		beq	.L5
 174              	.L4:
 108:main.c        ****                     }
 109:main.c        ****                     
 110:main.c        ****                     USBUART_PutData(testLine, 17); // Send data back to host.
 175              		.loc 1 110 0 is_stmt 1
 176 0084 07F11403 		add	r3, r7, #20
 177 0088 1846     		mov	r0, r3
 178 008a 1121     		movs	r1, #17
 179 008c FFF7FEFF 		bl	USBUART_PutData
 111:main.c        **** 
 112:main.c        ****                     /* If the last sent packet is exactly the maximum packet 
 113:main.c        ****                     *  size, it is followed by a zero-length packet to assure
 114:main.c        ****                     *  that the end of the segment is properly identified by 
 115:main.c        ****                     *  the terminal.
 116:main.c        ****                     */
 117:main.c        ****                     if (USBUART_BUFFER_SIZE == count){
 180              		.loc 1 117 0
 181 0090 B7F89430 		ldrh	r3, [r7, #148]
 182 0094 402B     		cmp	r3, #64
 183 0096 09D1     		bne	.L3
 118:main.c        ****                         /* Wait until component is ready to send data to PC. */
 119:main.c        ****                         while (USBUART_CDCIsReady()==0u){
 184              		.loc 1 119 0
 185 0098 00BF     		nop
 186              	.L6:
 187              		.loc 1 119 0 is_stmt 0 discriminator 1
 188 009a FFF7FEFF 		bl	USBUART_CDCIsReady
 189 009e 0346     		mov	r3, r0
 190 00a0 002B     		cmp	r3, #0
 191 00a2 FAD0     		beq	.L6
 120:main.c        ****                         }
 121:main.c        ****                         /* Send zero-length packet to PC. */
 122:main.c        ****                         USBUART_PutData(NULL, 0u);
 192              		.loc 1 122 0 is_stmt 1
 193 00a4 0020     		movs	r0, #0
 194 00a6 0021     		movs	r1, #0
 195 00a8 FFF7FEFF 		bl	USBUART_PutData
 196              	.L3:
 123:main.c        ****                     }
 124:main.c        ****                 }
 125:main.c        ****             }
 126:main.c        ****         #if (CY_PSOC3 || CY_PSOC5LP)
 127:main.c        ****             /* Check for Line settings change. */
 128:main.c        ****             state = USBUART_IsLineChanged();
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 7


 197              		.loc 1 128 0
 198 00ac FFF7FEFF 		bl	USBUART_IsLineChanged
 199 00b0 0346     		mov	r3, r0
 200 00b2 87F89730 		strb	r3, [r7, #151]
 129:main.c        ****             if (state !=0u){
 201              		.loc 1 129 0
 202 00b6 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 203 00ba 002B     		cmp	r3, #0
 204 00bc 47D0     		beq	.L7
 130:main.c        ****                 /* Output on LCD Line Coding settings. */
 131:main.c        ****                 if (0u != (state & USBUART_LINE_CODING_CHANGED))
 205              		.loc 1 131 0
 206 00be 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 207 00c2 03F00103 		and	r3, r3, #1
 208 00c6 002B     		cmp	r3, #0
 209 00c8 1FD0     		beq	.L8
 132:main.c        ****                 {                  
 133:main.c        ****                     /* Get string to output. */
 134:main.c        ****                     sprintf(lineStr,"BR:%4ld %d%c%s", USBUART_GetDTERate(),\
 210              		.loc 1 134 0
 211 00ca FFF7FEFF 		bl	USBUART_GetDTERate
 212 00ce 0646     		mov	r6, r0
 135:main.c        ****                                    (uint16) USBUART_GetDataBits(),\
 213              		.loc 1 135 0
 214 00d0 FFF7FEFF 		bl	USBUART_GetDataBits
 215 00d4 0346     		mov	r3, r0
 134:main.c        ****                                    (uint16) USBUART_GetDataBits(),\
 216              		.loc 1 134 0
 217 00d6 1D46     		mov	r5, r3
 136:main.c        ****                                    parity[(uint16) USBUART_GetParityType()][0],\
 218              		.loc 1 136 0
 219 00d8 FFF7FEFF 		bl	USBUART_GetParityType
 220 00dc 0346     		mov	r3, r0
 221 00de 1A46     		mov	r2, r3
 222 00e0 1C4B     		ldr	r3, .L14+4
 223 00e2 53F82230 		ldr	r3, [r3, r2, lsl #2]
 224 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134:main.c        ****                                    (uint16) USBUART_GetDataBits(),\
 225              		.loc 1 134 0
 226 00e8 1C46     		mov	r4, r3
 137:main.c        ****                                    stop[(uint16) USBUART_GetCharFormat()]);
 227              		.loc 1 137 0
 228 00ea FFF7FEFF 		bl	USBUART_GetCharFormat
 229 00ee 0346     		mov	r3, r0
 134:main.c        ****                                    (uint16) USBUART_GetDataBits(),\
 230              		.loc 1 134 0
 231 00f0 1A46     		mov	r2, r3
 232 00f2 194B     		ldr	r3, .L14+8
 233 00f4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 234 00f8 3A46     		mov	r2, r7
 235 00fa 0094     		str	r4, [sp]
 236 00fc 0193     		str	r3, [sp, #4]
 237 00fe 1046     		mov	r0, r2
 238 0100 1649     		ldr	r1, .L14+12
 239 0102 3246     		mov	r2, r6
 240 0104 2B46     		mov	r3, r5
 241 0106 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 8


 242              	.L8:
 138:main.c        ****                 }
 139:main.c        **** 
 140:main.c        ****                 /* Output on LCD Line Control settings. */
 141:main.c        ****                 if (0u != (state & USBUART_LINE_CONTROL_CHANGED))
 243              		.loc 1 141 0
 244 010a 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 245 010e 03F00203 		and	r3, r3, #2
 246 0112 002B     		cmp	r3, #0
 247 0114 1BD0     		beq	.L7
 142:main.c        ****                 {                   
 143:main.c        ****                     /* Get string to output. */
 144:main.c        ****                     state = USBUART_GetLineControl();
 248              		.loc 1 144 0
 249 0116 FFF7FEFF 		bl	USBUART_GetLineControl
 250 011a 0346     		mov	r3, r0
 251 011c 87F89730 		strb	r3, [r7, #151]
 145:main.c        ****                     sprintf(lineStr,"DTR:%s,RTS:%s",  (0u != (state & USBUART_LINE_CONTROL_DTR)) ? 
 252              		.loc 1 145 0
 253 0120 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 254 0124 03F00103 		and	r3, r3, #1
 255 0128 002B     		cmp	r3, #0
 256 012a 01D0     		beq	.L9
 257              		.loc 1 145 0 is_stmt 0 discriminator 1
 258 012c 0C4A     		ldr	r2, .L14+16
 259 012e 00E0     		b	.L10
 260              	.L9:
 261              		.loc 1 145 0 discriminator 2
 262 0130 0C4A     		ldr	r2, .L14+20
 263              	.L10:
 146:main.c        ****                                                       (0u != (state & USBUART_LINE_CONTROL_RTS)) ? 
 264              		.loc 1 146 0 is_stmt 1 discriminator 4
 265 0132 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 266 0136 03F00203 		and	r3, r3, #2
 145:main.c        ****                     sprintf(lineStr,"DTR:%s,RTS:%s",  (0u != (state & USBUART_LINE_CONTROL_DTR)) ? 
 267              		.loc 1 145 0 discriminator 4
 268 013a 002B     		cmp	r3, #0
 269 013c 01D0     		beq	.L11
 145:main.c        ****                     sprintf(lineStr,"DTR:%s,RTS:%s",  (0u != (state & USBUART_LINE_CONTROL_DTR)) ? 
 270              		.loc 1 145 0 is_stmt 0 discriminator 5
 271 013e 084B     		ldr	r3, .L14+16
 272 0140 00E0     		b	.L12
 273              	.L11:
 145:main.c        ****                     sprintf(lineStr,"DTR:%s,RTS:%s",  (0u != (state & USBUART_LINE_CONTROL_DTR)) ? 
 274              		.loc 1 145 0 discriminator 6
 275 0142 084B     		ldr	r3, .L14+20
 276              	.L12:
 145:main.c        ****                     sprintf(lineStr,"DTR:%s,RTS:%s",  (0u != (state & USBUART_LINE_CONTROL_DTR)) ? 
 277              		.loc 1 145 0 discriminator 8
 278 0144 3946     		mov	r1, r7
 279 0146 0846     		mov	r0, r1
 280 0148 0749     		ldr	r1, .L14+24
 281 014a FFF7FEFF 		bl	sprintf
 282              	.L7:
 147:main.c        ****                 }
 148:main.c        ****             }
 149:main.c        ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 9


 150:main.c        ****         }
 283              		.loc 1 150 0 is_stmt 1
 284 014e 71E7     		b	.L13
 285              	.L15:
 286              		.align	2
 287              	.L14:
 288 0150 58000000 		.word	.LC8
 289 0154 00000000 		.word	parity
 290 0158 00000000 		.word	stop
 291 015c 30000000 		.word	.LC9
 292 0160 40000000 		.word	.LC10
 293 0164 44000000 		.word	.LC11
 294 0168 48000000 		.word	.LC12
 295              		.cfi_endproc
 296              	.LFE63:
 297              		.size	main, .-main
 298              		.text
 299              	.Letext0:
 300              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 301              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 302              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 303              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 304              		.section	.debug_info,"",%progbits
 305              	.Ldebug_info0:
 306 0000 9A010000 		.4byte	0x19a
 307 0004 0400     		.2byte	0x4
 308 0006 00000000 		.4byte	.Ldebug_abbrev0
 309 000a 04       		.byte	0x4
 310 000b 01       		.uleb128 0x1
 311 000c 61000000 		.4byte	.LASF26
 312 0010 01       		.byte	0x1
 313 0011 9F010000 		.4byte	.LASF27
 314 0015 00000000 		.4byte	.LASF28
 315 0019 00000000 		.4byte	.Ldebug_ranges0+0
 316 001d 00000000 		.4byte	0
 317 0021 00000000 		.4byte	.Ldebug_line0
 318 0025 02       		.uleb128 0x2
 319 0026 01       		.byte	0x1
 320 0027 06       		.byte	0x6
 321 0028 D1010000 		.4byte	.LASF0
 322 002c 02       		.uleb128 0x2
 323 002d 01       		.byte	0x1
 324 002e 08       		.byte	0x8
 325 002f F5000000 		.4byte	.LASF1
 326 0033 02       		.uleb128 0x2
 327 0034 02       		.byte	0x2
 328 0035 05       		.byte	0x5
 329 0036 B1010000 		.4byte	.LASF2
 330 003a 02       		.uleb128 0x2
 331 003b 02       		.byte	0x2
 332 003c 07       		.byte	0x7
 333 003d 1B010000 		.4byte	.LASF3
 334 0041 03       		.uleb128 0x3
 335 0042 57000000 		.4byte	.LASF9
 336 0046 02       		.byte	0x2
 337 0047 3F       		.byte	0x3f
 338 0048 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 10


 339 004c 02       		.uleb128 0x2
 340 004d 04       		.byte	0x4
 341 004e 05       		.byte	0x5
 342 004f C8010000 		.4byte	.LASF4
 343 0053 02       		.uleb128 0x2
 344 0054 04       		.byte	0x4
 345 0055 07       		.byte	0x7
 346 0056 09010000 		.4byte	.LASF5
 347 005a 02       		.uleb128 0x2
 348 005b 08       		.byte	0x8
 349 005c 05       		.byte	0x5
 350 005d 91010000 		.4byte	.LASF6
 351 0061 02       		.uleb128 0x2
 352 0062 08       		.byte	0x8
 353 0063 07       		.byte	0x7
 354 0064 69010000 		.4byte	.LASF7
 355 0068 04       		.uleb128 0x4
 356 0069 04       		.byte	0x4
 357 006a 05       		.byte	0x5
 358 006b 696E7400 		.ascii	"int\000"
 359 006f 02       		.uleb128 0x2
 360 0070 04       		.byte	0x4
 361 0071 07       		.byte	0x7
 362 0072 5C010000 		.4byte	.LASF8
 363 0076 03       		.uleb128 0x3
 364 0077 80010000 		.4byte	.LASF10
 365 007b 03       		.byte	0x3
 366 007c 2C       		.byte	0x2c
 367 007d 41000000 		.4byte	0x41
 368 0081 05       		.uleb128 0x5
 369 0082 C2010000 		.4byte	.LASF11
 370 0086 04       		.byte	0x4
 371 0087 9201     		.2byte	0x192
 372 0089 2C000000 		.4byte	0x2c
 373 008d 05       		.uleb128 0x5
 374 008e 55010000 		.4byte	.LASF12
 375 0092 04       		.byte	0x4
 376 0093 9301     		.2byte	0x193
 377 0095 3A000000 		.4byte	0x3a
 378 0099 02       		.uleb128 0x2
 379 009a 04       		.byte	0x4
 380 009b 04       		.byte	0x4
 381 009c EF000000 		.4byte	.LASF13
 382 00a0 02       		.uleb128 0x2
 383 00a1 08       		.byte	0x8
 384 00a2 04       		.byte	0x4
 385 00a3 40010000 		.4byte	.LASF14
 386 00a7 05       		.uleb128 0x5
 387 00a8 03010000 		.4byte	.LASF15
 388 00ac 04       		.byte	0x4
 389 00ad A301     		.2byte	0x1a3
 390 00af B3000000 		.4byte	0xb3
 391 00b3 02       		.uleb128 0x2
 392 00b4 01       		.byte	0x1
 393 00b5 08       		.byte	0x8
 394 00b6 A6010000 		.4byte	.LASF16
 395 00ba 02       		.uleb128 0x2
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 11


 396 00bb 04       		.byte	0x4
 397 00bc 07       		.byte	0x7
 398 00bd 88010000 		.4byte	.LASF17
 399 00c1 06       		.uleb128 0x6
 400 00c2 50010000 		.4byte	.LASF29
 401 00c6 01       		.byte	0x1
 402 00c7 44       		.byte	0x44
 403 00c8 68000000 		.4byte	0x68
 404 00cc 00000000 		.4byte	.LFB63
 405 00d0 6C010000 		.4byte	.LFE63-.LFB63
 406 00d4 01       		.uleb128 0x1
 407 00d5 9C       		.byte	0x9c
 408 00d6 24010000 		.4byte	0x124
 409 00da 07       		.uleb128 0x7
 410 00db AB010000 		.4byte	.LASF18
 411 00df 01       		.byte	0x1
 412 00e0 46       		.byte	0x46
 413 00e1 8D000000 		.4byte	0x8d
 414 00e5 02       		.uleb128 0x2
 415 00e6 91       		.byte	0x91
 416 00e7 64       		.sleb128 -28
 417 00e8 07       		.uleb128 0x7
 418 00e9 BB010000 		.4byte	.LASF19
 419 00ed 01       		.byte	0x1
 420 00ee 47       		.byte	0x47
 421 00ef 24010000 		.4byte	0x124
 422 00f3 03       		.uleb128 0x3
 423 00f4 91       		.byte	0x91
 424 00f5 A47F     		.sleb128 -92
 425 00f7 07       		.uleb128 0x7
 426 00f8 47010000 		.4byte	.LASF20
 427 00fc 01       		.byte	0x1
 428 00fd 48       		.byte	0x48
 429 00fe 24010000 		.4byte	0x124
 430 0102 03       		.uleb128 0x3
 431 0103 91       		.byte	0x91
 432 0104 E47E     		.sleb128 -156
 433 0106 07       		.uleb128 0x7
 434 0107 51000000 		.4byte	.LASF21
 435 010b 01       		.byte	0x1
 436 010c 4C       		.byte	0x4c
 437 010d 81000000 		.4byte	0x81
 438 0111 02       		.uleb128 0x2
 439 0112 91       		.byte	0x91
 440 0113 67       		.sleb128 -25
 441 0114 07       		.uleb128 0x7
 442 0115 E4010000 		.4byte	.LASF22
 443 0119 01       		.byte	0x1
 444 011a 4D       		.byte	0x4d
 445 011b 34010000 		.4byte	0x134
 446 011f 03       		.uleb128 0x3
 447 0120 91       		.byte	0x91
 448 0121 D07E     		.sleb128 -176
 449 0123 00       		.byte	0
 450 0124 08       		.uleb128 0x8
 451 0125 81000000 		.4byte	0x81
 452 0129 34010000 		.4byte	0x134
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 12


 453 012d 09       		.uleb128 0x9
 454 012e BA000000 		.4byte	0xba
 455 0132 3F       		.byte	0x3f
 456 0133 00       		.byte	0
 457 0134 08       		.uleb128 0x8
 458 0135 A7000000 		.4byte	0xa7
 459 0139 44010000 		.4byte	0x144
 460 013d 09       		.uleb128 0x9
 461 013e BA000000 		.4byte	0xba
 462 0142 13       		.byte	0x13
 463 0143 00       		.byte	0
 464 0144 0A       		.uleb128 0xa
 465 0145 33010000 		.4byte	.LASF23
 466 0149 05       		.byte	0x5
 467 014a 9606     		.2byte	0x696
 468 014c 50010000 		.4byte	0x150
 469 0150 0B       		.uleb128 0xb
 470 0151 76000000 		.4byte	0x76
 471 0155 08       		.uleb128 0x8
 472 0156 65010000 		.4byte	0x165
 473 015a 65010000 		.4byte	0x165
 474 015e 09       		.uleb128 0x9
 475 015f BA000000 		.4byte	0xba
 476 0163 04       		.byte	0x4
 477 0164 00       		.byte	0
 478 0165 0C       		.uleb128 0xc
 479 0166 04       		.byte	0x4
 480 0167 A7000000 		.4byte	0xa7
 481 016b 0D       		.uleb128 0xd
 482 016c DD010000 		.4byte	.LASF24
 483 0170 01       		.byte	0x1
 484 0171 2D       		.byte	0x2d
 485 0172 55010000 		.4byte	0x155
 486 0176 05       		.uleb128 0x5
 487 0177 03       		.byte	0x3
 488 0178 00000000 		.4byte	parity
 489 017c 08       		.uleb128 0x8
 490 017d 65010000 		.4byte	0x165
 491 0181 8C010000 		.4byte	0x18c
 492 0185 09       		.uleb128 0x9
 493 0186 BA000000 		.4byte	0xba
 494 018a 02       		.byte	0x2
 495 018b 00       		.byte	0
 496 018c 0D       		.uleb128 0xd
 497 018d 2E010000 		.4byte	.LASF25
 498 0191 01       		.byte	0x1
 499 0192 2E       		.byte	0x2e
 500 0193 7C010000 		.4byte	0x17c
 501 0197 05       		.uleb128 0x5
 502 0198 03       		.byte	0x3
 503 0199 00000000 		.4byte	stop
 504 019d 00       		.byte	0
 505              		.section	.debug_abbrev,"",%progbits
 506              	.Ldebug_abbrev0:
 507 0000 01       		.uleb128 0x1
 508 0001 11       		.uleb128 0x11
 509 0002 01       		.byte	0x1
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 13


 510 0003 25       		.uleb128 0x25
 511 0004 0E       		.uleb128 0xe
 512 0005 13       		.uleb128 0x13
 513 0006 0B       		.uleb128 0xb
 514 0007 03       		.uleb128 0x3
 515 0008 0E       		.uleb128 0xe
 516 0009 1B       		.uleb128 0x1b
 517 000a 0E       		.uleb128 0xe
 518 000b 55       		.uleb128 0x55
 519 000c 17       		.uleb128 0x17
 520 000d 11       		.uleb128 0x11
 521 000e 01       		.uleb128 0x1
 522 000f 10       		.uleb128 0x10
 523 0010 17       		.uleb128 0x17
 524 0011 00       		.byte	0
 525 0012 00       		.byte	0
 526 0013 02       		.uleb128 0x2
 527 0014 24       		.uleb128 0x24
 528 0015 00       		.byte	0
 529 0016 0B       		.uleb128 0xb
 530 0017 0B       		.uleb128 0xb
 531 0018 3E       		.uleb128 0x3e
 532 0019 0B       		.uleb128 0xb
 533 001a 03       		.uleb128 0x3
 534 001b 0E       		.uleb128 0xe
 535 001c 00       		.byte	0
 536 001d 00       		.byte	0
 537 001e 03       		.uleb128 0x3
 538 001f 16       		.uleb128 0x16
 539 0020 00       		.byte	0
 540 0021 03       		.uleb128 0x3
 541 0022 0E       		.uleb128 0xe
 542 0023 3A       		.uleb128 0x3a
 543 0024 0B       		.uleb128 0xb
 544 0025 3B       		.uleb128 0x3b
 545 0026 0B       		.uleb128 0xb
 546 0027 49       		.uleb128 0x49
 547 0028 13       		.uleb128 0x13
 548 0029 00       		.byte	0
 549 002a 00       		.byte	0
 550 002b 04       		.uleb128 0x4
 551 002c 24       		.uleb128 0x24
 552 002d 00       		.byte	0
 553 002e 0B       		.uleb128 0xb
 554 002f 0B       		.uleb128 0xb
 555 0030 3E       		.uleb128 0x3e
 556 0031 0B       		.uleb128 0xb
 557 0032 03       		.uleb128 0x3
 558 0033 08       		.uleb128 0x8
 559 0034 00       		.byte	0
 560 0035 00       		.byte	0
 561 0036 05       		.uleb128 0x5
 562 0037 16       		.uleb128 0x16
 563 0038 00       		.byte	0
 564 0039 03       		.uleb128 0x3
 565 003a 0E       		.uleb128 0xe
 566 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 14


 567 003c 0B       		.uleb128 0xb
 568 003d 3B       		.uleb128 0x3b
 569 003e 05       		.uleb128 0x5
 570 003f 49       		.uleb128 0x49
 571 0040 13       		.uleb128 0x13
 572 0041 00       		.byte	0
 573 0042 00       		.byte	0
 574 0043 06       		.uleb128 0x6
 575 0044 2E       		.uleb128 0x2e
 576 0045 01       		.byte	0x1
 577 0046 3F       		.uleb128 0x3f
 578 0047 19       		.uleb128 0x19
 579 0048 03       		.uleb128 0x3
 580 0049 0E       		.uleb128 0xe
 581 004a 3A       		.uleb128 0x3a
 582 004b 0B       		.uleb128 0xb
 583 004c 3B       		.uleb128 0x3b
 584 004d 0B       		.uleb128 0xb
 585 004e 49       		.uleb128 0x49
 586 004f 13       		.uleb128 0x13
 587 0050 11       		.uleb128 0x11
 588 0051 01       		.uleb128 0x1
 589 0052 12       		.uleb128 0x12
 590 0053 06       		.uleb128 0x6
 591 0054 40       		.uleb128 0x40
 592 0055 18       		.uleb128 0x18
 593 0056 9642     		.uleb128 0x2116
 594 0058 19       		.uleb128 0x19
 595 0059 01       		.uleb128 0x1
 596 005a 13       		.uleb128 0x13
 597 005b 00       		.byte	0
 598 005c 00       		.byte	0
 599 005d 07       		.uleb128 0x7
 600 005e 34       		.uleb128 0x34
 601 005f 00       		.byte	0
 602 0060 03       		.uleb128 0x3
 603 0061 0E       		.uleb128 0xe
 604 0062 3A       		.uleb128 0x3a
 605 0063 0B       		.uleb128 0xb
 606 0064 3B       		.uleb128 0x3b
 607 0065 0B       		.uleb128 0xb
 608 0066 49       		.uleb128 0x49
 609 0067 13       		.uleb128 0x13
 610 0068 02       		.uleb128 0x2
 611 0069 18       		.uleb128 0x18
 612 006a 00       		.byte	0
 613 006b 00       		.byte	0
 614 006c 08       		.uleb128 0x8
 615 006d 01       		.uleb128 0x1
 616 006e 01       		.byte	0x1
 617 006f 49       		.uleb128 0x49
 618 0070 13       		.uleb128 0x13
 619 0071 01       		.uleb128 0x1
 620 0072 13       		.uleb128 0x13
 621 0073 00       		.byte	0
 622 0074 00       		.byte	0
 623 0075 09       		.uleb128 0x9
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 15


 624 0076 21       		.uleb128 0x21
 625 0077 00       		.byte	0
 626 0078 49       		.uleb128 0x49
 627 0079 13       		.uleb128 0x13
 628 007a 2F       		.uleb128 0x2f
 629 007b 0B       		.uleb128 0xb
 630 007c 00       		.byte	0
 631 007d 00       		.byte	0
 632 007e 0A       		.uleb128 0xa
 633 007f 34       		.uleb128 0x34
 634 0080 00       		.byte	0
 635 0081 03       		.uleb128 0x3
 636 0082 0E       		.uleb128 0xe
 637 0083 3A       		.uleb128 0x3a
 638 0084 0B       		.uleb128 0xb
 639 0085 3B       		.uleb128 0x3b
 640 0086 05       		.uleb128 0x5
 641 0087 49       		.uleb128 0x49
 642 0088 13       		.uleb128 0x13
 643 0089 3F       		.uleb128 0x3f
 644 008a 19       		.uleb128 0x19
 645 008b 3C       		.uleb128 0x3c
 646 008c 19       		.uleb128 0x19
 647 008d 00       		.byte	0
 648 008e 00       		.byte	0
 649 008f 0B       		.uleb128 0xb
 650 0090 35       		.uleb128 0x35
 651 0091 00       		.byte	0
 652 0092 49       		.uleb128 0x49
 653 0093 13       		.uleb128 0x13
 654 0094 00       		.byte	0
 655 0095 00       		.byte	0
 656 0096 0C       		.uleb128 0xc
 657 0097 0F       		.uleb128 0xf
 658 0098 00       		.byte	0
 659 0099 0B       		.uleb128 0xb
 660 009a 0B       		.uleb128 0xb
 661 009b 49       		.uleb128 0x49
 662 009c 13       		.uleb128 0x13
 663 009d 00       		.byte	0
 664 009e 00       		.byte	0
 665 009f 0D       		.uleb128 0xd
 666 00a0 34       		.uleb128 0x34
 667 00a1 00       		.byte	0
 668 00a2 03       		.uleb128 0x3
 669 00a3 0E       		.uleb128 0xe
 670 00a4 3A       		.uleb128 0x3a
 671 00a5 0B       		.uleb128 0xb
 672 00a6 3B       		.uleb128 0x3b
 673 00a7 0B       		.uleb128 0xb
 674 00a8 49       		.uleb128 0x49
 675 00a9 13       		.uleb128 0x13
 676 00aa 3F       		.uleb128 0x3f
 677 00ab 19       		.uleb128 0x19
 678 00ac 02       		.uleb128 0x2
 679 00ad 18       		.uleb128 0x18
 680 00ae 00       		.byte	0
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 16


 681 00af 00       		.byte	0
 682 00b0 00       		.byte	0
 683              		.section	.debug_aranges,"",%progbits
 684 0000 1C000000 		.4byte	0x1c
 685 0004 0200     		.2byte	0x2
 686 0006 00000000 		.4byte	.Ldebug_info0
 687 000a 04       		.byte	0x4
 688 000b 00       		.byte	0
 689 000c 0000     		.2byte	0
 690 000e 0000     		.2byte	0
 691 0010 00000000 		.4byte	.LFB63
 692 0014 6C010000 		.4byte	.LFE63-.LFB63
 693 0018 00000000 		.4byte	0
 694 001c 00000000 		.4byte	0
 695              		.section	.debug_ranges,"",%progbits
 696              	.Ldebug_ranges0:
 697 0000 00000000 		.4byte	.LFB63
 698 0004 6C010000 		.4byte	.LFE63
 699 0008 00000000 		.4byte	0
 700 000c 00000000 		.4byte	0
 701              		.section	.debug_line,"",%progbits
 702              	.Ldebug_line0:
 703 0000 B2010000 		.section	.debug_str,"MS",%progbits,1
 703      02004701 
 703      00000201 
 703      FB0E0D00 
 703      01010101 
 704              	.LASF28:
 705 0000 433A5C55 		.ascii	"C:\\Users\\airamire\\Documents\\PSoC Creator\\USBFS"
 705      73657273 
 705      5C616972 
 705      616D6972 
 705      655C446F 
 706 002e 5F554152 		.ascii	"_UART01\\USBFS_UART01 WORKING.cydsn\000"
 706      5430315C 
 706      55534246 
 706      535F5541 
 706      52543031 
 707              	.LASF21:
 708 0051 73746174 		.ascii	"state\000"
 708      6500
 709              	.LASF9:
 710 0057 5F5F696E 		.ascii	"__int32_t\000"
 710      7433325F 
 710      7400
 711              	.LASF26:
 712 0061 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 712      4320342E 
 712      392E3320 
 712      32303135 
 712      30333033 
 713 0094 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 713      20726576 
 713      6973696F 
 713      6E203232 
 713      31323230 
 714 00c7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 17


 714      66756E63 
 714      74696F6E 
 714      2D736563 
 714      74696F6E 
 715              	.LASF13:
 716 00ef 666C6F61 		.ascii	"float\000"
 716      7400
 717              	.LASF1:
 718 00f5 756E7369 		.ascii	"unsigned char\000"
 718      676E6564 
 718      20636861 
 718      7200
 719              	.LASF15:
 720 0103 63686172 		.ascii	"char8\000"
 720      3800
 721              	.LASF5:
 722 0109 6C6F6E67 		.ascii	"long unsigned int\000"
 722      20756E73 
 722      69676E65 
 722      6420696E 
 722      7400
 723              	.LASF3:
 724 011b 73686F72 		.ascii	"short unsigned int\000"
 724      7420756E 
 724      7369676E 
 724      65642069 
 724      6E7400
 725              	.LASF25:
 726 012e 73746F70 		.ascii	"stop\000"
 726      00
 727              	.LASF23:
 728 0133 49544D5F 		.ascii	"ITM_RxBuffer\000"
 728      52784275 
 728      66666572 
 728      00
 729              	.LASF14:
 730 0140 646F7562 		.ascii	"double\000"
 730      6C6500
 731              	.LASF20:
 732 0147 74657374 		.ascii	"testLine\000"
 732      4C696E65 
 732      00
 733              	.LASF29:
 734 0150 6D61696E 		.ascii	"main\000"
 734      00
 735              	.LASF12:
 736 0155 75696E74 		.ascii	"uint16\000"
 736      313600
 737              	.LASF8:
 738 015c 756E7369 		.ascii	"unsigned int\000"
 738      676E6564 
 738      20696E74 
 738      00
 739              	.LASF7:
 740 0169 6C6F6E67 		.ascii	"long long unsigned int\000"
 740      206C6F6E 
 740      6720756E 
ARM GAS  C:\Users\airamire\AppData\Local\Temp\ccd9WmBg.s 			page 18


 740      7369676E 
 740      65642069 
 741              	.LASF10:
 742 0180 696E7433 		.ascii	"int32_t\000"
 742      325F7400 
 743              	.LASF17:
 744 0188 73697A65 		.ascii	"sizetype\000"
 744      74797065 
 744      00
 745              	.LASF6:
 746 0191 6C6F6E67 		.ascii	"long long int\000"
 746      206C6F6E 
 746      6720696E 
 746      7400
 747              	.LASF27:
 748 019f 6D61696E 		.ascii	"main.c\000"
 748      2E6300
 749              	.LASF16:
 750 01a6 63686172 		.ascii	"char\000"
 750      00
 751              	.LASF18:
 752 01ab 636F756E 		.ascii	"count\000"
 752      7400
 753              	.LASF2:
 754 01b1 73686F72 		.ascii	"short int\000"
 754      7420696E 
 754      7400
 755              	.LASF19:
 756 01bb 62756666 		.ascii	"buffer\000"
 756      657200
 757              	.LASF11:
 758 01c2 75696E74 		.ascii	"uint8\000"
 758      3800
 759              	.LASF4:
 760 01c8 6C6F6E67 		.ascii	"long int\000"
 760      20696E74 
 760      00
 761              	.LASF0:
 762 01d1 7369676E 		.ascii	"signed char\000"
 762      65642063 
 762      68617200 
 763              	.LASF24:
 764 01dd 70617269 		.ascii	"parity\000"
 764      747900
 765              	.LASF22:
 766 01e4 6C696E65 		.ascii	"lineStr\000"
 766      53747200 
 767              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
